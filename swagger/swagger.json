{
  "swagger": "2.0",
  "info": {
    "description": "QuantiModo makes it easy to retrieve normalized user data from a wide array of devices and applications. [Learn about QuantiModo](https://quantimo.do), check out our [docs](https://github.com/QuantiModo/docs) or contact us at [help.quantimo.do](https://help.quantimo.do).",
    "version": "5.8.728",
    "title": "quantimodo",
    "termsOfService": "https://quantimo.do/tos/",
    "contact": {
      "name": "info@quantimo.do"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath": "/api",
  "host": "app.quantimo.do",
  "tags": [
    {
      "name": "analytics",
      "description": "Identify the strongest predictors of a given outcome and generate studies",
      "externalDocs": {
        "description": "Try it out",
        "url": "https://app.quantimo.do/ionic/Modo/www/index.html#/app/predictor-search"
      }
    },
    {
      "name": "connectors",
      "description": "Import data from third-party apps and devices like Fitbit and Mint.",
      "externalDocs": {
        "description": "Import your data now",
        "url": "https://app.quantimo.do/ionic/Modo/www/#/app/import"
      }
    },
    {
      "name": "measurements",
      "description": "Measurements are any value that can be recorded like daily steps, a mood rating, or apples eaten.",
      "externalDocs": {
        "description": "See it in action",
        "url": "https://app.quantimo.do/ionic/Modo/www/#/app/history-all-category/Anything?accessToken=demo"
      }
    },
    {
      "name": "reminders",
      "description": "Users can be reminded to track certain variables at a specified frequency with a default value.",
      "externalDocs": {
        "description": "See it in action",
        "url": "https://app.quantimo.do/ionic/Modo/www/#/app/reminders-inbox?accessToken=demo"
      }
    },
    {
      "name": "units",
      "description": "Available units for measurements",
      "externalDocs": {
        "description": "See it in action",
        "url": "https://app.quantimo.do/ionic/Modo/www/#/app/measurement-search?accessToken=demo"
      }
    },
    {
      "name": "user",
      "description": "Get or update user info and settings",
      "externalDocs": {
        "description": "See it in action",
        "url": "https://app.quantimo.do/ionic/Modo/www/#/app/settings?accessToken=demo"
      }
    },
    {
      "name": "variables",
      "description": "Can be used for search autocomplete for data types like symptoms, foods and treatments and include statistics",
      "externalDocs": {
        "description": "Search for a variable",
        "url": "https://app.quantimo.do/ionic/Modo/www/#/app/reminder-search?accessToken=demo"
      }
    }
  ],
  "parameters": {
    "effectVariableNameParam": {
      "in": "query",
      "name": "effectVariableName",
      "description": "Variable name of the hypothetical effect variable.  Example: Overall Mood",
      "required": false,
      "type": "string"
    },
    "causeVariableNameParam": {
      "in": "query",
      "name": "causeVariableName",
      "description": "Variable name of the hypothetical cause variable.  Example: Sleep Duration",
      "required": false,
      "type": "string"
    },
    "connectorNamePathParam": {
      "in": "path",
      "name": "connectorName",
      "description": "Lowercase system name of the source application or device. Get a list of available connectors from the /v3/connectors/list endpoint.",
      "required": true,
      "type": "string",
      "enum": [
        "myfitnesspal",
        "runkeeper",
        "whatpulse",
        "github",
        "moodscope",
        "up",
        "fitbit",
        "facebook",
        "withings",
        "moodpanda",
        "rescuetime",
        "mynetdiary",
        "worldweatheronline",
        "sleepcloud",
        "slice",
        "googlecalendar",
        "googlefit",
        "medhelper",
        "mint",
        "slack",
        "netatmo"
      ]
    },
    "variableCategoryNameParam": {
      "in": "query",
      "name": "variableCategoryName",
      "description": "Limit results to a specific variable category",
      "required": false,
      "type": "string",
      "enum": [
        "Emotions",
        "Physique",
        "Physical Activity",
        "Location",
        "Miscellaneous",
        "Sleep",
        "Social Interactions",
        "Vital Signs",
        "Cognitive Performance",
        "Symptoms",
        "Nutrients",
        "Work",
        "Treatments",
        "Activity",
        "Foods",
        "Conditions",
        "Environment",
        "Causes of Illness",
        "Books",
        "Software",
        "Payments",
        "Movies and TV",
        "Music"
      ]
    },
    "sortParam": {
      "in": "query",
      "name": "sort",
      "description": "Sort by one of the listed field names. If the field name is prefixed with `-`, it will sort in descending order.",
      "required": false,
      "type": "string"
    },
    "userIdParam": {
      "in": "query",
      "name": "userId",
      "description": "User's id",
      "required": false,
      "type": "number"
    },
    "latestMeasurementTimeParam": {
      "in": "query",
      "name": "latestMeasurementTime",
      "description": "Excluded records with measurement times later than this value. Use UTC ISO 8601 `YYYY-MM-DDThh:mm:ss`  datetime format. Time zone should be UTC and not local.",
      "required": false,
      "type": "string"
    },
    "earliestMeasurementTimeParam": {
      "in": "query",
      "name": "earliestMeasurementTime",
      "description": "Excluded records with measurement times earlier than this value. Use UTC ISO 8601 `YYYY-MM-DDThh:mm:ss`  datetime format. Time zone should be UTC and not local.",
      "required": false,
      "type": "string"
    },
    "createdAtParam": {
      "in": "query",
      "name": "createdAt",
      "description": "When the record was first created. Use UTC ISO 8601 `YYYY-MM-DDThh:mm:ss` datetime format. Time zone should be UTC and not local.",
      "required": false,
      "type": "string"
    },
    "updatedAtParam": {
      "in": "query",
      "name": "updatedAt",
      "description": "When the record was last updated. Use UTC ISO 8601 `YYYY-MM-DDThh:mm:ss` datetime format. Time zone should be UTC and not local.",
      "required": false,
      "type": "string"
    },
    "offsetParam": {
      "in": "query",
      "name": "offset",
      "required": false,
      "type": "integer",
      "minimum": 0,
      "description": "OFFSET says to skip that many rows before beginning to return rows to the client. OFFSET 0 is the same as omitting the OFFSET clause.If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting to count the LIMIT rows that are returned."
    },
    "limitParam": {
      "in": "query",
      "name": "limit",
      "required": false,
      "type": "integer",
      "default": 100,
      "description": "The LIMIT is used to limit the number of results returned. So if youhave 1000 results, but only want to the first 10, you would set this to 10 and offset to 0. The maximum limit is 200 records."
    },
    "clientIdParam": {
      "name": "clientId",
      "required": false,
      "description": "Example: oauth_test_client",
      "in": "query",
      "type": "string"
    },
    "appNameParam": {
      "name": "appName",
      "required": false,
      "description": "Example: MoodiModo",
      "in": "query",
      "type": "string"
    },
    "appVersionParam": {
      "name": "appVersion",
      "required": false,
      "description": "Example: 2.1.1.0",
      "in": "query",
      "type": "string"
    },
    "reminderFrequencyParam": {
      "name": "reminderFrequency",
      "required": false,
      "description": "How often user should be reminded in seconds. Example: 86400",
      "in": "query",
      "type": "string"
    },
    "unitNameParam": {
      "name": "unitName",
      "required": false,
      "description": "Example: 86400",
      "in": "query",
      "type": "string",
      "enum": [
        "% Recommended Daily Allowance",
        "-4 to 4 Rating",
        "0 to 1 Rating",
        "0 to 5 Rating",
        "1 to 10 Rating",
        "1 to 5 Rating",
        "Applications",
        "Beats per Minute",
        "Calories",
        "Capsules",
        "Centimeters",
        "Count",
        "Degrees Celsius",
        "Degrees East",
        "Degrees Fahrenheit",
        "Degrees North",
        "Dollars",
        "Drops",
        "Event",
        "Feet",
        "Grams",
        "Hours",
        "Inches",
        "Index",
        "Kilocalories",
        "Kilograms",
        "Kilometers",
        "Liters",
        "Meters",
        "Micrograms",
        "Micrograms per decilitre",
        "Miles",
        "Milligrams",
        "Milliliters",
        "Millimeters",
        "Millimeters Merc",
        "Milliseconds",
        "Minutes",
        "Pascal",
        "per Minute",
        "Percent",
        "Pieces",
        "Pills",
        "Pounds",
        "Puffs",
        "Seconds",
        "Serving",
        "Sprays",
        "Tablets",
        "Torr",
        "Units",
        "Yes/No"
      ]
    },
    "correlationCoefficientParam": {
      "in": "query",
      "name": "correlationCoefficient",
      "description": "Pearson correlation coefficient between cause and effect after lagging by onset delay and grouping by duration of action",
      "required": false,
      "type": "string"
    },
    "onsetDelayParam": {
      "in": "query",
      "name": "onsetDelay",
      "description": "The amount of time in seconds that elapses after the predictor/stimulus event before the outcome as perceived by a self-tracker is known as the onset delay. For example, the onset delay between the time a person takes an aspirin (predictor/stimulus event) and the time a person perceives a change in their headache severity (outcome) is approximately 30 minutes.",
      "required": false,
      "type": "string"
    },
    "durationOfActionParam": {
      "in": "query",
      "name": "durationOfAction",
      "description": "The amount of time over which a predictor/stimulus event can exert an observable influence on an outcome variable value. For instance, aspirin (stimulus/predictor) typically decreases headache severity for approximately four hours (duration of action) following the onset delay.",
      "required": false,
      "type": "string"
    },
    "outcomesOfInterestParam": {
      "in": "query",
      "name": "outcomesOfInterest",
      "description": "Only include correlations for which the effect is an outcome of interest for the user",
      "required": false,
      "type": "boolean"
    },
    "variableNameParam": {
      "in": "query",
      "name": "variableName",
      "description": "Name of the variable you want measurements for",
      "required": false,
      "type": "string"
    },
    "sourceNameParam": {
      "in": "query",
      "name": "sourceName",
      "description": "ID of the source you want measurements for (supports exact name match only)",
      "required": false,
      "type": "string"
    },
    "valueParam": {
      "in": "query",
      "name": "value",
      "description": "Value of measurement",
      "required": false,
      "type": "string"
    },
    "groupingWidthParam": {
      "in": "query",
      "name": "groupingWidth",
      "description": "The time (in seconds) over which measurements are grouped together",
      "required": false,
      "type": "integer"
    },
    "groupingTimezoneParam": {
      "in": "query",
      "name": "groupingTimezone",
      "description": "The time (in seconds) over which measurements are grouped together",
      "required": false,
      "type": "string"
    },
    "clientSecretParam": {
      "in": "query",
      "name": "client_secret",
      "description": "This is the secret for your obtained clientId. QuantiModo uses this to validate that only your application uses the clientId.  Obtain this by creating a free application at [https://app.quantimo.do/api/v2/apps](https://app.quantimo.do/api/v2/apps).",
      "required": true,
      "type": "string"
    },
    "responseTypeParam": {
      "in": "query",
      "name": "response_type",
      "description": "If the value is code, launches a Basic flow, requiring a POST to the token endpoint to obtain the tokens. If the value is token id_token or id_token token, launches an Implicit flow, requiring the use of Javascript at the redirect URI to retrieve tokens from the URI #fragment.",
      "required": true,
      "type": "string"
    },
    "scopeParam": {
      "in": "query",
      "name": "scope",
      "description": "Scopes include basic, readmeasurements, and writemeasurements. The `basic` scope allows you to read user info (displayName, email, etc). The `readmeasurements` scope allows one to read a user's data. The `writemeasurements` scope allows you to write user data. Separate multiple scopes by a space.",
      "required": true,
      "type": "string"
    },
    "redirectUriParam": {
      "in": "query",
      "name": "redirect_uri",
      "description": "The redirect URI is the URL within your client application that will receive the OAuth2 credentials.",
      "required": false,
      "type": "string"
    },
    "stateParam": {
      "in": "query",
      "name": "state",
      "description": "An opaque string that is round-tripped in the protocol; that is to say, it is returned as a URI parameter in the Basic flow, and in the URI",
      "required": false,
      "type": "string"
    },
    "grantTypeParam": {
      "in": "query",
      "name": "grant_type",
      "description": "Grant Type can be 'authorization_code' or 'refresh_token'",
      "required": true,
      "type": "string"
    },
    "codeParam": {
      "in": "query",
      "name": "code",
      "description": "Authorization code you received with the previous request.",
      "required": true,
      "type": "string"
    },
    "causeUnitNameParam": {
      "in": "query",
      "name": "causeUnitName",
      "description": "Name for the unit cause measurements to be returned in",
      "required": false,
      "type": "string"
    },
    "effectUnitNameParam": {
      "in": "query",
      "name": "effectUnitName",
      "description": "Name for the unit effect measurements to be returned in",
      "required": false,
      "type": "string"
    },
    "taggedVariableIdParam": {
      "in": "query",
      "name": "taggedVariableId",
      "description": "This is the id of the variable being tagged with an ingredient or something.",
      "required": true,
      "type": "integer"
    },
    "tagVariableIdParam": {
      "in": "query",
      "name": "tagVariableId",
      "description": "This is the id of the ingredient variable whose value is determined based on the value of the tagged variable.",
      "required": true,
      "type": "integer"
    },
    "userVariablesParam": {
      "in": "body",
      "name": "userVariables",
      "description": "Variable user settings data",
      "required": true,
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/UserVariable"
        }
      }
    },
    "numberOfRawMeasurementsParam": {
      "in": "query",
      "name": "numberOfRawMeasurements",
      "description": "Filter variables by the total number of measurements that they have. This could be used of you want to filter or sort by popularity.",
      "required": false,
      "type": "string"
    },
    "lastSourceParam": {
      "in": "query",
      "name": "lastSourceName",
      "description": "Limit variables to those which measurements were last submitted by a specific source. So if you have a client application and you only want variables that were last updated by your app, you can include the name of your app here",
      "required": false,
      "type": "string"
    },
    "variableIdBodyParam": {
      "in": "body",
      "name": "variableId",
      "description": "Id of the variable whose measurements should be deleted",
      "required": true,
      "schema": {
        "$ref": "#/definitions/UserVariableDelete"
      }
    },
    "reminderTimeParam": {
      "name": "reminderTime",
      "required": false,
      "description": "Example: (lt)2017-07-31 21:43:26",
      "in": "query",
      "type": "string"
    },
    "doNotProcessParam": {
      "name": "doNotProcess",
      "required": false,
      "description": "Example: true",
      "in": "query",
      "type": "boolean"
    },
    "includePublicParam": {
      "name": "includePublic",
      "required": false,
      "description": "Example: true",
      "in": "query",
      "type": "boolean"
    },
    "fallbackToAggregatedCorrelationsParam": {
      "name": "fallbackToAggregatedCorrelations",
      "required": false,
      "description": "Example: true",
      "in": "query",
      "type": "boolean"
    },
    "numberOfUserCorrelationsAsCauseParam": {
      "name": "numberOfUserCorrelationsAsCause",
      "required": false,
      "description": "Example: (gt)1",
      "in": "query",
      "type": "string"
    },
    "numberOfUserCorrelationsAsEffectParam": {
      "name": "numberOfUserCorrelationsAsEffect",
      "required": false,
      "description": "Example: (gt)1",
      "in": "query",
      "type": "string"
    },
    "outcomeParam": {
      "name": "outcome",
      "required": false,
      "description": "Example: true",
      "in": "query",
      "type": "boolean"
    },
    "includeChartsParam": {
      "name": "includeCharts",
      "required": false,
      "description": "Example: true",
      "in": "query",
      "type": "boolean"
    },
    "includeTagsParam": {
      "name": "includeTags",
      "required": false,
      "description": "Example: true",
      "in": "query",
      "type": "boolean"
    },
    "fallbackToAggregateCorrelationsParam": {
      "name": "fallbackToAggregateCorrelations",
      "required": false,
      "description": "Example: true",
      "in": "query",
      "type": "boolean"
    },
    "fallbackToStudyForCauseAndEffectParam": {
      "name": "fallbackToStudyForCauseAndEffect",
      "required": false,
      "description": "Example: 1",
      "in": "query",
      "type": "boolean"
    },
    "reminderStartTimeParam": {
      "name": "reminderStartTime",
      "required": false,
      "description": "Example: 20:00:00",
      "in": "query",
      "type": "string"
    },
    "startTrackingDateParam": {
      "name": "startTrackingDate",
      "required": false,
      "description": "Example: 2017-08-07",
      "in": "query",
      "type": "string"
    },
    "stopTrackingDateParam": {
      "name": "stopTrackingDate",
      "required": false,
      "description": "Example: 2117-08-07",
      "in": "query",
      "type": "string"
    },
    "variableCategoryIdParam": {
      "name": "variableCategoryId",
      "required": false,
      "description": "Example: 13",
      "in": "query",
      "type": "integer"
    },
    "includeDeletedParam": {
      "name": "includeDeleted",
      "required": false,
      "description": "Example: ",
      "in": "query",
      "type": "boolean"
    },
    "unitAbbreviatedNameParam": {
      "name": "unitAbbreviatedName",
      "required": false,
      "description": "Example: /5",
      "in": "query",
      "type": "string"
    },
    "doNotCreateNewCommonVariablesParam": {
      "name": "doNotCreateNewCommonVariables",
      "required": false,
      "description": "Example: ",
      "in": "query",
      "type": "boolean"
    },
    "unitIdParam": {
      "name": "unitId",
      "required": false,
      "description": "Example: 10",
      "in": "query",
      "type": "integer"
    },
    "minimumReminderTimeUtcStringParam": {
      "name": "minimumReminderTimeUtcString",
      "required": false,
      "description": "Example: 2017-08-06T23:20:11+00:00",
      "in": "query",
      "type": "string"
    },
    "maximumReminderTimeUtcStringParam": {
      "name": "maximumReminderTimeUtcString",
      "required": false,
      "description": "Example: 2017-08-08T23:20:11+00:00",
      "in": "query",
      "type": "string"
    },
    "effectOrCauseParam": {
      "name": "effectOrCause",
      "required": false,
      "description": "Example: ",
      "in": "query",
      "type": "string"
    },
    "publicEffectOrCauseParam": {
      "name": "publicEffectOrCause",
      "required": false,
      "description": "Example: ",
      "in": "query",
      "type": "string"
    },
    "exactMatchParam": {
      "name": "exactMatch",
      "required": false,
      "description": "Example: ",
      "in": "query",
      "type": "boolean"
    },
    "manualTrackingParam": {
      "name": "manualTracking",
      "required": false,
      "description": "Example: ",
      "in": "query",
      "type": "boolean"
    },
    "includePrivateParam": {
      "name": "includePrivate",
      "required": false,
      "description": "Example: ",
      "in": "query",
      "type": "boolean"
    },
    "searchPhraseParam": {
      "name": "searchPhrase",
      "required": false,
      "description": "Example: %Body Fat%",
      "in": "query",
      "type": "string"
    },
    "synonymsParam": {
      "name": "synonyms",
      "required": false,
      "description": "Example: %McDonalds hotcake%",
      "in": "query",
      "type": "string"
    },
    "numberOfAggregatedCorrelationsAsEffectParam": {
      "name": "numberOfAggregatedCorrelationsAsEffect",
      "required": false,
      "description": "Example: (gt)1",
      "in": "query",
      "type": "string"
    },
    "onlyPastParam": {
      "name": "onlyPast",
      "required": false,
      "description": "Example: 1",
      "in": "query",
      "type": "boolean"
    },
    "doNotConvertParam": {
      "name": "doNotConvert",
      "required": false,
      "description": "Example: 1",
      "in": "query",
      "type": "boolean"
    },
    "minMaxFilterParam": {
      "name": "minMaxFilter",
      "required": false,
      "description": "Example: 1",
      "in": "query",
      "type": "boolean"
    },
    "clientUserIdParam": {
      "name": "clientUserId",
      "required": false,
      "description": "Example: 74802",
      "in": "query",
      "type": "integer"
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v3/integration.js": {
      "get": {
        "operationId": "getIntegrationJs",
        "tags": [
          "connectors"
        ],
        "summary": "Get embeddable connect javascript",
        "description": "Get embeddable connect javascript. Usage:\n  - Embedding in applications with popups for 3rd-party authentication\nwindows.\n    Use `qmSetupInPopup` function after connecting `connect.js`.\n  - Embedding in applications with popups for 3rd-party authentication\nwindows.\n    Requires a selector to block. It will be embedded in this block.\n    Use `qmSetupOnPage` function after connecting `connect.js`.\n  - Embedding in mobile applications without popups for 3rd-party\nauthentication.\n    Use `qmSetupOnMobile` function after connecting `connect.js`.\n    If using in a Cordova application call  `qmSetupOnIonic` function after connecting `connect.js`.",
        "produces": [
          "application/x-javascript"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/clientIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Embeddable connect javascript was returned"
          }
        }
      }
    },
    "/v3/connect/mobile": {
      "get": {
        "operationId": "getMobileConnectPage",
        "tags": [
          "connectors"
        ],
        "summary": "Mobile connect page",
        "description": "This page is designed to be opened in a webview.  Instead of using popup authentication boxes, it uses redirection. You can include the user's access_token as a URL parameter like https://app.quantimo.do/api/v3/connect/mobile?access_token=123",
        "produces": [
          "text/html"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Mobile connect page was returned"
          },
          "401": {
            "description": "User token is missing"
          },
          "403": {
            "description": "User token is incorrect"
          }
        }
      }
    },
    "/v3/connectors/list": {
      "get": {
        "operationId": "getConnectors",
        "tags": [
          "connectors"
        ],
        "summary": "List of Connectors",
        "description": "A connector pulls data from other data providers using their API or a screenscraper. Returns a list of all available connectors and information about them such as their id, name, whether the user has provided access, logo url, connection instructions, and the update history.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/GetConnectorsResponse"
            }
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/appNameParam"
          },
          {
            "$ref": "#/parameters/clientIdParam"
          }
        ]
      }
    },
    "/v3/connectors/{connectorName}/connect": {
      "get": {
        "operationId": "connectConnector",
        "tags": [
          "connectors"
        ],
        "summary": "Obtain a token from 3rd party data source",
        "description": "Attempt to obtain a token from the data provider, store it in the database. With this, the connector to continue to obtain new user data until the token is revoked.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userIdParam"
          },
          {
            "$ref": "#/parameters/connectorNamePathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Not Authenticated"
          },
          "404": {
            "description": "Method not found. Could not execute the requested method."
          },
          "500": {
            "description": "Error during update. Unsupported response from update()."
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/connectors/{connectorName}/disconnect": {
      "get": {
        "operationId": "disconnectConnector",
        "tags": [
          "connectors"
        ],
        "summary": "Delete stored connection info",
        "description": "The disconnect method deletes any stored tokens or connection information from the connectors database.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/connectorNamePathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Not Authenticated"
          },
          "404": {
            "description": "Method not found. Could not execute the requested method."
          },
          "500": {
            "description": "Error during update. Unsupported response from update()."
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/connectors/{connectorName}/update": {
      "get": {
        "operationId": "updateConnector",
        "tags": [
          "connectors"
        ],
        "summary": "Sync with data source",
        "description": "The update method tells the QM Connector Framework to check with the data provider (such as Fitbit or MyFitnessPal) and retrieve any new measurements available.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userIdParam"
          },
          {
            "$ref": "#/parameters/connectorNamePathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Connection Successful"
          },
          "401": {
            "description": "Not Authenticated"
          },
          "404": {
            "description": "Method not found. Could not execute the requested method."
          },
          "500": {
            "description": "Error during update. Unsupported response from update()."
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/correlations": {
      "get": {
        "operationId": "getUserCorrelations",
        "tags": [
          "analytics"
        ],
        "summary": "Get correlations",
        "description": "Get correlations based on data from a single user.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userIdParam"
          },
          {
            "$ref": "#/parameters/effectVariableNameParam"
          },
          {
            "$ref": "#/parameters/causeVariableNameParam"
          },
          {
            "$ref": "#/parameters/correlationCoefficientParam"
          },
          {
            "$ref": "#/parameters/onsetDelayParam"
          },
          {
            "$ref": "#/parameters/durationOfActionParam"
          },
          {
            "$ref": "#/parameters/updatedAtParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/sortParam"
          },
          {
            "$ref": "#/parameters/outcomesOfInterestParam"
          },
          {
            "$ref": "#/parameters/appNameParam"
          },
          {
            "$ref": "#/parameters/clientIdParam"
          },
          {
            "$ref": "#/parameters/fallbackToStudyForCauseAndEffectParam"
          },
          {
            "$ref": "#/parameters/fallbackToAggregateCorrelationsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/GetCorrelationsResponse"
            }
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/correlations/explanations": {
      "get": {
        "operationId": "getUserCorrelationExplantions",
        "tags": [
          "analytics"
        ],
        "summary": "Get correlation explanations",
        "description": "Get explanations of  correlations based on data from a single user.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/effectVariableNameParam"
          },
          {
            "$ref": "#/parameters/causeVariableNameParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserCorrelation"
              }
            }
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/aggregatedCorrelations": {
      "get": {
        "operationId": "getAggregatedCorrelations",
        "tags": [
          "analytics"
        ],
        "summary": "Get aggregated correlations",
        "description": "Get correlations based on the anonymized aggregate data from all QuantiModo users.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userIdParam"
          },
          {
            "$ref": "#/parameters/effectVariableNameParam"
          },
          {
            "$ref": "#/parameters/causeVariableNameParam"
          },
          {
            "$ref": "#/parameters/correlationCoefficientParam"
          },
          {
            "$ref": "#/parameters/onsetDelayParam"
          },
          {
            "$ref": "#/parameters/durationOfActionParam"
          },
          {
            "$ref": "#/parameters/updatedAtParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/sortParam"
          },
          {
            "$ref": "#/parameters/outcomesOfInterestParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AggregatedCorrelationArray"
            }
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      },
      "post": {
        "operationId": "postAggregatedCorrelations",
        "tags": [
          "analytics"
        ],
        "summary": "Store or Update a Correlation",
        "description": "Add correlation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userIdParam"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Provides correlation data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostCorrelation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Operation"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/JsonErrorResponse"
            }
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/measurements": {
      "get": {
        "operationId": "getMeasurements",
        "tags": [
          "measurements"
        ],
        "summary": "Get measurements for this user",
        "description": "Measurements are any value that can be recorded like daily steps, a mood rating, or apples eaten.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userIdParam"
          },
          {
            "in": "query",
            "name": "id",
            "description": "Measurement id",
            "required": false,
            "type": "integer"
          },
          {
            "$ref": "#/parameters/variableNameParam"
          },
          {
            "$ref": "#/parameters/variableCategoryNameParam"
          },
          {
            "$ref": "#/parameters/sourceNameParam"
          },
          {
            "$ref": "#/parameters/valueParam"
          },
          {
            "$ref": "#/parameters/unitNameParam"
          },
          {
            "$ref": "#/parameters/earliestMeasurementTimeParam"
          },
          {
            "$ref": "#/parameters/latestMeasurementTimeParam"
          },
          {
            "$ref": "#/parameters/createdAtParam"
          },
          {
            "$ref": "#/parameters/updatedAtParam"
          },
          {
            "$ref": "#/parameters/groupingWidthParam"
          },
          {
            "$ref": "#/parameters/groupingTimezoneParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/sortParam"
          },
          {
            "$ref": "#/parameters/doNotProcessParam"
          },
          {
            "$ref": "#/parameters/appNameParam"
          },
          {
            "$ref": "#/parameters/clientIdParam"
          },
          {
            "$ref": "#/parameters/doNotConvertParam"
          },
          {
            "$ref": "#/parameters/minMaxFilterParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MeasurementArray"
            }
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "readmeasurements"
            ]
          }
        ]
      },
      "post": {
        "operationId": "postMeasurements",
        "tags": [
          "measurements"
        ],
        "summary": "Post a new set or update existing measurements to the database",
        "description": "You can submit or update multiple measurements in a \"measurements\" sub-array.  If the variable these measurements correspond to does not already exist in the database, it will be automatically added.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userIdParam"
          },
          {
            "in": "body",
            "name": "body",
            "description": "An array of measurement sets containing measurement items you want to insert.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MeasurementSet"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PostMeasurementsResponse"
            }
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "writemeasurements"
            ]
          }
        ]
      }
    },
    "/v3/measurements/delete": {
      "delete": {
        "operationId": "deleteMeasurement",
        "tags": [
          "measurements"
        ],
        "summary": "Delete a measurement",
        "description": "Delete a previously submitted measurement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The startTime and variableId of the measurement to be deleted.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MeasurementDelete"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Operation",
            "schema": {
              "$ref": "#/definitions/CommonResponse"
            }
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "writemeasurements"
            ]
          }
        ]
      }
    },
    "/v3/measurements/update": {
      "post": {
        "tags": [
          "measurements"
        ],
        "summary": "Update a measurement",
        "description": "Delete a previously submitted measurement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The id as well as the new startTime, note, and/or value of the measurement to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MeasurementUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Operation",
            "schema": {
              "$ref": "#/definitions/CommonResponse"
            }
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v2/measurements/exportRequest": {
      "post": {
        "operationId": "measurementExportRequest",
        "tags": [
          "measurements"
        ],
        "summary": "Post Request for Measurements CSV",
        "description": "Use this endpoint to schedule a CSV export containing all user measurements to be emailed to the user within 24 hours.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userIdParam"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "type": "integer"
            }
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/oauth2/authorize": {
      "get": {
        "operationId": "getOauthAuthorizationCode",
        "tags": [
          "authentication"
        ],
        "summary": "Request Authorization Code",
        "description": "You can implement OAuth2 authentication to your application using our **OAuth2** endpoints.  You need to redirect users to `/api/v3/oauth2/authorize` endpoint to get an authorization code and include the parameters below.   This page will ask the user if they want to allow a client's application to submit or obtain data from their QM account. It will redirect the user to the url provided by the client application with the code as a query parameter or error in case of an error. See the /api/v2/oauth/access_token endpoint for the next steps.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/clientIdParam"
          },
          {
            "$ref": "#/parameters/clientSecretParam"
          },
          {
            "$ref": "#/parameters/responseTypeParam"
          },
          {
            "$ref": "#/parameters/scopeParam"
          },
          {
            "$ref": "#/parameters/redirectUriParam"
          },
          {
            "$ref": "#/parameters/stateParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation"
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/oauth2/token": {
      "get": {
        "operationId": "getAccessToken",
        "tags": [
          "authentication"
        ],
        "summary": "Get a user access token",
        "description": "Client provides authorization token obtained from /api/v3/oauth2/authorize to this endpoint and receives an access token. Access token can then be used to query different API endpoints of QuantiModo. ### Request Access Token After user approves your access to the given scope form the https:/app.quantimo.do/v2/oauth2/authorize endpoint, you'll receive an authorization code to request an access token. This time make a `POST` request to `/api/v2/oauth/access_token` with parameters including: * `grant_type` Can be `authorization_code` or `refresh_token` since we are getting the `access_token` for the first time we don't have a `refresh_token` so this must be `authorization_code`. * `code` Authorization code you received with the previous request. * `redirect_uri` Your application's redirect url. ### Refreshing Access Token Access tokens expire at some point, to continue using our api you need to refresh them with `refresh_token` you received along with the `access_token`. To do this make a `POST` request to `/api/v2/oauth/access_token` with correct parameters, which are: * `grant_type` This time grant type must be `refresh_token` since we have it. * `clientId` Your application's client id. * `client_secret` Your application's client secret. * `refresh_token` The refresh token you received with the `access_token`. Every request you make to this endpoint will give you a new refresh token and make the old one expired. So you can keep getting new access tokens with new refresh tokens. ### Using Access Token Currently we support 2 ways for this, you can't use both at the same time. * Adding access token to the request header as `Authorization: Bearer {access_token}` * Adding to the url as a query parameter `?access_token={access_token}` You can read more about OAuth2 from [here](http://oauth.net/2/)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/clientIdParam"
          },
          {
            "$ref": "#/parameters/clientSecretParam"
          },
          {
            "$ref": "#/parameters/grantTypeParam"
          },
          {
            "$ref": "#/parameters/codeParam"
          },
          {
            "$ref": "#/parameters/responseTypeParam"
          },
          {
            "$ref": "#/parameters/scopeParam"
          },
          {
            "$ref": "#/parameters/redirectUriParam"
          },
          {
            "$ref": "#/parameters/stateParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation"
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/pairs": {
      "get": {
        "operationId": "getPairs",
        "tags": [
          "measurements"
        ],
        "summary": "Get pairs of measurements for correlational analysis",
        "description": "Pairs cause measurements with effect measurements grouped over the duration of action after the onset delay.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userIdParam"
          },
          {
            "$ref": "#/parameters/effectVariableNameParam"
          },
          {
            "$ref": "#/parameters/causeVariableNameParam"
          },
          {
            "$ref": "#/parameters/causeUnitNameParam"
          },
          {
            "$ref": "#/parameters/onsetDelayParam"
          },
          {
            "$ref": "#/parameters/durationOfActionParam"
          },
          {
            "$ref": "#/parameters/effectUnitNameParam"
          },
          {
            "$ref": "#/parameters/earliestMeasurementTimeParam"
          },
          {
            "$ref": "#/parameters/latestMeasurementTimeParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/sortParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PairArray"
            }
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/trackingReminders": {
      "get": {
        "operationId": "getTrackingReminders",
        "tags": [
          "reminders"
        ],
        "summary": "Get repeating tracking reminder settings",
        "description": "Users can be reminded to track certain variables at a specified frequency with a default value.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userIdParam"
          },
          {
            "$ref": "#/parameters/variableCategoryNameParam"
          },
          {
            "$ref": "#/parameters/createdAtParam"
          },
          {
            "$ref": "#/parameters/updatedAtParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/sortParam"
          },
          {
            "$ref": "#/parameters/appNameParam"
          },
          {
            "$ref": "#/parameters/clientIdParam"
          },
          {
            "$ref": "#/parameters/appVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TrackingReminderArray"
            }
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      },
      "post": {
        "operationId": "postTrackingReminders",
        "tags": [
          "reminders"
        ],
        "summary": "Store a Tracking Reminder",
        "description": "This is to enable users to create reminders to track a variable with a default value at a specified frequency",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "TrackingReminder that should be stored",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TrackingReminderArray"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PostTrackingRemindersResponse"
            }
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/trackingReminders/delete": {
      "delete": {
        "operationId": "deleteTrackingReminder",
        "tags": [
          "reminders"
        ],
        "summary": "Delete tracking reminder",
        "description": "Delete previously created tracking reminder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userIdParam"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Id of reminder to be deleted",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TrackingReminderDelete"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Operation",
            "schema": {
              "$ref": "#/definitions/CommonResponse"
            }
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/trackingReminderNotifications": {
      "get": {
        "operationId": "getTrackingReminderNotifications",
        "tags": [
          "reminders"
        ],
        "summary": "Get specific tracking reminder notifications",
        "description": "Specific tracking reminder notification instances that still need to be tracked.  ",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userIdParam"
          },
          {
            "$ref": "#/parameters/variableCategoryNameParam"
          },
          {
            "$ref": "#/parameters/createdAtParam"
          },
          {
            "$ref": "#/parameters/updatedAtParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/sortParam"
          },
          {
            "$ref": "#/parameters/reminderTimeParam"
          },
          {
            "$ref": "#/parameters/appNameParam"
          },
          {
            "$ref": "#/parameters/clientIdParam"
          },
          {
            "$ref": "#/parameters/onlyPastParam"
          },
          {
            "$ref": "#/parameters/includeDeletedParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/GetTrackingReminderNotificationsResponse"
            }
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      },
      "post": {
        "operationId": "postTrackingReminderNotifications",
        "tags": [
          "reminders"
        ],
        "summary": "Snooze, skip, or track a tracking reminder notification",
        "description": "Snooze, skip, or track a tracking reminder notification",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userIdParam"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Id of the tracking reminder notification to be snoozed",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrackingReminderNotificationPost"
              },
              "description": "Array of TrackingReminderNotifications to take action on"
            }
          },
          {
            "$ref": "#/parameters/appNameParam"
          },
          {
            "$ref": "#/parameters/clientIdParam"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Operation",
            "schema": {
              "$ref": "#/definitions/CommonResponse"
            }
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/units": {
      "get": {
        "operationId": "getUnits",
        "tags": [
          "units"
        ],
        "summary": "Get units",
        "description": "Get a list of the available measurement units",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Unit"
              },
              "description": "Array of units"
            }
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/unitCategories": {
      "get": {
        "operationId": "getUnitCategories",
        "tags": [
          "units"
        ],
        "summary": "Get unit categories",
        "description": "Get a list of the categories of measurement units such as 'Distance', 'Duration', 'Energy', 'Frequency', 'Miscellany', 'Pressure', 'Proportion', 'Rating', 'Temperature', 'Volume', and 'Weight'.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UnitCategory"
              }
            }
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/user": {
      "get": {
        "operationId": "getUser",
        "tags": [
          "user"
        ],
        "summary": "Get user info",
        "description": "Returns user info.  If no userId is specified, returns info for currently authenticated user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userIdParam"
          },
          {
            "$ref": "#/parameters/createdAtParam"
          },
          {
            "$ref": "#/parameters/updatedAtParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/sortParam"
          },
          {
            "$ref": "#/parameters/clientIdParam"
          },
          {
            "$ref": "#/parameters/appNameParam"
          },
          {
            "$ref": "#/parameters/appVersionParam"
          },
          {
            "$ref": "#/parameters/clientUserIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/userTags": {
      "post": {
        "operationId": "postUserTags",
        "tags": [
          "variables"
        ],
        "summary": "Post or update user tags or ingredients",
        "description": "This endpoint allows users to tag foods with their ingredients.  This information will then be used to infer the user intake of the different ingredients by just entering the foods. The inferred intake levels will then be used to determine the effects of different nutrients on the user during analysis.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userIdParam"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Contains the new user tag data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserTag"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Operation",
            "schema": {
              "$ref": "#/definitions/CommonResponse"
            }
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/userTags/delete": {
      "delete": {
        "operationId": "deleteUserTag",
        "tags": [
          "variables"
        ],
        "summary": "Delete user tag or ingredient",
        "description": "Delete previously created user tags or ingredients.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/taggedVariableIdParam"
          },
          {
            "$ref": "#/parameters/tagVariableIdParam"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Operation",
            "schema": {
              "$ref": "#/definitions/CommonResponse"
            }
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/userVariables": {
      "post": {
        "operationId": "postUserVariables",
        "tags": [
          "variables"
        ],
        "summary": "Update User Settings for a Variable",
        "description": "Users can change the parameters used in analysis of that variable such as the expected duration of action for a variable to have an effect, the estimated delay before the onset of action. In order to filter out erroneous data, they are able to set the maximum and minimum reasonable daily values for a variable.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userVariablesParam"
          },
          {
            "$ref": "#/parameters/appNameParam"
          },
          {
            "$ref": "#/parameters/clientIdParam"
          },
          {
            "$ref": "#/parameters/includePublicParam"
          },
          {
            "$ref": "#/parameters/searchPhraseParam"
          },
          {
            "$ref": "#/parameters/includePrivateParam"
          },
          {
            "$ref": "#/parameters/exactMatchParam"
          },
          {
            "$ref": "#/parameters/manualTrackingParam"
          },
          {
            "$ref": "#/parameters/variableCategoryNameParam"
          },
          {
            "$ref": "#/parameters/variableCategoryIdParam"
          },
          {
            "$ref": "#/parameters/synonymsParam"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Operation",
            "schema": {
              "$ref": "#/definitions/CommonResponse"
            }
          },
          "400": {
            "description": "The received JSON was invalid or malformed"
          },
          "401": {
            "description": "Not Authenticated"
          },
          "404": {
            "description": "Unknown target user ID"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      },
      "get": {
        "operationId": "getUserVariables",
        "tags": [
          "variables"
        ],
        "summary": "Get variables along with related user-specific analysis settings and statistics",
        "description": "Get variables for which the user has measurements. If the user has specified variable settings, these are provided instead of the common variable defaults.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userIdParam"
          },
          {
            "in": "query",
            "name": "id",
            "description": "Common variable id",
            "required": false,
            "type": "integer"
          },
          {
            "$ref": "#/parameters/variableCategoryNameParam"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the variable. To get results matching a substring, add % as a wildcard as the first and/or last character of a query string parameter. In order to get variables that contain `Mood`, the following query should be used: ?variableName=%Mood%",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/updatedAtParam"
          },
          {
            "$ref": "#/parameters/sourceNameParam"
          },
          {
            "$ref": "#/parameters/earliestMeasurementTimeParam"
          },
          {
            "$ref": "#/parameters/latestMeasurementTimeParam"
          },
          {
            "$ref": "#/parameters/numberOfRawMeasurementsParam"
          },
          {
            "$ref": "#/parameters/lastSourceParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/sortParam"
          },
          {
            "$ref": "#/parameters/includePublicParam"
          },
          {
            "$ref": "#/parameters/manualTrackingParam"
          },
          {
            "$ref": "#/parameters/appNameParam"
          },
          {
            "$ref": "#/parameters/clientIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Variables returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserVariable"
              }
            }
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/public/variables": {
      "get": {
        "operationId": "getCommonVariables",
        "tags": [
          "variables"
        ],
        "summary": "Get common variables with aggregated instead of user-specific data",
        "description": "This endpoint retrieves an array of all public variables. Public variables are things like foods, medications, symptoms, conditions, and anything not unique to a particular user. For instance, a telephone number or name would not be a public variable.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userIdParam"
          },
          {
            "in": "query",
            "name": "id",
            "description": "Common variable id",
            "required": false,
            "type": "integer"
          },
          {
            "$ref": "#/parameters/variableCategoryNameParam"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the variable. To get results matching a substring, add % as a wildcard as the first and/or last character of a query string parameter. In order to get variables that contain `Mood`, the following query should be used: ?variableName=%Mood%",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/updatedAtParam"
          },
          {
            "$ref": "#/parameters/sourceNameParam"
          },
          {
            "$ref": "#/parameters/earliestMeasurementTimeParam"
          },
          {
            "$ref": "#/parameters/latestMeasurementTimeParam"
          },
          {
            "$ref": "#/parameters/numberOfRawMeasurementsParam"
          },
          {
            "$ref": "#/parameters/lastSourceParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/sortParam"
          },
          {
            "$ref": "#/parameters/effectOrCauseParam"
          },
          {
            "$ref": "#/parameters/publicEffectOrCauseParam"
          },
          {
            "$ref": "#/parameters/exactMatchParam"
          },
          {
            "$ref": "#/parameters/manualTrackingParam"
          },
          {
            "$ref": "#/parameters/variableCategoryIdParam"
          },
          {
            "$ref": "#/parameters/includePrivateParam"
          },
          {
            "$ref": "#/parameters/clientIdParam"
          },
          {
            "$ref": "#/parameters/searchPhraseParam"
          },
          {
            "$ref": "#/parameters/synonymsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CommonVariableArray"
            }
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/userVariables/delete": {
      "delete": {
        "operationId": "deleteUserVariable",
        "tags": [
          "variables"
        ],
        "summary": "Delete All Measurements For Variable",
        "description": "Users can delete all of their measurements for a variable",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/variableIdBodyParam"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "The received JSON was invalid or malformed"
          },
          "401": {
            "description": "Not Authenticated"
          },
          "404": {
            "description": "Unknown target user ID"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/userVariables/reset": {
      "post": {
        "operationId": "resetUserVariableSettings",
        "tags": [
          "variables"
        ],
        "summary": "Reset user settings for a variable to defaults",
        "description": "Reset user settings for a variable to defaults",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/variableIdBodyParam"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation"
          },
          "400": {
            "description": "The received JSON was invalid or malformed"
          },
          "401": {
            "description": "Not Authenticated"
          },
          "404": {
            "description": "Unknown target user ID"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/variableCategories": {
      "get": {
        "operationId": "getVariableCategories",
        "tags": [
          "variables"
        ],
        "summary": "Variable categories",
        "description": "The variable categories include Activity, Causes of Illness, Cognitive Performance, Conditions, Environment, Foods, Location, Miscellaneous, Mood, Nutrition, Physical Activity, Physique, Sleep, Social Interactions, Symptoms, Treatments, Vital Signs, and Work.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VariableCategory"
              }
            }
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/votes": {
      "post": {
        "operationId": "postVote",
        "tags": [
          "analytics"
        ],
        "summary": "Post or update vote",
        "description": "This is to enable users to indicate their opinion on the plausibility of a causal relationship between a treatment and outcome. QuantiModo incorporates crowd-sourced plausibility estimations into their algorithm. This is done allowing user to indicate their view of the plausibility of each relationship with thumbs up/down buttons placed next to each prediction.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userIdParam"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Contains the cause variable, effect variable, and vote value.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vote"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Operation",
            "schema": {
              "$ref": "#/definitions/CommonResponse"
            }
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v3/votes/delete": {
      "delete": {
        "operationId": "deleteVote",
        "tags": [
          "analytics"
        ],
        "summary": "Delete vote",
        "description": "Delete previously posted vote",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userIdParam"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The cause and effect variable names for the predictor vote to be deleted.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VoteDelete"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Operation",
            "schema": {
              "$ref": "#/definitions/CommonResponse"
            }
          },
          "401": {
            "description": "Not Authenticated"
          }
        },
        "security": [
          {
            "access_token": []
          },
          {
            "quantimodo_oauth2": [
              "basic"
            ]
          }
        ]
      }
    },
    "/v4/study": {
      "get": {
        "operationId": "getStudy",
        "tags": [
          "analytics"
        ],
        "summary": "Get Study",
        "description": "Get Study",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/GetStudyResponse"
            }
          },
          "401": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/GetStudyResponse"
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/causeVariableNameParam"
          },
          {
            "$ref": "#/parameters/effectVariableNameParam"
          },
          {
            "$ref": "#/parameters/appNameParam"
          },
          {
            "$ref": "#/parameters/clientIdParam"
          },
          {
            "$ref": "#/parameters/includeChartsParam"
          }
        ]
      }
    },
    "/v3/userSettings": {
      "post": {
        "operationId": "postUserSettings",
        "tags": [
          "user"
        ],
        "summary": "Post UserSettings",
        "description": "Post UserSettings",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PostUserSettingsResponse"
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/appNameParam"
          },
          {
            "$ref": "#/parameters/clientIdParam"
          }
        ]
      }
    },
    "/v3/deviceTokens": {
      "post": {
        "operationId": "postDeviceTokens",
        "tags": [
          "notifications"
        ],
        "summary": "Post DeviceTokens",
        "description": "Post DeviceTokens",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Not authenticated"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "parameters": []
      }
    },
    "/v3/notificationPreferences": {
      "get": {
        "operationId": "getNotificationPreferences",
        "tags": [
          "notifications"
        ],
        "summary": "Get NotificationPreferences",
        "description": "Get NotificationPreferences",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Not authenticated"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "parameters": []
      }
    },
    "/v3/googleIdToken": {
      "post": {
        "operationId": "postGoogleIdToken",
        "tags": [
          "authentication"
        ],
        "summary": "Post GoogleIdToken",
        "description": "Post GoogleIdToken",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Not authenticated"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "parameters": []
      }
    }
  },
  "definitions": {
    "CommonResponse": {
      "type": "object",
      "required": [
        "status",
        "success"
      ],
      "properties": {
        "status": {
          "type": "integer",
          "description": "Status code"
        },
        "message": {
          "type": "string",
          "description": "Message"
        },
        "success": {
          "type": "boolean"
        },
        "data": {
          "$ref": "#/definitions/GetStudyDataResponse"
        }
      }
    },
    "ConnectorInstruction": {
      "properties": {
        "url": {
          "type": "string",
          "description": "url"
        },
        "parameters": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "parameters array"
        },
        "usePopup": {
          "type": "boolean",
          "description": "usePopup"
        }
      }
    },
    "Connector": {
      "required": [
        "id",
        "name",
        "displayName",
        "image",
        "getItUrl",
        "connected",
        "connectInstructions",
        "lastUpdate",
        "totalMeasurementsInLastUpdate"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Connector ID number"
        },
        "name": {
          "type": "string",
          "description": "Connector lowercase system name"
        },
        "displayName": {
          "type": "string",
          "description": "Connector pretty display name"
        },
        "image": {
          "type": "string",
          "description": "URL to the image of the connector logo"
        },
        "getItUrl": {
          "type": "string",
          "description": "URL to a site where one can get this device or application"
        },
        "connected": {
          "type": "string",
          "description": "True if the authenticated user has this connector enabled"
        },
        "connectInstructions": {
          "type": "string",
          "description": "URL and parameters used when connecting to a service"
        },
        "lastUpdate": {
          "type": "integer",
          "description": "Epoch timestamp of last sync"
        },
        "totalMeasurementsInLastUpdate": {
          "type": "integer",
          "description": "Number of measurements obtained during latest update"
        },
        "connectStatus": {
          "description": "Example: CONNECTED",
          "type": "string"
        },
        "updateRequestedAt": {
          "description": "Example: 2017-07-18 05:16:31",
          "type": "string",
          "format": "date-time"
        },
        "shortDescription": {
          "description": "Example: Tracks social interaction. QuantiModo requires permission to access your Facebook \"user likes\" and \"user posts\".",
          "type": "string"
        },
        "message": {
          "description": "Example: Got 412 new measurements on 2017-07-31 10:10:34",
          "type": "string"
        },
        "lastSuccessfulUpdatedAt": {
          "description": "Example: 2017-07-31 10:10:34",
          "type": "string",
          "format": "date-time"
        },
        "imageHtml": {
          "description": "Example: <a href=\"http://www.facebook.com\"><img id=\"facebook_image\" title=\"Facebook\" src=\"https://i.imgur.com/GhwqK4f.png\" alt=\"Facebook\"></a>",
          "type": "string"
        },
        "updateStatus": {
          "description": "Example: UPDATED",
          "type": "string"
        },
        "oauth": {
          "description": "Example: {}",
          "type": "object"
        },
        "defaultVariableCategoryName": {
          "description": "Example: Social Interactions",
          "type": "string"
        },
        "connectorClientId": {
          "description": "Example: 225078261031461",
          "type": "string"
        },
        "longDescription": {
          "description": "Example: Facebook is a social networking website where users may create a personal profile, add other users as friends, and exchange messages.",
          "type": "string"
        },
        "enabled": {
          "description": "Example: 1",
          "type": "integer"
        },
        "linkedDisplayNameHtml": {
          "description": "Example: <a href=\"http://www.facebook.com\">Facebook</a>",
          "type": "string"
        },
        "clientId": {
          "description": "Example: ghostInspector",
          "type": "string"
        },
        "userId": {
          "description": "Example: 230",
          "type": "integer"
        },
        "connectorId": {
          "description": "Example: 8",
          "type": "integer"
        },
        "createdAt": {
          "description": "Example: 2000-01-01 00:00:00",
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "description": "Example: 2017-07-31 10:10:34",
          "type": "string",
          "format": "date-time"
        },
        "buttons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Button"
          }
        },
        "affiliate": {
          "description": "Example: false",
          "type": "boolean"
        },
        "scopes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Scope"
          }
        },
        "connectError": {
          "description": "Example: Your token is expired. Please re-connect",
          "type": "string"
        }
      }
    },
    "ConversionStep": {
      "required": [
        "operation",
        "value"
      ],
      "properties": {
        "operation": {
          "type": "string",
          "enum": [
            "MULTIPLY",
            "ADD"
          ],
          "description": "ADD or MULTIPLY"
        },
        "value": {
          "type": "number",
          "format": "double",
          "description": "This specifies the order of conversion steps starting with 0"
        }
      }
    },
    "UserCorrelation": {
      "required": [
        "correlationCoefficient",
        "cause",
        "effect",
        "onsetDelay",
        "durationOfAction",
        "numberOfPairs",
        "timestamp"
      ],
      "properties": {
        "averageDailyLowCause": {
          "type": "number",
          "description": ""
        },
        "averageDailyHighCause": {
          "type": "number",
          "description": ""
        },
        "averageEffect": {
          "type": "number",
          "description": ""
        },
        "averageEffectFollowingHighCause": {
          "type": "number",
          "description": ""
        },
        "averageEffectFollowingLowCause": {
          "type": "number",
          "description": ""
        },
        "averageEffectFollowingHighCauseExplanation": {
          "type": "string",
          "description": ""
        },
        "averageEffectFollowingLowCauseExplanation": {
          "type": "string",
          "description": ""
        },
        "averageVote": {
          "type": "number",
          "description": "Average Vote"
        },
        "causalityFactor": {
          "type": "number",
          "description": ""
        },
        "cause": {
          "type": "string",
          "description": "Variable name of the cause variable for which the user desires correlations."
        },
        "causeVariableCategoryName": {
          "type": "string",
          "description": "Variable category of the cause variable."
        },
        "causeChanges": {
          "type": "integer",
          "description": "Number of changes in the predictor variable (a.k.a the number of experiments)"
        },
        "causeVariableCombinationOperation": {
          "type": "string",
          "description": "The way cause measurements are aggregated"
        },
        "causeVariableImageUrl": {
          "type": "string",
          "description": ""
        },
        "causeVariableIonIcon": {
          "type": "string",
          "description": "For use in Ionic apps"
        },
        "causeUnit": {
          "type": "string",
          "description": "Unit of the predictor variable"
        },
        "causeVariableDefaultUnitId": {
          "type": "integer",
          "description": "Unit Id of the predictor variable"
        },
        "causeVariableId": {
          "type": "integer",
          "description": ""
        },
        "causeVariableName": {
          "type": "string",
          "description": "Variable name of the cause variable for which the user desires correlations."
        },
        "correlationCoefficient": {
          "type": "number",
          "description": "Pearson correlation coefficient between cause and effect measurements"
        },
        "createdAt": {
          "description": "When the record was first created. Use UTC ISO 8601 `YYYY-MM-DDThh:mm:ss`  datetime format",
          "type": "string",
          "format": "date-time"
        },
        "dataAnalysis": {
          "type": "string",
          "description": "How the data was analyzed"
        },
        "dataSources": {
          "type": "string",
          "description": "How the data was obtained"
        },
        "durationOfAction": {
          "type": "number",
          "description": "The amount of time over which a predictor/stimulus event can exert an observable influence on an outcome variable value. For instance, aspirin (stimulus/predictor) typically decreases headache severity for approximately four hours (duration of action) following the onset delay."
        },
        "effect": {
          "type": "string",
          "description": "Variable name of the effect variable for which the user desires correlations."
        },
        "effectVariableCategoryName": {
          "type": "string",
          "description": "Variable category of the effect variable."
        },
        "effectVariableImageUrl": {
          "type": "string",
          "description": ""
        },
        "effectVariableIonIcon": {
          "type": "string",
          "description": "For use in Ionic apps"
        },
        "effectSize": {
          "type": "string",
          "description": "Magnitude of the effects of a cause indicating whether it's practically meaningful."
        },
        "effectVariableId": {
          "type": "string",
          "description": "Magnitude of the effects of a cause indicating whether it's practically meaningful."
        },
        "effectVariableName": {
          "type": "string",
          "description": "Variable name of the effect variable for which the user desires correlations."
        },
        "gaugeImage": {
          "type": "string",
          "description": "Illustrates the strength of the relationship"
        },
        "imageUrl": {
          "type": "string",
          "description": "Large image for Facebook"
        },
        "numberOfPairs": {
          "type": "number",
          "description": "Number of points that went into the correlation calculation"
        },
        "onsetDelay": {
          "type": "number",
          "format": "double",
          "description": "The amount of time in seconds that elapses after the predictor/stimulus event before the outcome as perceived by a self-tracker is known as the onset delay. For example, the onset delay between the time a person takes an aspirin (predictor/stimulus event) and the time a person perceives a change in their headache severity (outcome) is approximately 30 minutes."
        },
        "optimalPearsonProduct": {
          "type": "number",
          "description": "Optimal Pearson Product"
        },
        "outcomeDataSources": {
          "type": "string",
          "description": "original name of the cause."
        },
        "predictorExplanation": {
          "type": "string",
          "description": "HIGHER Remeron predicts HIGHER Overall Mood"
        },
        "principalInvestigator": {
          "type": "string",
          "description": "Mike Sinn"
        },
        "qmScore": {
          "type": "number",
          "description": "Value representing the significance of the relationship as a function of crowdsourced insights, predictive strength, data quantity, and data quality"
        },
        "reverseCorrelation": {
          "type": "number",
          "description": "Correlation when cause and effect are reversed. For any causal relationship, the forward correlation should exceed the reverse correlation."
        },
        "significanceExplanation": {
          "type": "string",
          "description": "Using a two-tailed t-test with alpha = 0.05, it was determined that the change..."
        },
        "statisticalSignificance": {
          "type": "string",
          "description": "A function of the effect size and sample size"
        },
        "strengthLevel": {
          "type": "string",
          "description": "weak, moderate, strong"
        },
        "studyAbstract": {
          "type": "string",
          "description": "These data suggest with a high degree of confidence..."
        },
        "studyBackground": {
          "type": "string",
          "description": "In order to reduce suffering through the advancement of human knowledge..."
        },
        "studyDesign": {
          "type": "string",
          "description": "This study is based on data donated by one QuantiModo user..."
        },
        "studyLimitations": {
          "type": "string",
          "description": "As with any human experiment, it was impossible to control for all potentially confounding variables..."
        },
        "studyLinkDynamic": {
          "type": "string",
          "description": "Url for the interactive study within the web app"
        },
        "studyLinkFacebook": {
          "type": "string",
          "description": "Url for sharing the study on Facebook"
        },
        "studyLinkGoogle": {
          "type": "string",
          "description": "Url for sharing the study on Google+"
        },
        "studyLinkTwitter": {
          "type": "string",
          "description": "Url for sharing the study on Twitter"
        },
        "studyLinkStatic": {
          "type": "string",
          "description": "Url for sharing the statically rendered study on social media"
        },
        "studyObjective": {
          "type": "string",
          "description": "The objective of this study is to determine..."
        },
        "studyResults": {
          "type": "string",
          "description": "This analysis suggests that..."
        },
        "studyTitle": {
          "type": "string",
          "description": "N1 Study HIGHER Remeron predicts HIGHER Overall Mood"
        },
        "timestamp": {
          "type": "number",
          "description": "Time at which correlation was calculated"
        },
        "updatedAt": {
          "description": "When the record in the database was last updated. Use UTC ISO 8601 `YYYY-MM-DDThh:mm:ss`  datetime format. Time zone should be UTC and not local.",
          "type": "string",
          "format": "date-time"
        },
        "userVote": {
          "type": "number",
          "description": "User Vote"
        },
        "valuePredictingHighOutcome": {
          "type": "number",
          "description": "cause value that predicts an above average effect value (in default unit for cause variable)"
        },
        "valuePredictingHighOutcomeExplanation": {
          "type": "string",
          "description": "Overall Mood, on average, 34% HIGHER after around 3.98mg Remeron"
        },
        "valuePredictingLowOutcome": {
          "type": "number",
          "description": "cause value that predicts a below average effect value (in default unit for cause variable)"
        },
        "valuePredictingLowOutcomeExplanation": {
          "type": "string",
          "description": "Overall Mood, on average, 4% LOWER after around 0mg Remeron"
        },
        "averageForwardPearsonCorrelationOverOnsetDelays": {
          "description": "Example: 0.396",
          "type": "number",
          "format": "double"
        },
        "averageReversePearsonCorrelationOverOnsetDelays": {
          "description": "Example: 0.453667",
          "type": "number",
          "format": "double"
        },
        "confidenceInterval": {
          "description": "Example: 0.14344467795996",
          "type": "number",
          "format": "double"
        },
        "criticalTValue": {
          "description": "Example: 1.646",
          "type": "number",
          "format": "double"
        },
        "effectChanges": {
          "description": "Example: 193",
          "type": "integer"
        },
        "experimentEndTime": {
          "description": "Example: 2014-07-30 12:50:00",
          "type": "string",
          "format": "date-time"
        },
        "experimentStartTime": {
          "description": "Example: 2012-05-06 21:15:00",
          "type": "string",
          "format": "date-time"
        },
        "forwardSpearmanCorrelationCoefficient": {
          "description": "Example: 0.528359",
          "type": "number",
          "format": "double"
        },
        "onsetDelayWithStrongestPearsonCorrelation": {
          "description": "Example: -86400",
          "type": "integer"
        },
        "pearsonCorrelationWithNoOnsetDelay": {
          "description": "Example: 0.477",
          "type": "number",
          "format": "double"
        },
        "predictivePearsonCorrelation": {
          "description": "Example: 0.538",
          "type": "number",
          "format": "double"
        },
        "predictsHighEffectChange": {
          "description": "Example: 17",
          "type": "integer"
        },
        "predictsLowEffectChange": {
          "description": "Example: -11",
          "type": "integer"
        },
        "strongestPearsonCorrelationCoefficient": {
          "description": "Example: 0.613",
          "type": "number",
          "format": "double"
        },
        "tValue": {
          "description": "Example: 9.6986079652717",
          "type": "number",
          "format": "double"
        },
        "userId": {
          "description": "Example: 230",
          "type": "integer"
        },
        "causeVariableMostCommonConnectorId": {
          "description": "Example: 6",
          "type": "integer"
        },
        "causeVariableCategoryId": {
          "description": "Example: 6",
          "type": "integer"
        },
        "effectVariableCombinationOperation": {
          "description": "Example: MEAN",
          "type": "string"
        },
        "effectVariableCommonAlias": {
          "description": "Example: Mood_(psychology)",
          "type": "string"
        },
        "effectVariableDefaultUnitId": {
          "description": "Example: 10",
          "type": "integer"
        },
        "effectVariableMostCommonConnectorId": {
          "description": "Example: 10",
          "type": "integer"
        },
        "effectVariableCategoryId": {
          "description": "Example: 1",
          "type": "integer"
        },
        "causeUserVariableShareUserMeasurements": {
          "description": "Example: 1",
          "type": "integer"
        },
        "effectUserVariableShareUserMeasurements": {
          "description": "Example: 1",
          "type": "integer"
        },
        "predictorFillingValue": {
          "description": "Example: -1",
          "type": "integer"
        },
        "outcomeFillingValue": {
          "description": "Example: -1",
          "type": "integer"
        },
        "createdTime": {
          "description": "Example: 2016-12-28 20:47:30",
          "type": "string",
          "format": "date-time"
        },
        "updatedTime": {
          "description": "Example: 2017-05-06 15:40:38",
          "type": "string",
          "format": "date-time"
        },
        "durationOfActionInHours": {
          "description": "Example: 168",
          "type": "integer"
        },
        "onsetDelayWithStrongestPearsonCorrelationInHours": {
          "description": "Example: -24",
          "type": "integer"
        },
        "direction": {
          "description": "Example: higher",
          "type": "string"
        },
        "causeVariableDefaultUnitAbbreviatedName": {
          "description": "Example: /5",
          "type": "string"
        },
        "effectVariableDefaultUnitAbbreviatedName": {
          "description": "Example: /5",
          "type": "string"
        },
        "causeVariableDefaultUnitName": {
          "description": "Example: 1 to 5 Rating",
          "type": "string"
        },
        "effectVariableDefaultUnitName": {
          "description": "Example: 1 to 5 Rating",
          "type": "string"
        },
        "shareUserMeasurements": {
          "description": "Example: 1",
          "type": "boolean"
        },
        "effectUnit": {
          "description": "Example: /5",
          "type": "string"
        },
        "significantDifference": {
          "description": "Example: 1",
          "type": "boolean"
        },
        "predictsHighEffectChangeSentenceFragment": {
          "description": "Example: , on average, 17% ",
          "type": "string"
        },
        "predictsLowEffectChangeSentenceFragment": {
          "description": "Example: , on average, 11% ",
          "type": "string"
        },
        "confidenceLevel": {
          "description": "Example: high",
          "type": "string"
        },
        "predictivePearsonCorrelationCoefficient": {
          "description": "Example: 0.538",
          "type": "number",
          "format": "double"
        },
        "studyLinkEmail": {
          "description": "Example: mailto:?subject=N1%20Study%3A%20Sleep%20Quality%20Predicts%20Higher%20Overall%20Mood&body=Check%20out%20my%20study%20at%20https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DSleep%2520Quality%26effectVariableName%3DOverall%2520Mood%26userId%3D230%0A%0AHave%20a%20great%20day!",
          "type": "string"
        },
        "gaugeImageSquare": {
          "description": "Example: https://s3.amazonaws.com/quantimodo-docs/images/gauge-moderately-positive-relationship-200-200.png",
          "type": "string"
        },
        "dataSourcesParagraphForCause": {
          "description": "Example: Sleep Quality data was primarily collected using <a href=\"http://www.amazon.com/gp/product/B00A17IAO0/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=B00A17IAO0&linkCode=as2&tag=quant08-20\">Up by Jawbone</a>.  UP by Jawbone is a wristband and app that tracks how you sleep, move and eat and then helps you use that information to feel your best.",
          "type": "string"
        },
        "instructionsForCause": {
          "description": "Example: <a href=\"http://www.amazon.com/gp/product/B00A17IAO0/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=B00A17IAO0&linkCode=as2&tag=quant08-20\">Obtain Up by Jawbone</a> and use it to record your Sleep Quality. Once you have a <a href=\"http://www.amazon.com/gp/product/B00A17IAO0/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=B00A17IAO0&linkCode=as2&tag=quant08-20\">Up by Jawbone</a> account, <a href=\"https://app.quantimo.do/ionic/Modo/www/#/app/import\">connect your  Up by Jawbone account at QuantiModo</a> to automatically import and analyze your data.",
          "type": "string"
        },
        "dataSourcesParagraphForEffect": {
          "description": "Example: Overall Mood data was primarily collected using <a href=\"https://quantimo.do\">QuantiModo</a>.  <a href=\"https://quantimo.do\">QuantiModo</a> is a Chrome extension, Android app, iOS app, and web app that allows you to easily track mood, symptoms, or any outcome you want to optimize in a fraction of a second.  You can also import your data from over 30 other apps and devices like Fitbit, Rescuetime, Jawbone Up, Withings, Facebook, Github, Google Calendar, Runkeeper, MoodPanda, Slice, Google Fit, and more.  <a href=\"https://quantimo.do\">QuantiModo</a> then analyzes your data to identify which hidden factors are most likely to be influencing your mood or symptoms and their optimal daily values.",
          "type": "string"
        },
        "instructionsForEffect": {
          "description": "Example: <a href=\"https://quantimo.do\">Obtain QuantiModo</a> and use it to record your Overall Mood. Once you have a <a href=\"https://quantimo.do\">QuantiModo</a> account, <a href=\"https://app.quantimo.do/ionic/Modo/www/#/app/import\">connect your  QuantiModo account at QuantiModo</a> to automatically import and analyze your data.",
          "type": "string"
        },
        "pValue": {
          "description": "Example: 3.5306635529222E-5",
          "type": "number",
          "format": "double"
        },
        "reversePearsonCorrelationCoefficient": {
          "description": "Example: 0.63628232030415",
          "type": "number",
          "format": "double"
        },
        "predictorMinimumAllowedValue": {
          "description": "Example: 10",
          "type": "number",
          "format": "double"
        },
        "predictorMaximumAllowedValue": {
          "description": "Example: 160934",
          "type": "number",
          "format": "double"
        },
        "predictorDataSources": {
          "description": "Example: RescueTime",
          "type": "string"
        }
      }
    },
    "AggregatedCorrelation": {
      "required": [
        "correlationCoefficient",
        "cause",
        "effect",
        "onsetDelay",
        "durationOfAction",
        "numberOfPairs",
        "timestamp"
      ],
      "properties": {
        "averageDailyLowCause": {
          "type": "number",
          "description": ""
        },
        "averageDailyHighCause": {
          "type": "number",
          "description": ""
        },
        "averageEffect": {
          "type": "number",
          "description": ""
        },
        "averageEffectFollowingHighCause": {
          "type": "number",
          "description": ""
        },
        "averageEffectFollowingLowCause": {
          "type": "number",
          "description": ""
        },
        "averageEffectFollowingHighCauseExplanation": {
          "type": "string",
          "description": ""
        },
        "averageEffectFollowingLowCauseExplanation": {
          "type": "string",
          "description": ""
        },
        "averageVote": {
          "type": "number",
          "description": "Average Vote"
        },
        "causalityFactor": {
          "type": "number",
          "description": ""
        },
        "cause": {
          "type": "string",
          "description": "Variable name of the cause variable for which the user desires correlations."
        },
        "causeVariableCategoryName": {
          "type": "string",
          "description": "Variable category of the cause variable."
        },
        "causeChanges": {
          "type": "integer",
          "description": "Number of changes in the predictor variable (a.k.a the number of experiments)"
        },
        "causeVariableCombinationOperation": {
          "type": "string",
          "description": "The way cause measurements are aggregated"
        },
        "causeVariableImageUrl": {
          "type": "string",
          "description": ""
        },
        "causeVariableIonIcon": {
          "type": "string",
          "description": "For use in Ionic apps"
        },
        "causeUnit": {
          "type": "string",
          "description": "Unit of the predictor variable"
        },
        "causeVariableDefaultUnitId": {
          "type": "integer",
          "description": "Unit Id of the predictor variable"
        },
        "causeVariableId": {
          "type": "integer",
          "description": ""
        },
        "causeVariableName": {
          "type": "string",
          "description": "Variable name of the cause variable for which the user desires correlations."
        },
        "correlationCoefficient": {
          "type": "number",
          "description": "Pearson correlation coefficient between cause and effect measurements"
        },
        "createdAt": {
          "description": "When the record was first created. Use UTC ISO 8601 `YYYY-MM-DDThh:mm:ss`  datetime format",
          "type": "string",
          "format": "date-time"
        },
        "dataAnalysis": {
          "type": "string",
          "description": "How the data was analyzed"
        },
        "dataSources": {
          "type": "string",
          "description": "How the data was obtained"
        },
        "durationOfAction": {
          "type": "number",
          "description": "The amount of time over which a predictor/stimulus event can exert an observable influence on an outcome variable value. For instance, aspirin (stimulus/predictor) typically decreases headache severity for approximately four hours (duration of action) following the onset delay."
        },
        "effect": {
          "type": "string",
          "description": "Variable name of the effect variable for which the user desires correlations."
        },
        "effectVariableCategoryName": {
          "type": "string",
          "description": "Variable category of the effect variable."
        },
        "effectVariableImageUrl": {
          "type": "string",
          "description": ""
        },
        "effectVariableIonIcon": {
          "type": "string",
          "description": "For use in Ionic apps"
        },
        "effectSize": {
          "type": "string",
          "description": "Magnitude of the effects of a cause indicating whether it's practically meaningful."
        },
        "effectVariableId": {
          "type": "string",
          "description": "Magnitude of the effects of a cause indicating whether it's practically meaningful."
        },
        "effectVariableName": {
          "type": "string",
          "description": "Variable name of the effect variable for which the user desires correlations."
        },
        "gaugeImage": {
          "type": "string",
          "description": "Illustrates the strength of the relationship"
        },
        "imageUrl": {
          "type": "string",
          "description": "Large image for Facebook"
        },
        "numberOfPairs": {
          "type": "number",
          "description": "Number of points that went into the correlation calculation"
        },
        "onsetDelay": {
          "type": "number",
          "format": "double",
          "description": "The amount of time in seconds that elapses after the predictor/stimulus event before the outcome as perceived by a self-tracker is known as the onset delay. For example, the onset delay between the time a person takes an aspirin (predictor/stimulus event) and the time a person perceives a change in their headache severity (outcome) is approximately 30 minutes."
        },
        "optimalPearsonProduct": {
          "type": "number",
          "description": "Optimal Pearson Product"
        },
        "outcomeDataSources": {
          "type": "string",
          "description": "original name of the cause."
        },
        "predictorExplanation": {
          "type": "string",
          "description": "HIGHER Remeron predicts HIGHER Overall Mood"
        },
        "principalInvestigator": {
          "type": "string",
          "description": "Mike Sinn"
        },
        "qmScore": {
          "type": "number",
          "description": "Value representing the significance of the relationship as a function of crowdsourced insights, predictive strength, data quantity, and data quality"
        },
        "reverseCorrelation": {
          "type": "number",
          "description": "Correlation when cause and effect are reversed. For any causal relationship, the forward correlation should exceed the reverse correlation."
        },
        "significanceExplanation": {
          "type": "string",
          "description": "Using a two-tailed t-test with alpha = 0.05, it was determined that the change..."
        },
        "statisticalSignificance": {
          "type": "string",
          "description": "A function of the effect size and sample size"
        },
        "strengthLevel": {
          "type": "string",
          "description": "weak, moderate, strong"
        },
        "studyAbstract": {
          "type": "string",
          "description": "These data suggest with a high degree of confidence..."
        },
        "studyBackground": {
          "type": "string",
          "description": "In order to reduce suffering through the advancement of human knowledge..."
        },
        "studyDesign": {
          "type": "string",
          "description": "This study is based on data donated by one QuantiModo user..."
        },
        "studyLimitations": {
          "type": "string",
          "description": "As with any human experiment, it was impossible to control for all potentially confounding variables..."
        },
        "studyLinkDynamic": {
          "type": "string",
          "description": "Url for the interactive study within the web app"
        },
        "studyLinkFacebook": {
          "type": "string",
          "description": "Url for sharing the study on Facebook"
        },
        "studyLinkGoogle": {
          "type": "string",
          "description": "Url for sharing the study on Google+"
        },
        "studyLinkTwitter": {
          "type": "string",
          "description": "Url for sharing the study on Twitter"
        },
        "studyLinkStatic": {
          "type": "string",
          "description": "Url for sharing the statically rendered study on social media"
        },
        "studyObjective": {
          "type": "string",
          "description": "The objective of this study is to determine..."
        },
        "studyResults": {
          "type": "string",
          "description": "This analysis suggests that..."
        },
        "studyTitle": {
          "type": "string",
          "description": "N1 Study HIGHER Remeron predicts HIGHER Overall Mood"
        },
        "timestamp": {
          "type": "number",
          "description": "Time at which correlation was calculated"
        },
        "updatedAt": {
          "description": "When the record in the database was last updated. Use UTC ISO 8601 `YYYY-MM-DDThh:mm:ss`  datetime format. Time zone should be UTC and not local.",
          "type": "string",
          "format": "date-time"
        },
        "userVote": {
          "type": "number",
          "description": "User Vote"
        },
        "valuePredictingHighOutcome": {
          "type": "number",
          "description": "cause value that predicts an above average effect value (in default unit for cause variable)"
        },
        "valuePredictingHighOutcomeExplanation": {
          "type": "string",
          "description": "Overall Mood, on average, 34% HIGHER after around 3.98mg Remeron"
        },
        "valuePredictingLowOutcome": {
          "type": "number",
          "description": "cause value that predicts a below average effect value (in default unit for cause variable)"
        },
        "valuePredictingLowOutcomeExplanation": {
          "type": "string",
          "description": "Overall Mood, on average, 4% LOWER after around 0mg Remeron"
        },
        "averageForwardPearsonCorrelationOverOnsetDelays": {
          "description": "Example: 0.396",
          "type": "number",
          "format": "double"
        },
        "averageReversePearsonCorrelationOverOnsetDelays": {
          "description": "Example: 0.453667",
          "type": "number",
          "format": "double"
        },
        "confidenceInterval": {
          "description": "Example: 0.14344467795996",
          "type": "number",
          "format": "double"
        },
        "criticalTValue": {
          "description": "Example: 1.646",
          "type": "number",
          "format": "double"
        },
        "effectChanges": {
          "description": "Example: 193",
          "type": "integer"
        },
        "experimentEndTime": {
          "description": "Example: 2014-07-30 12:50:00",
          "type": "string",
          "format": "date-time"
        },
        "experimentStartTime": {
          "description": "Example: 2012-05-06 21:15:00",
          "type": "string",
          "format": "date-time"
        },
        "forwardSpearmanCorrelationCoefficient": {
          "description": "Example: 0.528359",
          "type": "number",
          "format": "double"
        },
        "onsetDelayWithStrongestPearsonCorrelation": {
          "description": "Example: -86400",
          "type": "integer"
        },
        "pearsonCorrelationWithNoOnsetDelay": {
          "description": "Example: 0.477",
          "type": "number",
          "format": "double"
        },
        "predictivePearsonCorrelation": {
          "description": "Example: 0.538",
          "type": "number",
          "format": "double"
        },
        "predictsHighEffectChange": {
          "description": "Example: 17",
          "type": "integer"
        },
        "predictsLowEffectChange": {
          "description": "Example: -11",
          "type": "integer"
        },
        "strongestPearsonCorrelationCoefficient": {
          "description": "Example: 0.613",
          "type": "number",
          "format": "double"
        },
        "tValue": {
          "description": "Example: 9.6986079652717",
          "type": "number",
          "format": "double"
        },
        "userId": {
          "description": "Example: 230",
          "type": "integer"
        },
        "causeVariableMostCommonConnectorId": {
          "description": "Example: 6",
          "type": "integer"
        },
        "causeVariableCategoryId": {
          "description": "Example: 6",
          "type": "integer"
        },
        "effectVariableCombinationOperation": {
          "description": "Example: MEAN",
          "type": "string"
        },
        "effectVariableCommonAlias": {
          "description": "Example: Mood_(psychology)",
          "type": "string"
        },
        "effectVariableDefaultUnitId": {
          "description": "Example: 10",
          "type": "integer"
        },
        "effectVariableMostCommonConnectorId": {
          "description": "Example: 10",
          "type": "integer"
        },
        "effectVariableCategoryId": {
          "description": "Example: 1",
          "type": "integer"
        },
        "causeUserVariableShareUserMeasurements": {
          "description": "Example: 1",
          "type": "integer"
        },
        "effectUserVariableShareUserMeasurements": {
          "description": "Example: 1",
          "type": "integer"
        },
        "predictorFillingValue": {
          "description": "Example: -1",
          "type": "integer"
        },
        "outcomeFillingValue": {
          "description": "Example: -1",
          "type": "integer"
        },
        "createdTime": {
          "description": "Example: 2016-12-28 20:47:30",
          "type": "string",
          "format": "date-time"
        },
        "updatedTime": {
          "description": "Example: 2017-05-06 15:40:38",
          "type": "string",
          "format": "date-time"
        },
        "durationOfActionInHours": {
          "description": "Example: 168",
          "type": "integer"
        },
        "onsetDelayWithStrongestPearsonCorrelationInHours": {
          "description": "Example: -24",
          "type": "integer"
        },
        "direction": {
          "description": "Example: higher",
          "type": "string"
        },
        "causeVariableDefaultUnitAbbreviatedName": {
          "description": "Example: /5",
          "type": "string"
        },
        "effectVariableDefaultUnitAbbreviatedName": {
          "description": "Example: /5",
          "type": "string"
        },
        "causeVariableDefaultUnitName": {
          "description": "Example: 1 to 5 Rating",
          "type": "string"
        },
        "effectVariableDefaultUnitName": {
          "description": "Example: 1 to 5 Rating",
          "type": "string"
        },
        "shareUserMeasurements": {
          "description": "Example: 1",
          "type": "boolean"
        },
        "effectUnit": {
          "description": "Example: /5",
          "type": "string"
        },
        "significantDifference": {
          "description": "Example: 1",
          "type": "boolean"
        },
        "predictsHighEffectChangeSentenceFragment": {
          "description": "Example: , on average, 17% ",
          "type": "string"
        },
        "predictsLowEffectChangeSentenceFragment": {
          "description": "Example: , on average, 11% ",
          "type": "string"
        },
        "confidenceLevel": {
          "description": "Example: high",
          "type": "string"
        },
        "predictivePearsonCorrelationCoefficient": {
          "description": "Example: 0.538",
          "type": "number",
          "format": "double"
        },
        "studyLinkEmail": {
          "description": "Example: mailto:?subject=N1%20Study%3A%20Sleep%20Quality%20Predicts%20Higher%20Overall%20Mood&body=Check%20out%20my%20study%20at%20https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DSleep%2520Quality%26effectVariableName%3DOverall%2520Mood%26userId%3D230%0A%0AHave%20a%20great%20day!",
          "type": "string"
        },
        "gaugeImageSquare": {
          "description": "Example: https://s3.amazonaws.com/quantimodo-docs/images/gauge-moderately-positive-relationship-200-200.png",
          "type": "string"
        },
        "dataSourcesParagraphForCause": {
          "description": "Example: Sleep Quality data was primarily collected using <a href=\"http://www.amazon.com/gp/product/B00A17IAO0/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=B00A17IAO0&linkCode=as2&tag=quant08-20\">Up by Jawbone</a>.  UP by Jawbone is a wristband and app that tracks how you sleep, move and eat and then helps you use that information to feel your best.",
          "type": "string"
        },
        "instructionsForCause": {
          "description": "Example: <a href=\"http://www.amazon.com/gp/product/B00A17IAO0/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=B00A17IAO0&linkCode=as2&tag=quant08-20\">Obtain Up by Jawbone</a> and use it to record your Sleep Quality. Once you have a <a href=\"http://www.amazon.com/gp/product/B00A17IAO0/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=B00A17IAO0&linkCode=as2&tag=quant08-20\">Up by Jawbone</a> account, <a href=\"https://app.quantimo.do/ionic/Modo/www/#/app/import\">connect your  Up by Jawbone account at QuantiModo</a> to automatically import and analyze your data.",
          "type": "string"
        },
        "dataSourcesParagraphForEffect": {
          "description": "Example: Overall Mood data was primarily collected using <a href=\"https://quantimo.do\">QuantiModo</a>.  <a href=\"https://quantimo.do\">QuantiModo</a> is a Chrome extension, Android app, iOS app, and web app that allows you to easily track mood, symptoms, or any outcome you want to optimize in a fraction of a second.  You can also import your data from over 30 other apps and devices like Fitbit, Rescuetime, Jawbone Up, Withings, Facebook, Github, Google Calendar, Runkeeper, MoodPanda, Slice, Google Fit, and more.  <a href=\"https://quantimo.do\">QuantiModo</a> then analyzes your data to identify which hidden factors are most likely to be influencing your mood or symptoms and their optimal daily values.",
          "type": "string"
        },
        "instructionsForEffect": {
          "description": "Example: <a href=\"https://quantimo.do\">Obtain QuantiModo</a> and use it to record your Overall Mood. Once you have a <a href=\"https://quantimo.do\">QuantiModo</a> account, <a href=\"https://app.quantimo.do/ionic/Modo/www/#/app/import\">connect your  QuantiModo account at QuantiModo</a> to automatically import and analyze your data.",
          "type": "string"
        },
        "pValue": {
          "description": "Example: 3.5306635529222E-5",
          "type": "number",
          "format": "double"
        },
        "reversePearsonCorrelationCoefficient": {
          "description": "Example: 0.63628232030415",
          "type": "number",
          "format": "double"
        },
        "predictorMinimumAllowedValue": {
          "description": "Example: 10",
          "type": "number",
          "format": "double"
        },
        "predictorMaximumAllowedValue": {
          "description": "Example: 160934",
          "type": "number",
          "format": "double"
        },
        "predictorDataSources": {
          "description": "Example: RescueTime",
          "type": "string"
        },
        "aggregateQMScore": {
          "description": "Example: 0.011598441286655",
          "type": "number",
          "format": "double"
        },
        "numberOfCorrelations": {
          "description": "Example: 6",
          "type": "integer"
        },
        "numberOfUsers": {
          "description": "Example: 6",
          "type": "integer"
        },
        "forwardPearsonCorrelationCoefficient": {
          "description": "Example: 0.0333",
          "type": "number",
          "format": "double"
        },
        "correlationIsContradictoryToOptimalValues": {
          "description": "Example: 1",
          "type": "boolean"
        },
        "onsetDelayInHours": {
          "description": "Example: 0",
          "type": "integer"
        },
        "causeDataSource": {
          "$ref": "#/definitions/DataSource"
        },
        "effectDataSource": {
          "$ref": "#/definitions/DataSource"
        },
        "causeVariableCommonAlias": {
          "description": "Example: ",
          "type": "string"
        },
        "causeVariableInformationalUrl": {
          "description": "Example: ",
          "type": "string"
        },
        "causeVariableProductUrl": {
          "description": "Example: ",
          "type": "string"
        },
        "effectVariableInformationalUrl": {
          "description": "Example: ",
          "type": "string"
        },
        "effectVariableProductUrl": {
          "description": "Example: ",
          "type": "string"
        },
        "vote": {
          "description": "Example: ",
          "type": "string"
        },
        "perDaySentenceFragment": {
          "description": "Example: ",
          "type": "string"
        }
      }
    },
    "JsonErrorResponse": {
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "string",
          "description": "Status: \"ok\" or \"error\""
        },
        "message": {
          "type": "string",
          "description": "Error message"
        }
      }
    },
    "Measurement": {
      "required": [
        "variableName",
        "sourceName",
        "startTimeString",
        "value",
        "unitAbbreviatedName"
      ],
      "properties": {
        "variableName": {
          "type": "string",
          "description": "Name of the variable for which we are creating the measurement records"
        },
        "sourceName": {
          "type": "string",
          "description": "Application or device used to record the measurement values"
        },
        "startTimeString": {
          "type": "string",
          "description": "Start Time for the measurement event in UTC ISO 8601 `YYYY-MM-DDThh:mm:ss`"
        },
        "startTimeEpoch": {
          "type": "integer",
          "description": "Seconds between the start of the event measured and 1970 (Unix timestamp)"
        },
        "value": {
          "type": "number",
          "format": "double",
          "description": "Converted measurement value in requested unit"
        },
        "originalValue": {
          "type": "integer",
          "description": "Original value as originally submitted"
        },
        "originalunitAbbreviatedName": {
          "type": "string",
          "description": "Original Unit of measurement as originally submitted"
        },
        "unitAbbreviatedName": {
          "type": "string",
          "description": "Abbreviated name for the unit of measurement"
        },
        "note": {
          "type": "string",
          "description": "Note of measurement"
        },
        "unitId": {
          "description": "Example: 23",
          "type": "integer"
        },
        "variableId": {
          "description": "Example: 5956846",
          "type": "integer"
        },
        "variableCategoryId": {
          "description": "Example: 13",
          "type": "integer"
        },
        "userVariableDefaultUnitId": {
          "description": "Example: 23",
          "type": "integer"
        },
        "id": {
          "description": "Example: 1051466127",
          "type": "integer"
        },
        "originalUnitId": {
          "description": "Example: 23",
          "type": "integer"
        },
        "clientId": {
          "description": "Example: quantimodo",
          "type": "string"
        },
        "createdAt": {
          "description": "Example: 2017-07-30 21:08:36",
          "type": "string"
        },
        "updatedAt": {
          "description": "Example: 2017-07-30 21:08:36",
          "type": "string"
        },
        "variableCategoryName": {
          "description": "Example: Treatments",
          "type": "string"
        },
        "userVariableVariableCategoryId": {
          "description": "Example: 13",
          "type": "integer"
        },
        "ionIcon": {
          "description": "Example: ion-ios-medkit-outline",
          "type": "string"
        },
        "svgUrl": {
          "description": "Example: https://app.quantimo.do/ionic/Modo/www/img/variable_categories/treatments.svg",
          "type": "string"
        },
        "pngUrl": {
          "description": "Example: https://app.quantimo.do/ionic/Modo/www/img/variable_categories/treatments.png",
          "type": "string"
        },
        "pngPath": {
          "description": "Example: img/variable_categories/treatments.png",
          "type": "string"
        },
        "variableCategoryImageUrl": {
          "description": "Example: https://maxcdn.icons8.com/Color/PNG/96/Healthcare/pill-96.png",
          "type": "string"
        },
        "manualTracking": {
          "description": "Example: 1",
          "type": "boolean"
        },
        "userVariableVariableCategoryName": {
          "description": "Example: Treatments",
          "type": "string"
        },
        "unitName": {
          "description": "Example: Count",
          "type": "string"
        },
        "unitCategoryId": {
          "description": "Example: 6",
          "type": "integer"
        },
        "unitCategoryName": {
          "description": "Example: Miscellany",
          "type": "string"
        },
        "userVariableDefaultUnitName": {
          "description": "Example: Count",
          "type": "string"
        },
        "userVariableDefaultUnitAbbreviatedName": {
          "description": "Example: count",
          "type": "string"
        },
        "userVariableDefaultUnitCategoryId": {
          "description": "Example: 6",
          "type": "integer"
        },
        "userVariableDefaultUnitCategoryName": {
          "description": "Example: Miscellany",
          "type": "string"
        },
        "originalUnitName": {
          "description": "Example: Count",
          "type": "string"
        },
        "originalUnitAbbreviatedName": {
          "description": "Example: count",
          "type": "string"
        },
        "originalUnitCategoryId": {
          "description": "Example: 6",
          "type": "integer"
        },
        "originalUnitCategoryName": {
          "description": "Example: Miscellany",
          "type": "string"
        },
        "inputType": {
          "description": "Example: value",
          "type": "string"
        },
        "variableDescription": {
          "description": "Example: negative",
          "type": "string"
        },
        "valence": {
          "description": "Example: negative",
          "type": "string"
        },
        "iconIcon": {
          "description": "Example: ion-sad-outline",
          "type": "string"
        },
        "minimumAllowedValue": {
          "description": "Example: 1",
          "type": "integer"
        },
        "maximumAllowedValue": {
          "description": "Example: 5",
          "type": "integer"
        },
        "startDate": {
          "description": "Example: 2014-08-27",
          "type": "string"
        },
        "connectorId": {
          "description": "Example: 13",
          "type": "integer"
        }
      }
    },
    "MeasurementItem": {
      "required": [
        "timestamp",
        "value"
      ],
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64",
          "description": "Timestamp for the measurement event in epoch time (unixtime)"
        },
        "value": {
          "type": "number",
          "format": "double",
          "description": "Measurement value"
        },
        "note": {
          "type": "string",
          "description": "Optional note to include with the measurement"
        }
      }
    },
    "MeasurementSet": {
      "required": [
        "measurementItems",
        "variableName",
        "sourceName",
        "unitAbbreviatedName"
      ],
      "properties": {
        "measurementItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasurementItem"
          },
          "description": "Array of timestamps, values, and optional notes"
        },
        "variableName": {
          "type": "string",
          "description": "ORIGINAL name of the variable for which we are creating the measurement records"
        },
        "sourceName": {
          "type": "string",
          "description": "Name of the application or device used to record the measurement values"
        },
        "variableCategoryName": {
          "type": "string",
          "description": "Variable category name"
        },
        "combinationOperation": {
          "type": "string",
          "enum": [
            "MEAN",
            "SUM"
          ],
          "description": "Way to aggregate measurements over time. Options are \"MEAN\" or \"SUM\". SUM should be used for things like minutes of exercise.  If you use MEAN for exercise, then a person might exercise more minutes in one day but add separate measurements that were smaller.  So when we are doing correlational analysis, we would think that the person exercised less that day even though they exercised more.  Conversely, we must use MEAN for things such as ratings which cannot be SUMMED."
        },
        "unitAbbreviatedName": {
          "type": "string",
          "description": "Unit of measurement"
        }
      }
    },
    "MeasurementDelete": {
      "required": [
        "variableId",
        "startTime"
      ],
      "properties": {
        "variableId": {
          "type": "integer",
          "description": "Variable id of the measurement to be deleted"
        },
        "startTime": {
          "type": "integer",
          "description": "Start time of the measurement to be deleted"
        }
      }
    },
    "MeasurementUpdate": {
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Variable id of the measurement to be updated"
        },
        "startTime": {
          "type": "integer",
          "description": "The new timestamp for the the event in epoch seconds (optional)"
        },
        "value": {
          "type": "number",
          "format": "double",
          "description": "The new value of for the measurement (optional)"
        },
        "note": {
          "type": "string",
          "description": "The new note for the measurement (optional)"
        }
      }
    },
    "Pairs": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Category name"
        }
      }
    },
    "PostCorrelation": {
      "required": [
        "causeVariableName",
        "effectVariableName",
        "correlation"
      ],
      "properties": {
        "causeVariableName": {
          "type": "string",
          "description": "Cause variable name"
        },
        "effectVariableName": {
          "type": "string",
          "description": "Effect variable name"
        },
        "correlation": {
          "type": "number",
          "format": "double",
          "description": "Correlation value"
        },
        "vote": {
          "type": "integer",
          "description": "Vote: 0 or 1"
        }
      }
    },
    "TrackingReminderDelete": {
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Id of the TrackingReminder to be deleted"
        }
      }
    },
    "TrackingReminderNotificationPost": {
      "required": [
        "id",
        "action"
      ],
      "properties": {
        "id": {
          "type": "number",
          "description": "Id of the TrackingReminderNotification"
        },
        "modifiedValue": {
          "type": "number",
          "description": "Optional value to be recorded instead of the tracking reminder default value"
        },
        "action": {
          "type": "string",
          "description": "track records a measurement for the notification.  snooze changes the notification to 1 hour from now. skip deletes the notification.",
          "enum": [
            "track",
            "snooze",
            "skip"
          ]
        }
      }
    },
    "TrackingReminder": {
      "required": [
        "variableName",
        "reminderFrequency",
        "variableCategoryName",
        "unitAbbreviatedName"
      ],
      "properties": {
        "id": {
          "description": "id",
          "type": "integer",
          "format": "int32"
        },
        "clientId": {
          "description": "clientId",
          "type": "string"
        },
        "userId": {
          "description": "ID of User",
          "type": "integer",
          "format": "int32"
        },
        "variableId": {
          "description": "Id for the variable to be tracked",
          "type": "integer",
          "format": "int32"
        },
        "defaultValue": {
          "description": "Default value to use for the measurement when tracking",
          "type": "number",
          "format": "float"
        },
        "reminderStartTime": {
          "description": "Earliest time of day at which reminders should appear in UTC HH:MM:SS format",
          "type": "string"
        },
        "reminderEndTime": {
          "description": "Latest time of day at which reminders should appear in UTC HH:MM:SS format",
          "type": "string"
        },
        "reminderSound": {
          "description": "String identifier for the sound to accompany the reminder",
          "type": "string"
        },
        "reminderFrequency": {
          "description": "Number of seconds between one reminder and the next",
          "type": "integer",
          "format": "int32"
        },
        "popUp": {
          "description": "True if the reminders should appear as a popup notification",
          "type": "boolean"
        },
        "sms": {
          "description": "True if the reminders should be delivered via SMS",
          "type": "boolean"
        },
        "email": {
          "description": "True if the reminders should be delivered via email",
          "type": "boolean"
        },
        "notificationBar": {
          "description": "True if the reminders should appear in the notification bar",
          "type": "boolean"
        },
        "latestTrackingReminderNotificationReminderTime": {
          "description": "UTC ISO 8601 `YYYY-MM-DDThh:mm:ss`  timestamp for the reminder time of the latest tracking reminder notification that has been pre-emptively generated in the database",
          "type": "string",
          "format": "date-time"
        },
        "lastTracked": {
          "description": "UTC ISO 8601 `YYYY-MM-DDThh:mm:ss`  timestamp for the last time a measurement was received for this user and variable",
          "type": "string",
          "format": "date-time"
        },
        "startTrackingDate": {
          "description": "Earliest date on which the user should be reminded to track in YYYY-MM-DD format",
          "type": "string",
          "format": "string"
        },
        "stopTrackingDate": {
          "description": "Latest date on which the user should be reminded to track in YYYY-MM-DD format",
          "type": "string",
          "format": "string"
        },
        "updatedAt": {
          "description": "When the record in the database was last updated. Use UTC ISO 8601 `YYYY-MM-DDThh:mm:ss`  datetime format. Time zone should be UTC and not local.",
          "type": "string",
          "format": "date-time"
        },
        "variableName": {
          "description": "Name of the variable to be used when sending measurements",
          "type": "string"
        },
        "variableCategoryName": {
          "description": "Name of the variable category to be used when sending measurements",
          "type": "string"
        },
        "unitAbbreviatedName": {
          "description": "Abbreviated name of the unit to be used when sending measurements",
          "type": "string"
        },
        "combinationOperation": {
          "description": "The way multiple measurements are aggregated over time",
          "type": "string",
          "enum": [
            "MEAN",
            "SUM"
          ]
        },
        "createdAt": {
          "description": "Example: 2016-05-18 02:24:08",
          "type": "string",
          "format": "date-time"
        },
        "trackingReminderId": {
          "description": "Example: 11841",
          "type": "integer"
        },
        "defaultUnitId": {
          "description": "Example: 10",
          "type": "integer"
        },
        "variableDescription": {
          "description": "Example: negative",
          "type": "string"
        },
        "valence": {
          "description": "Example: negative",
          "type": "string"
        },
        "ionIcon": {
          "description": "Example: ion-sad-outline",
          "type": "string"
        },
        "variableCategoryId": {
          "description": "Example: 10",
          "type": "integer"
        },
        "lastValue": {
          "description": "Example: 2",
          "type": "number",
          "format": "double"
        },
        "secondToLastValue": {
          "description": "Example: 1",
          "type": "number",
          "format": "double"
        },
        "thirdToLastValue": {
          "description": "Example: 3",
          "type": "number",
          "format": "double"
        },
        "userVariableDefaultUnitId": {
          "description": "Example: 10",
          "type": "integer"
        },
        "userVariableVariableCategoryId": {
          "description": "Example: 10",
          "type": "integer"
        },
        "numberOfRawMeasurements": {
          "description": "Example: 445",
          "type": "integer"
        },
        "svgUrl": {
          "description": "Example: https://app.quantimo.do/ionic/Modo/www/img/variable_categories/symptoms.svg",
          "type": "string"
        },
        "pngUrl": {
          "description": "Example: https://app.quantimo.do/ionic/Modo/www/img/variable_categories/symptoms.png",
          "type": "string"
        },
        "pngPath": {
          "description": "Example: img/variable_categories/symptoms.png",
          "type": "string"
        },
        "variableCategoryImageUrl": {
          "description": "Example: https://maxcdn.icons8.com/Color/PNG/96/Messaging/sad-96.png",
          "type": "string"
        },
        "manualTracking": {
          "description": "Example: 1",
          "type": "boolean"
        },
        "userVariableVariableCategoryName": {
          "description": "Example: Symptoms",
          "type": "string"
        },
        "reminderStartTimeLocal": {
          "description": "Example: 21:45:20",
          "type": "string",
          "format": "date-time"
        },
        "reminderStartTimeLocalHumanFormatted": {
          "description": "Example: 09:45 PM",
          "type": "string",
          "format": "date-time"
        },
        "lastValueInUserVariableDefaultUnit": {
          "description": "Example: 2",
          "type": "number",
          "format": "double"
        },
        "secondToLastValueInUserVariableDefaultUnit": {
          "description": "Example: 1",
          "type": "number",
          "format": "double"
        },
        "thirdToLastValueInUserVariableDefaultUnit": {
          "description": "Example: 3",
          "type": "number",
          "format": "double"
        },
        "unitId": {
          "description": "Example: 10",
          "type": "integer"
        },
        "unitName": {
          "description": "Example: 1 to 5 Rating",
          "type": "string"
        },
        "unitCategoryId": {
          "description": "Example: 5",
          "type": "integer"
        },
        "unitCategoryName": {
          "description": "Example: Rating",
          "type": "string"
        },
        "defaultUnitName": {
          "description": "Example: 1 to 5 Rating",
          "type": "string"
        },
        "defaultUnitAbbreviatedName": {
          "description": "Example: /5",
          "type": "string"
        },
        "defaultUnitCategoryId": {
          "description": "Example: 5",
          "type": "integer"
        },
        "defaultUnitCategoryName": {
          "description": "Example: Rating",
          "type": "string"
        },
        "userVariableDefaultUnitName": {
          "description": "Example: 1 to 5 Rating",
          "type": "string"
        },
        "userVariableDefaultUnitAbbreviatedName": {
          "description": "Example: /5",
          "type": "string"
        },
        "userVariableDefaultUnitCategoryId": {
          "description": "Example: 5",
          "type": "integer"
        },
        "userVariableDefaultUnitCategoryName": {
          "description": "Example: Rating",
          "type": "string"
        },
        "minimumAllowedValue": {
          "description": "Example: 1",
          "type": "integer"
        },
        "maximumAllowedValue": {
          "description": "Example: 5",
          "type": "integer"
        },
        "inputType": {
          "description": "Example: saddestFaceIsFive",
          "type": "string"
        },
        "reminderStartEpochSeconds": {
          "description": "Example: 1469760320",
          "type": "integer"
        },
        "nextReminderTimeEpochSeconds": {
          "description": "Example: 1501555520",
          "type": "integer"
        },
        "firstDailyReminderTime": {
          "description": "Example: 02:45:20",
          "type": "string",
          "format": "date-time"
        },
        "frequencyTextDescription": {
          "description": "Example: Daily",
          "type": "string"
        },
        "frequencyTextDescriptionWithTime": {
          "description": "Example: Daily at 09:45 PM",
          "type": "string"
        },
        "valueAndFrequencyTextDescription": {
          "description": "Example: Rate daily",
          "type": "string"
        },
        "valueAndFrequencyTextDescriptionWithTime": {
          "description": "Example: Rate daily at 09:45 PM",
          "type": "string"
        },
        "fillingValue": {
          "description": "Example: 0",
          "type": "integer"
        },
        "availableDefaultUnits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Unit"
          }
        },
        "localDailyReminderNotificationTimes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "localDailyReminderNotificationTimesForAllReminders": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "repeating": {
          "description": "Example: true",
          "type": "boolean"
        },
        "numberOfUniqueValues": {
          "description": "Example: 1",
          "type": "integer"
        },
        "instructions": {
          "description": "Example: I am an instruction!",
          "type": "string"
        },
        "secondDailyReminderTime": {
          "description": "Example: 01:00:00",
          "type": "string",
          "format": "date-time"
        },
        "thirdDailyReminderTime": {
          "description": "Example: 20:00:00",
          "type": "string",
          "format": "date-time"
        },
        "errorMessage": {
          "description": "Example: reminderStartTimeLocal is less than  $user->earliestReminderTime or greater than  $user->latestReminderTime",
          "type": "string"
        },
        "trackingReminderImageUrl": {
          "description": "Example: Not Found",
          "type": "string"
        }
      }
    },
    "TrackingReminderNotification": {
      "required": [
        "id",
        "availableDefaultUnits",
        "actionArray",
        "trackAllActions",
        "fillingValue"
      ],
      "properties": {
        "id": {
          "description": "id for the specific PENDING tracking remidner",
          "type": "integer",
          "format": "int32"
        },
        "trackingReminderId": {
          "description": "id for the repeating tracking remidner",
          "type": "integer",
          "format": "int32"
        },
        "clientId": {
          "description": "clientId",
          "type": "string"
        },
        "userId": {
          "description": "ID of User",
          "type": "integer",
          "format": "int32"
        },
        "variableId": {
          "description": "Id for the variable to be tracked",
          "type": "integer",
          "format": "int32"
        },
        "defaultValue": {
          "description": "Default value to use for the measurement when tracking",
          "type": "number",
          "format": "float"
        },
        "reminderSound": {
          "description": "String identifier for the sound to accompany the reminder",
          "type": "string"
        },
        "popUp": {
          "description": "True if the reminders should appear as a popup notification",
          "type": "boolean"
        },
        "sms": {
          "description": "True if the reminders should be delivered via SMS",
          "type": "boolean"
        },
        "email": {
          "description": "True if the reminders should be delivered via email",
          "type": "boolean"
        },
        "notificationBar": {
          "description": "True if the reminders should appear in the notification bar",
          "type": "boolean"
        },
        "updatedAt": {
          "description": "When the record in the database was last updated. Use UTC ISO 8601 `YYYY-MM-DDThh:mm:ss`  datetime format. Time zone should be UTC and not local.",
          "type": "string",
          "format": "date-time"
        },
        "variableName": {
          "description": "Name of the variable to be used when sending measurements",
          "type": "string"
        },
        "variableCategoryName": {
          "description": "Name of the variable category to be used when sending measurements",
          "type": "string"
        },
        "unitAbbreviatedName": {
          "description": "Abbreviated name of the unit to be used when sending measurements",
          "type": "string"
        },
        "combinationOperation": {
          "description": "The way multiple measurements are aggregated over time",
          "type": "string",
          "enum": [
            "MEAN",
            "SUM"
          ]
        },
        "reminderFrequency": {
          "description": "How often user should be reminded in seconds. Example: 86400",
          "type": "integer"
        },
        "reminderStartTime": {
          "description": "Earliest time of day at which reminders should appear in UTC HH:MM:SS format",
          "type": "string"
        },
        "createdAt": {
          "description": "Example: 2017-07-29 20:49:54",
          "type": "string",
          "format": "date-time"
        },
        "trackingReminderNotificationId": {
          "description": "Example: 5072482",
          "type": "integer"
        },
        "reminderTime": {
          "description": "UTC ISO 8601 `YYYY-MM-DDThh:mm:ss` timestamp for the specific time the variable should be tracked in UTC.  This will be used for the measurement startTime if the track endpoint is used.",
          "type": "string",
          "format": "date-time"
        },
        "trackingReminderNotificationTime": {
          "description": "UTC ISO 8601 `YYYY-MM-DDThh:mm:ss` timestamp for the specific time the variable should be tracked in UTC.  This will be used for the measurement startTime if the track endpoint is used.",
          "type": "string",
          "format": "date-time"
        },
        "defaultUnitId": {
          "description": "Example: 10",
          "type": "integer"
        },
        "description": {
          "description": "Example: positive",
          "type": "string"
        },
        "variableCategoryId": {
          "description": "Example: 1",
          "type": "integer"
        },
        "valence": {
          "description": "Example: positive",
          "type": "string"
        },
        "mostCommonValue": {
          "description": "Example: 3",
          "type": "number",
          "format": "double"
        },
        "secondMostCommonValue": {
          "description": "Example: 4",
          "type": "number",
          "format": "double"
        },
        "thirdMostCommonValue": {
          "description": "Example: 2",
          "type": "number",
          "format": "double"
        },
        "lastValue": {
          "description": "Example: 3",
          "type": "number",
          "format": "double"
        },
        "secondToLastValue": {
          "description": "Example: 1",
          "type": "number",
          "format": "double"
        },
        "thirdToLastValue": {
          "description": "Example: 2",
          "type": "number",
          "format": "double"
        },
        "userVariableDefaultUnitId": {
          "description": "Example: 10",
          "type": "integer"
        },
        "userVariableVariableCategoryId": {
          "description": "Example: 1",
          "type": "integer"
        },
        "numberOfUniqueValues": {
          "description": "Example: 5",
          "type": "integer"
        },
        "ionIcon": {
          "description": "Example: ion-happy-outline",
          "type": "string"
        },
        "svgUrl": {
          "description": "Example: https://app.quantimo.do/ionic/Modo/www/img/variable_categories/emotions.svg",
          "type": "string"
        },
        "pngUrl": {
          "description": "Example: https://app.quantimo.do/ionic/Modo/www/img/variable_categories/emotions.png",
          "type": "string"
        },
        "pngPath": {
          "description": "Example: img/variable_categories/emotions.png",
          "type": "string"
        },
        "variableCategoryImageUrl": {
          "description": "Example: https://maxcdn.icons8.com/Color/PNG/96/Cinema/theatre_mask-96.png",
          "type": "string"
        },
        "manualTracking": {
          "description": "Example: 1",
          "type": "boolean"
        },
        "userVariableVariableCategoryName": {
          "description": "Example: Emotions",
          "type": "string"
        },
        "trackingReminderNotificationTimeEpoch": {
          "description": "Example: 1501534124",
          "type": "integer"
        },
        "trackingReminderNotificationTimeLocal": {
          "description": "Example: 15:48:44",
          "type": "string"
        },
        "lastValueInUserVariableDefaultUnit": {
          "description": "Example: 3",
          "type": "number",
          "format": "double"
        },
        "secondToLastValueInUserVariableDefaultUnit": {
          "description": "Example: 1",
          "type": "number",
          "format": "double"
        },
        "thirdToLastValueInUserVariableDefaultUnit": {
          "description": "Example: 2",
          "type": "number",
          "format": "double"
        },
        "mostCommonValueInUserVariableDefaultUnit": {
          "description": "Example: 3",
          "type": "number",
          "format": "double"
        },
        "secondMostCommonValueInUserVariableDefaultUnit": {
          "description": "Example: 4",
          "type": "number",
          "format": "double"
        },
        "thirdMostCommonValueInUserVariableDefaultUnit": {
          "description": "Example: 2",
          "type": "number",
          "format": "double"
        },
        "unitId": {
          "description": "Example: 10",
          "type": "integer"
        },
        "unitName": {
          "description": "Example: 1 to 5 Rating",
          "type": "string"
        },
        "unitCategoryId": {
          "description": "Example: 5",
          "type": "integer"
        },
        "unitCategoryName": {
          "description": "Example: Rating",
          "type": "string"
        },
        "defaultUnitName": {
          "description": "Example: 1 to 5 Rating",
          "type": "string"
        },
        "defaultUnitAbbreviatedName": {
          "description": "Example: /5",
          "type": "string"
        },
        "defaultUnitCategoryId": {
          "description": "Example: 5",
          "type": "integer"
        },
        "defaultUnitCategoryName": {
          "description": "Example: Rating",
          "type": "string"
        },
        "userVariableDefaultUnitName": {
          "description": "Example: 1 to 5 Rating",
          "type": "string"
        },
        "userVariableDefaultUnitAbbreviatedName": {
          "description": "Example: /5",
          "type": "string"
        },
        "userVariableDefaultUnitCategoryId": {
          "description": "Example: 5",
          "type": "integer"
        },
        "userVariableDefaultUnitCategoryName": {
          "description": "Example: Rating",
          "type": "string"
        },
        "minimumAllowedValue": {
          "description": "Example: 1",
          "type": "integer"
        },
        "maximumAllowedValue": {
          "description": "Example: 5",
          "type": "integer"
        },
        "inputType": {
          "description": "Example: happiestFaceIsFive",
          "type": "string"
        },
        "total": {
          "description": "Example: 3",
          "type": "number",
          "format": "double"
        },
        "title": {
          "description": "Example: Rate Overall Mood",
          "type": "string"
        },
        "trackingReminderImageUrl": {
          "description": "Example: https://rximage.nlm.nih.gov/image/images/gallery/original/55111-0129-60_RXNAVIMAGE10_B051D81E.jpg",
          "type": "string"
        },
        "imageUrl": {
          "description": "Example: https://rximage.nlm.nih.gov/image/images/gallery/original/55111-0129-60_RXNAVIMAGE10_B051D81E.jpg",
          "type": "string"
        },
        "iconIcon": {
          "description": "Example: ion-sad-outline",
          "type": "string"
        },
        "availableDefaultUnits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Unit"
          }
        },
        "actionArray": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingReminderNotificationActionArray"
          }
        },
        "trackAllActions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingReminderNotificationTrackAllAction"
          }
        },
        "fillingValue": {
          "description": "Example: 0",
          "type": "integer"
        },
        "reminderEndTime": {
          "description": "Example: ",
          "type": "string",
          "format": "date-time"
        },
        "notifiedAt": {
          "description": "Example: ",
          "type": "string",
          "format": "date-time"
        },
        "variableImageUrl": {
          "description": "Example: ",
          "type": "string"
        }
      }
    },
    "Unit": {
      "required": [
        "name",
        "abbreviatedName",
        "category",
        "conversionSteps",
        "unitCategory",
        "maximumValue"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Unit name"
        },
        "abbreviatedName": {
          "type": "string",
          "description": "Unit abbreviation"
        },
        "category": {
          "type": "string",
          "enum": [
            "Distance",
            "Duration",
            "Energy",
            "Frequency",
            "Miscellany",
            "Pressure",
            "Proportion",
            "Rating",
            "Temperature",
            "Volume",
            "Weight"
          ],
          "description": "Unit category"
        },
        "minimumAllowedValue": {
          "type": "number",
          "format": "double",
          "description": "The minimum allowed value for measurements. While you can record a value below this minimum, it will be excluded from the correlation analysis."
        },
        "maximumAllowedValue": {
          "type": "number",
          "format": "double",
          "description": "The maximum allowed value for measurements. While you can record a value above this maximum, it will be excluded from the correlation analysis."
        },
        "conversionSteps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConversionStep"
          },
          "description": "Conversion steps list"
        },
        "id": {
          "description": "Example: 29",
          "type": "integer"
        },
        "categoryName": {
          "description": "Example: Miscellany",
          "type": "string"
        },
        "categoryId": {
          "description": "Example: 6",
          "type": "integer"
        },
        "advanced": {
          "description": "Example: 1",
          "type": "integer"
        },
        "minimumValue": {
          "description": "Example: 0",
          "type": "integer"
        },
        "manualTracking": {
          "description": "Example: 0",
          "type": "integer"
        },
        "unitCategory": {
          "$ref": "#/definitions/UnitCategory"
        },
        "maximumValue": {
          "description": "Example: 4",
          "type": "integer"
        }
      }
    },
    "UnitCategory": {
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "id"
        },
        "name": {
          "type": "string",
          "description": "Category name"
        },
        "standardUnitAbbreviatedName": {
          "type": "string",
          "description": "Base unit for in which measurements are to be converted to and stored"
        }
      }
    },
    "User": {
      "required": [
        "id",
        "displayName",
        "loginName",
        "email",
        "accessToken",
        "administrator"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "User id"
        },
        "displayName": {
          "type": "string",
          "description": "User display name"
        },
        "loginName": {
          "type": "string",
          "description": "User login name"
        },
        "email": {
          "type": "string",
          "description": "User email"
        },
        "accessToken": {
          "type": "string",
          "description": "User access token"
        },
        "administrator": {
          "type": "boolean",
          "description": "Is user administrator"
        },
        "clientId": {
          "description": "Example: quantimodo",
          "type": "string"
        },
        "earliestReminderTime": {
          "description": "Earliest time user should get notifications. Example: 05:00:00",
          "type": "string",
          "format": "date-time"
        },
        "lastFour": {
          "description": "Example: 2009",
          "type": "string"
        },
        "latestReminderTime": {
          "description": "Latest time user should get notifications. Example: 23:00:00",
          "type": "string"
        },
        "clientUserId": {
          "description": "Example: 118444693184829555362",
          "type": "string"
        },
        "pushNotificationsEnabled": {
          "description": "Example: 1",
          "type": "boolean"
        },
        "roles": {
          "description": "Example: [\"admin\"]",
          "type": "string"
        },
        "sendPredictorEmails": {
          "description": "Example: 1",
          "type": "boolean"
        },
        "sendReminderNotificationEmails": {
          "description": "Example: 1",
          "type": "boolean"
        },
        "stripeId": {
          "description": "Example: cus_A8CEmcvl8jwLhV",
          "type": "string"
        },
        "stripePlan": {
          "description": "Example: monthly7",
          "type": "string"
        },
        "stripeSubscription": {
          "description": "Example: sub_ANTx3nOE7nzjQf",
          "type": "string"
        },
        "subscriptionProvider": {
          "description": "Example: google",
          "type": "string"
        },
        "timeZoneOffset": {
          "description": "Example: 300",
          "type": "integer"
        },
        "password": {
          "description": "Example: PASSWORD",
          "type": "string"
        },
        "avatar": {
          "description": "Example: https://lh6.googleusercontent.com/-BHr4hyUWqZU/AAAAAAAAAAI/AAAAAAAIG28/2Lv0en738II/photo.jpg?sz=50",
          "type": "string"
        },
        "userRegistered": {
          "description": "Example: 2013-12-03 15:25:13",
          "type": "string",
          "format": "date-time"
        },
        "userUrl": {
          "description": "Example: https://plus.google.com/+MikeSinn",
          "type": "string"
        },
        "capabilities": {
          "description": "Example: a:1:{s:13:\"administrator\";b:1;}",
          "type": "string"
        },
        "firstName": {
          "description": "Example: Mike",
          "type": "string"
        },
        "lastName": {
          "description": "Example: Sinn",
          "type": "string"
        },
        "trackLocation": {
          "description": "Example: 1",
          "type": "boolean"
        },
        "combineNotifications": {
          "description": "Example: 1",
          "type": "boolean"
        },
        "avatarImage": {
          "description": "Example: https://lh6.googleusercontent.com/-BHr4hyUWqZU/AAAAAAAAAAI/AAAAAAAIG28/2Lv0en738II/photo.jpg?sz=50",
          "type": "string"
        },
        "stripeActive": {
          "description": "Example: 1",
          "type": "boolean"
        },
        "getPreviewBuilds": {
          "description": "Example: false",
          "type": "boolean"
        },
        "hasAndroidApp": {
          "description": "Example: false",
          "type": "boolean"
        },
        "hasChromeExtension": {
          "description": "Example: false",
          "type": "boolean"
        },
        "hasIosApp": {
          "description": "Example: false",
          "type": "boolean"
        },
        "lastSmsTrackingReminderNotificationId": {
          "description": "Example: ",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Example: ",
          "type": "string"
        },
        "phoneVerificationCode": {
          "description": "Example: ",
          "type": "string"
        },
        "smsNotificationsEnabled": {
          "description": "Example: false",
          "type": "boolean"
        },
        "subscriptionEndsAt": {
          "description": "Example: ",
          "type": "string",
          "format": "date-time"
        },
        "refreshToken": {
          "description": "Example: 6e99b113d85586de1f92468433f2df1e666647cb",
          "type": "string"
        },
        "accessTokenExpires": {
          "description": "Example: 2018-08-08 02:41:19",
          "type": "string"
        },
        "accessTokenExpiresAtMilliseconds": {
          "description": "Example: 1533696079000",
          "type": "integer"
        }
      }
    },
    "UserTag": {
      "required": [
        "taggedVariableId",
        "tagVariableId",
        "conversionFactor"
      ],
      "properties": {
        "taggedVariableId": {
          "type": "integer",
          "description": "This is the id of the variable being tagged with an ingredient or something."
        },
        "tagVariableId": {
          "type": "integer",
          "description": "This is the id of the ingredient variable whose value is determined based on the value of the tagged variable."
        },
        "conversionFactor": {
          "type": "number",
          "description": "Number by which we multiply the tagged variable value to obtain the tag variable (ingredient) value"
        }
      }
    },
    "UserVariable": {
      "required": [
        "variableId",
        "availableDefaultUnits",
        "price",
        "alias",
        "userVariableValence",
        "userVariableWikipediaTitle",
        "informationalUrl",
        "parent",
        "productUrl",
        "wikipediaTitle",
        "userTagVariables",
        "userTaggedVariables",
        "joinedUserTagVariables",
        "ingredientUserTagVariables",
        "ingredientOfUserTagVariables",
        "childUserTagVariables",
        "parentUserTagVariables",
        "commonTagVariables",
        "commonTaggedVariables"
      ],
      "properties": {
        "parentId": {
          "description": "ID of the parent variable if this variable has any parent",
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "description": "User ID",
          "type": "integer",
          "format": "int32"
        },
        "clientId": {
          "description": "clientId",
          "type": "string"
        },
        "variableId": {
          "description": "ID of variable",
          "type": "integer",
          "format": "int32"
        },
        "defaultUnitId": {
          "description": "ID of unit to use for this variable",
          "type": "integer",
          "format": "int32"
        },
        "minimumAllowedValue": {
          "description": "The minimum allowed value for measurements. While you can record a value below this minimum, it will be excluded from the correlation analysis.",
          "type": "number",
          "format": "float"
        },
        "maximumAllowedValue": {
          "description": "The maximum allowed value for measurements. While you can record a value above this maximum, it will be excluded from the correlation analysis.",
          "type": "number",
          "format": "float"
        },
        "fillingValue": {
          "description": "When it comes to analysis to determine the effects of this variable, knowing when it did not occur is as important as knowing when it did occur. For example, if you are tracking a medication, it is important to know when you did not take it, but you do not have to log zero values for all the days when you haven't taken it. Hence, you can specify a filling value (typically 0) to insert whenever data is missing.",
          "type": "number",
          "format": "float"
        },
        "joinWith": {
          "description": "The Variable this Variable should be joined with. If the variable is joined with some other variable then it is not shown to user in the list of variables",
          "type": "integer",
          "format": "int32"
        },
        "onsetDelay": {
          "description": "The amount of time in seconds that elapses after the predictor/stimulus event before the outcome as perceived by a self-tracker is known as the onset delay. For example, the onset delay between the time a person takes an aspirin (predictor/stimulus event) and the time a person perceives a change in their headache severity (outcome) is approximately 30 minutes.",
          "type": "integer",
          "format": "int32"
        },
        "durationOfAction": {
          "description": "The amount of time over which a predictor/stimulus event can exert an observable influence on an outcome variable value. For instance, aspirin (stimulus/predictor) typically decreases headache severity for approximately four hours (duration of action) following the onset delay.",
          "type": "integer",
          "format": "int32"
        },
        "variableCategoryId": {
          "description": "ID of variable category",
          "type": "integer",
          "format": "int32"
        },
        "updated": {
          "description": "updated",
          "type": "integer",
          "format": "int32"
        },
        "public": {
          "description": "Is variable public",
          "type": "integer",
          "format": "int32"
        },
        "causeOnly": {
          "description": "A value of 1 indicates that this variable is generally a cause in a causal relationship.  An example of a causeOnly variable would be a variable such as Cloud Cover which would generally not be influenced by the behaviour of the user",
          "type": "boolean"
        },
        "fillingType": {
          "description": "0 -> No filling, 1 -> Use filling-value",
          "type": "string"
        },
        "numberOfMeasurements": {
          "description": "Number of measurements",
          "type": "integer",
          "format": "int32"
        },
        "numberOfProcessedDailyMeasurements": {
          "description": "Number of processed measurements",
          "type": "integer",
          "format": "int32"
        },
        "measurementsAtLastAnalysis": {
          "description": "Number of measurements at last analysis",
          "type": "integer",
          "format": "int32"
        },
        "lastUnitId": {
          "description": "ID of last Unit",
          "type": "integer",
          "format": "int32"
        },
        "lastOriginalUnitId": {
          "description": "ID of last original Unit",
          "type": "integer",
          "format": "int32"
        },
        "lastValue": {
          "description": "Last Value",
          "type": "number",
          "format": "float"
        },
        "lastOriginalValue": {
          "description": "Last original value which is stored",
          "type": "integer",
          "format": "int32"
        },
        "numberOfCorrelations": {
          "description": "Number of correlations for this variable",
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "description": "status",
          "type": "string"
        },
        "errorMessage": {
          "description": "error_message",
          "type": "string"
        },
        "lastSuccessfulUpdateTime": {
          "description": "When this variable or its settings were last updated",
          "type": "string",
          "format": "date-time"
        },
        "standard_deviation": {
          "description": "Standard deviation",
          "type": "number",
          "format": "float"
        },
        "variance": {
          "description": "Variance",
          "type": "number",
          "format": "float"
        },
        "minimumRecordedValue": {
          "description": "Minimum recorded value of this variable",
          "type": "number",
          "format": "float"
        },
        "maximumRecordedDailyValue": {
          "description": "Maximum recorded daily value of this variable",
          "type": "number",
          "format": "float"
        },
        "mean": {
          "description": "Mean",
          "type": "number",
          "format": "float"
        },
        "median": {
          "description": "Median",
          "type": "number",
          "format": "float"
        },
        "mostCommonUnitId": {
          "description": "Most common Unit ID",
          "type": "integer",
          "format": "int32"
        },
        "mostCommonValue": {
          "description": "Most common value",
          "type": "number",
          "format": "float"
        },
        "numberOfUniqueDailyValues": {
          "description": "Number of unique daily values",
          "type": "number",
          "format": "float"
        },
        "numberOfChanges": {
          "description": "Number of changes",
          "type": "integer",
          "format": "int32"
        },
        "skewness": {
          "description": "Skewness",
          "type": "number",
          "format": "float"
        },
        "kurtosis": {
          "description": "Kurtosis",
          "type": "number",
          "format": "float"
        },
        "latitude": {
          "description": "Latitude",
          "type": "number",
          "format": "float"
        },
        "longitude": {
          "description": "Longitude",
          "type": "number",
          "format": "float"
        },
        "location": {
          "description": "Location",
          "type": "string"
        },
        "experimentStartTime": {
          "description": "Earliest measurement start_time to be used in analysis. Use UTC ISO 8601 `YYYY-MM-DDThh:mm:ss`  datetime format",
          "type": "string",
          "format": "date-time"
        },
        "experimentEndTime": {
          "description": "Latest measurement start_time to be used in analysis. Use UTC ISO 8601 `YYYY-MM-DDThh:mm:ss`  datetime format",
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "description": "When the record was first created. Use UTC ISO 8601 `YYYY-MM-DDThh:mm:ss`  datetime format",
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "description": "When the record in the database was last updated. Use UTC ISO 8601 `YYYY-MM-DDThh:mm:ss`  datetime format",
          "type": "string",
          "format": "date-time"
        },
        "outcome": {
          "description": "Outcome variables (those with `outcome` == 1) are variables for which a human would generally want to identify the influencing factors. These include symptoms of illness, physique, mood, cognitive performance, etc.  Generally correlation calculations are only performed on outcome variables",
          "type": "boolean"
        },
        "sources": {
          "description": "Comma-separated list of source names to limit variables to those sources",
          "type": "string"
        },
        "earliestSourceTime": {
          "description": "Earliest source time",
          "type": "integer",
          "format": "int32"
        },
        "latestSourceTime": {
          "description": "Latest source time",
          "type": "integer",
          "format": "int32"
        },
        "earliestMeasurementTime": {
          "description": "Earliest measurement time",
          "type": "integer",
          "format": "int32"
        },
        "latestMeasurementTime": {
          "description": "Latest measurement time",
          "type": "integer",
          "format": "int32"
        },
        "earliestFillingTime": {
          "description": "Earliest filling time",
          "type": "integer",
          "format": "int32"
        },
        "latestFillingTime": {
          "description": "Latest filling time",
          "type": "integer",
          "format": "int32"
        },
        "imageUrl": {
          "type": "string",
          "description": ""
        },
        "ionIcon": {
          "type": "string",
          "description": ""
        },
        "id": {
          "description": "Example: 95614",
          "type": "integer"
        },
        "name": {
          "description": "Example: Trader Joes Bedtime Tea / Sleepytime Tea (any Brand)",
          "type": "string"
        },
        "userVariableDefaultUnitId": {
          "description": "Example: 23",
          "type": "integer"
        },
        "userVariableFillingValue": {
          "description": "Example: -1",
          "type": "number",
          "format": "double"
        },
        "latestUserMeasurementTime": {
          "description": "Example: 1501383600",
          "type": "integer"
        },
        "maximumRecordedValue": {
          "description": "Example: 1",
          "type": "number",
          "format": "double"
        },
        "rawMeasurementsAtLastAnalysis": {
          "description": "Example: 131",
          "type": "integer"
        },
        "numberOfRawMeasurements": {
          "description": "Example: 295",
          "type": "integer"
        },
        "numberOfUserCorrelationsAsCause": {
          "description": "Example: 115",
          "type": "integer"
        },
        "standardDeviation": {
          "description": "Example: 0.46483219855434",
          "type": "number",
          "format": "double"
        },
        "userVariableVariableCategoryId": {
          "description": "Example: 13",
          "type": "integer"
        },
        "variableFillingValue": {
          "description": "Example: -1",
          "type": "number",
          "format": "double"
        },
        "mostCommonOriginalUnitId": {
          "description": "Example: 23",
          "type": "integer"
        },
        "numberOfAggregateCorrelationsAsCause": {
          "description": "Example: 1",
          "type": "integer"
        },
        "numberOfUserVariables": {
          "description": "Example: 2",
          "type": "integer"
        },
        "secondMostCommonValue": {
          "description": "Example: 1",
          "type": "number",
          "format": "double"
        },
        "updatedTime": {
          "description": "Example: 2017-07-30 14:58:26",
          "type": "string",
          "format": "date-time"
        },
        "commonVariableUpdatedAt": {
          "description": "Example: 2017-02-07 23:43:39",
          "type": "string",
          "format": "date-time"
        },
        "userVariableUpdatedAt": {
          "description": "Example: 2017-07-30 14:58:26",
          "type": "string",
          "format": "date-time"
        },
        "combinationOperation": {
          "description": "Example: MEAN",
          "type": "string"
        },
        "variableCategoryName": {
          "description": "Example: Treatments",
          "type": "string"
        },
        "svgUrl": {
          "description": "Example: https://app.quantimo.do/ionic/Modo/www/img/variable_categories/treatments.svg",
          "type": "string"
        },
        "pngUrl": {
          "description": "Example: https://app.quantimo.do/ionic/Modo/www/img/variable_categories/treatments.png",
          "type": "string"
        },
        "pngPath": {
          "description": "Example: img/variable_categories/treatments.png",
          "type": "string"
        },
        "variableCategoryImageUrl": {
          "description": "Example: https://maxcdn.icons8.com/Color/PNG/96/Healthcare/pill-96.png",
          "type": "string"
        },
        "manualTracking": {
          "description": "Example: 1",
          "type": "boolean"
        },
        "userVariableVariableCategoryName": {
          "description": "Example: Treatments",
          "type": "string"
        },
        "meanInUserVariableDefaultUnit": {
          "description": "Example: 0.31159",
          "type": "number",
          "format": "double"
        },
        "secondMostCommonValueInUserVariableDefaultUnit": {
          "description": "Example: 1",
          "type": "number",
          "format": "double"
        },
        "unitId": {
          "description": "Example: 23",
          "type": "integer"
        },
        "unitName": {
          "description": "Example: Count",
          "type": "string"
        },
        "unitAbbreviatedName": {
          "description": "Example: count",
          "type": "string"
        },
        "unitCategoryId": {
          "description": "Example: 6",
          "type": "integer"
        },
        "unitCategoryName": {
          "description": "Example: Miscellany",
          "type": "string"
        },
        "defaultUnitName": {
          "description": "Example: Count",
          "type": "string"
        },
        "defaultUnitAbbreviatedName": {
          "description": "Example: count",
          "type": "string"
        },
        "defaultUnitCategoryId": {
          "description": "Example: 6",
          "type": "integer"
        },
        "defaultUnitCategoryName": {
          "description": "Example: Miscellany",
          "type": "string"
        },
        "userVariableDefaultUnitName": {
          "description": "Example: Count",
          "type": "string"
        },
        "userVariableDefaultUnitAbbreviatedName": {
          "description": "Example: count",
          "type": "string"
        },
        "userVariableDefaultUnitCategoryId": {
          "description": "Example: 6",
          "type": "integer"
        },
        "userVariableDefaultUnitCategoryName": {
          "description": "Example: Miscellany",
          "type": "string"
        },
        "variableName": {
          "description": "Example: Trader Joes Bedtime Tea / Sleepytime Tea (any Brand)",
          "type": "string"
        },
        "inputType": {
          "description": "Example: value",
          "type": "string"
        },
        "durationOfActionInHours": {
          "description": "Example: 168",
          "type": "integer"
        },
        "onsetDelayInHours": {
          "description": "Example: 0.5",
          "type": "number",
          "format": "double"
        },
        "chartsLinkStatic": {
          "description": "Example: https://local.quantimo.do/api/v2/charts?variableName=Trader%20Joes%20Bedtime%20Tea%20%2F%20Sleepytime%20Tea%20%28any%20Brand%29&userId=230&pngUrl=https%3A%2F%2Fapp.quantimo.do%2Fionic%2FModo%2Fwww%2Fimg%2Fvariable_categories%2Ftreatments.png",
          "type": "string"
        },
        "chartsLinkDynamic": {
          "description": "Example: https://local.quantimo.do/ionic/Modo/www/#/app/charts/Trader%20Joes%20Bedtime%20Tea%20%2F%20Sleepytime%20Tea%20%28any%20Brand%29?variableName=Trader%20Joes%20Bedtime%20Tea%20%2F%20Sleepytime%20Tea%20%28any%20Brand%29&userId=230&pngUrl=https%3A%2F%2Fapp.quantimo.do%2Fionic%2FModo%2Fwww%2Fimg%2Fvariable_categories%2Ftreatments.png",
          "type": "string"
        },
        "chartsLinkFacebook": {
          "description": "Example: https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fcharts%3FvariableName%3DTrader%2520Joes%2520Bedtime%2520Tea%2520%252F%2520Sleepytime%2520Tea%2520%2528any%2520Brand%2529%26userId%3D230%26pngUrl%3Dhttps%253A%252F%252Fapp.quantimo.do%252Fionic%252FModo%252Fwww%252Fimg%252Fvariable_categories%252Ftreatments.png",
          "type": "string"
        },
        "chartsLinkGoogle": {
          "description": "Example: https://plus.google.com/share?url=https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fcharts%3FvariableName%3DTrader%2520Joes%2520Bedtime%2520Tea%2520%252F%2520Sleepytime%2520Tea%2520%2528any%2520Brand%2529%26userId%3D230%26pngUrl%3Dhttps%253A%252F%252Fapp.quantimo.do%252Fionic%252FModo%252Fwww%252Fimg%252Fvariable_categories%252Ftreatments.png",
          "type": "string"
        },
        "chartsLinkTwitter": {
          "description": "Example: https://twitter.com/home?status=Check%20out%20my%20Trader%20Joes%20Bedtime%20Tea%20%2F%20Sleepytime%20Tea%20%28any%20Brand%29%20data%21%20https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fcharts%3FvariableName%3DTrader%2520Joes%2520Bedtime%2520Tea%2520%252F%2520Sleepytime%2520Tea%2520%2528any%2520Brand%2529%26userId%3D230%26pngUrl%3Dhttps%253A%252F%252Fapp.quantimo.do%252Fionic%252FModo%252Fwww%252Fimg%252Fvariable_categories%252Ftreatments.png%20%40quantimodo",
          "type": "string"
        },
        "chartsLinkEmail": {
          "description": "Example: mailto:?subject=Check%20out%20my%20Trader%20Joes%20Bedtime%20Tea%20%2F%20Sleepytime%20Tea%20%28any%20Brand%29%20data%21&body=See%20my%20Trader%20Joes%20Bedtime%20Tea%20%2F%20Sleepytime%20Tea%20%28any%20Brand%29%20history%20at%20https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fcharts%3FvariableName%3DTrader%2520Joes%2520Bedtime%2520Tea%2520%252F%2520Sleepytime%2520Tea%2520%2528any%2520Brand%2529%26userId%3D230%26pngUrl%3Dhttps%253A%252F%252Fapp.quantimo.do%252Fionic%252FModo%252Fwww%252Fimg%252Fvariable_categories%252Ftreatments.png%0A%0AHave%20a%20great%20day!",
          "type": "string"
        },
        "lastProcessedDailyValue": {
          "description": "Example: 500",
          "type": "number",
          "format": "double"
        },
        "userVariableMostCommonConnectorId": {
          "description": "Example: 51",
          "type": "integer"
        },
        "secondToLastValue": {
          "description": "Example: 250",
          "type": "number",
          "format": "double"
        },
        "thirdToLastValue": {
          "description": "Example: 250",
          "type": "number",
          "format": "double"
        },
        "commonVariableMostCommonConnectorId": {
          "description": "Example: 51",
          "type": "integer"
        },
        "mostCommonConnectorId": {
          "description": "Example: 51",
          "type": "integer"
        },
        "lastValueInUserVariableDefaultUnit": {
          "description": "Example: 500",
          "type": "number",
          "format": "double"
        },
        "secondToLastValueInUserVariableDefaultUnit": {
          "description": "Example: 250",
          "type": "number",
          "format": "double"
        },
        "thirdToLastValueInUserVariableDefaultUnit": {
          "description": "Example: 250",
          "type": "number",
          "format": "double"
        },
        "mostCommonValueInUserVariableDefaultUnit": {
          "description": "Example: 250",
          "type": "number",
          "format": "double"
        },
        "numberOfUserCorrelationsAsEffect": {
          "description": "Example: 29014",
          "type": "integer"
        },
        "numberOfAggregateCorrelationsAsEffect": {
          "description": "Example: 310",
          "type": "integer"
        },
        "thirdMostCommonValue": {
          "description": "Example: 6",
          "type": "number",
          "format": "double"
        },
        "thirdMostCommonValueInUserVariableDefaultUnit": {
          "description": "Example: 6",
          "type": "number",
          "format": "double"
        },
        "outcomeOfInterest": {
          "description": "Example: 1",
          "type": "integer"
        },
        "description": {
          "description": "Example: negative",
          "type": "string"
        },
        "valence": {
          "description": "Example: negative",
          "type": "string"
        },
        "shareUserMeasurements": {
          "description": "Example: 1",
          "type": "boolean"
        },
        "numberOfUniqueValues": {
          "description": "Example: 2",
          "type": "integer"
        },
        "numberOfTrackingReminders": {
          "description": "Example: 1",
          "type": "integer"
        },
        "iconIcon": {
          "description": "Example: ion-sad-outline",
          "type": "string"
        },
        "commonAlias": {
          "description": "Example: Anxiety / Nervousness",
          "type": "string"
        },
        "predictorOfInterest": {
          "description": "Example: 0",
          "type": "integer"
        },
        "experimentStartTimeString": {
          "description": "Example: 2010-03-23 01:31:42",
          "type": "string",
          "format": "date-time"
        },
        "experimentStartTimeSeconds": {
          "description": "Example: 1269307902",
          "type": "integer"
        },
        "experimentEndTimeString": {
          "description": "Example: 2030-01-01 06:00:00",
          "type": "string",
          "format": "date-time"
        },
        "experimentEndTimeSeconds": {
          "description": "Example: 1893477600",
          "type": "integer"
        },
        "availableDefaultUnits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Unit"
          }
        },
        "price": {
          "description": "Example: 95.4",
          "type": "number",
          "format": "double"
        },
        "alias": {
          "description": "Example: ",
          "type": "string"
        },
        "userVariableValence": {
          "description": "Example: ",
          "type": "string"
        },
        "userVariableWikipediaTitle": {
          "description": "Example: ",
          "type": "string"
        },
        "informationalUrl": {
          "description": "Example: ",
          "type": "string"
        },
        "parent": {
          "description": "Example: ",
          "type": "string"
        },
        "productUrl": {
          "description": "Example: ",
          "type": "string"
        },
        "wikipediaTitle": {
          "description": "Example: ",
          "type": "string"
        },
        "userTagVariables": {
          "$ref": "#/definitions/UserVariableArray"
        },
        "userTaggedVariables": {
          "$ref": "#/definitions/UserVariableArray"
        },
        "joinedUserTagVariables": {
          "$ref": "#/definitions/UserVariableArray"
        },
        "ingredientUserTagVariables": {
          "$ref": "#/definitions/UserVariableArray"
        },
        "ingredientOfUserTagVariables": {
          "$ref": "#/definitions/UserVariableArray"
        },
        "childUserTagVariables": {
          "$ref": "#/definitions/UserVariableArray"
        },
        "parentUserTagVariables": {
          "$ref": "#/definitions/UserVariableArray"
        },
        "commonTagVariables": {
          "$ref": "#/definitions/CommonVariableArray"
        },
        "commonTaggedVariables": {
          "$ref": "#/definitions/CommonVariableArray"
        }
      }
    },
    "UserVariableDelete": {
      "required": [
        "variableId"
      ],
      "properties": {
        "variableId": {
          "type": "integer",
          "description": "Id of the variable whose measurements should be deleted"
        }
      }
    },
    "CommonVariable": {
      "required": [
        "name",
        "variableCategoryName",
        "defaultUnitAbbreviatedName",
        "defaultUnitId",
        "sources",
        "minimumAllowedValue",
        "maximumAllowedValue",
        "combinationOperation",
        "fillingValue",
        "joinWith",
        "joinedVariables",
        "parent",
        "subVariables",
        "onsetDelay",
        "durationOfAction",
        "earliestMeasurementTime",
        "latestMeasurementTime",
        "updated",
        "causeOnly",
        "numberOfCorrelations",
        "outcome",
        "rawMeasurementsAtLastAnalysis",
        "numberOfRawMeasurements",
        "lastUnit",
        "lastValue",
        "mostCommonValue",
        "mostCommonUnit",
        "lastSource",
        "onsetDelayInHours",
        "availableDefaultUnits",
        "alias",
        "clientId",
        "earliestFillingTime",
        "earliestSourceTime",
        "experimentEndTime",
        "experimentStartTime",
        "fillingType",
        "userVariableFillingValue",
        "lastOriginalUnitId",
        "lastOriginalValue",
        "lastProcessedDailyValue",
        "lastSuccessfulUpdateTime",
        "lastUnitId",
        "latestFillingTime",
        "latestUserMeasurementTime",
        "latestSourceTime",
        "maximumRecordedValue",
        "measurementsAtLastAnalysis",
        "minimumRecordedValue",
        "userVariableMostCommonConnectorId",
        "numberOfChanges",
        "numberOfProcessedDailyMeasurements",
        "numberOfUniqueDailyValues",
        "numberOfUserCorrelationsAsCause",
        "numberOfUserCorrelationsAsEffect",
        "outcomeOfInterest",
        "parentId",
        "predictorOfInterest",
        "secondToLastValue",
        "shareUserMeasurements",
        "status",
        "thirdToLastValue",
        "userId",
        "userVariableValence",
        "variableId",
        "userVariableWikipediaTitle",
        "variableFillingValue",
        "informationalUrl",
        "commonVariableMostCommonConnectorId",
        "price",
        "productUrl",
        "wikipediaTitle",
        "commonVariableUpdatedAt",
        "userVariableUpdatedAt",
        "experimentStartTimeString",
        "experimentStartTimeSeconds",
        "experimentEndTimeString",
        "experimentEndTimeSeconds",
        "meanInUserVariableDefaultUnit",
        "lastValueInUserVariableDefaultUnit",
        "secondToLastValueInUserVariableDefaultUnit",
        "thirdToLastValueInUserVariableDefaultUnit",
        "mostCommonValueInUserVariableDefaultUnit",
        "secondMostCommonValueInUserVariableDefaultUnit",
        "thirdMostCommonValueInUserVariableDefaultUnit",
        "chartsLinkStatic",
        "chartsLinkDynamic",
        "chartsLinkFacebook",
        "chartsLinkGoogle",
        "chartsLinkTwitter",
        "chartsLinkEmail",
        "userTagVariables",
        "userTaggedVariables",
        "joinedUserTagVariables",
        "ingredientUserTagVariables",
        "ingredientOfUserTagVariables",
        "childUserTagVariables",
        "parentUserTagVariables",
        "commonTagVariables",
        "commonTaggedVariables",
        "dataSource"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Variable ID"
        },
        "name": {
          "type": "string",
          "description": "User-defined variable display name."
        },
        "variableCategoryName": {
          "type": "string",
          "description": "Variable category like Mood, Sleep, Physical Activity, Treatment, Symptom, etc."
        },
        "defaultUnitAbbreviatedName": {
          "type": "string",
          "description": "Abbreviated name of the default unit for the variable"
        },
        "defaultUnitId": {
          "type": "integer",
          "description": "Id of the default unit for the variable"
        },
        "sources": {
          "type": "string",
          "description": "Comma-separated list of source names to limit variables to those sources"
        },
        "minimumAllowedValue": {
          "type": "number",
          "format": "double",
          "description": "The minimum allowed value for measurements. While you can record a value below this minimum, it will be excluded from the correlation analysis."
        },
        "maximumAllowedValue": {
          "type": "number",
          "format": "double",
          "description": "The maximum allowed value for measurements. While you can record a value above this maximum, it will be excluded from the correlation analysis."
        },
        "combinationOperation": {
          "type": "string",
          "enum": [
            "MEAN",
            "SUM"
          ],
          "description": "Way to aggregate measurements over time. Options are \"MEAN\" or \"SUM\". SUM should be used for things like minutes of exercise.  If you use MEAN for exercise, then a person might exercise more minutes in one day but add separate measurements that were smaller.  So when we are doing correlational analysis, we would think that the person exercised less that day even though they exercised more.  Conversely, we must use MEAN for things such as ratings which cannot be SUMMED."
        },
        "fillingValue": {
          "type": "number",
          "format": "double",
          "description": "When it comes to analysis to determine the effects of this variable, knowing when it did not occur is as important as knowing when it did occur. For example, if you are tracking a medication, it is important to know when you did not take it, but you do not have to log zero values for all the days when you haven't taken it. Hence, you can specify a filling value (typically 0) to insert whenever data is missing."
        },
        "joinWith": {
          "type": "string",
          "description": "The Variable this Variable should be joined with. If the variable is joined with some other variable then it is not shown to user in the list of variables."
        },
        "joinedVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonVariable"
          },
          "description": "Array of Variables that are joined with this Variable"
        },
        "parent": {
          "type": "integer",
          "description": "Id of the parent variable if this variable has any parent"
        },
        "subVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonVariable"
          },
          "description": "Array of Variables that are sub variables to this Variable"
        },
        "onsetDelay": {
          "type": "integer",
          "description": "The amount of time in seconds that elapses after the predictor/stimulus event before the outcome as perceived by a self-tracker is known as the onset delay. For example, the onset delay between the time a person takes an aspirin (predictor/stimulus event) and the time a person perceives a change in their headache severity (outcome) is approximately 30 minutes."
        },
        "durationOfAction": {
          "type": "integer",
          "description": "The amount of time over which a predictor/stimulus event can exert an observable influence on an outcome variable value. For instance, aspirin (stimulus/predictor) typically decreases headache severity for approximately four hours (duration of action) following the onset delay."
        },
        "earliestMeasurementTime": {
          "type": "integer",
          "description": "Earliest measurement time"
        },
        "latestMeasurementTime": {
          "type": "integer",
          "description": "Latest measurement time"
        },
        "updated": {
          "type": "integer",
          "description": "When this variable or its settings were last updated"
        },
        "causeOnly": {
          "type": "integer",
          "description": "A value of 1 indicates that this variable is generally a cause in a causal relationship.  An example of a causeOnly variable would be a variable such as Cloud Cover which would generally not be influenced by the behaviour of the user."
        },
        "numberOfCorrelations": {
          "type": "integer",
          "description": "Number of correlations"
        },
        "outcome": {
          "type": "integer",
          "description": "Outcome variables (those with `outcome` == 1) are variables for which a human would generally want to identify the influencing factors. These include symptoms of illness, physique, mood, cognitive performance, etc.  Generally correlation calculations are only performed on outcome variables."
        },
        "rawMeasurementsAtLastAnalysis": {
          "type": "integer",
          "description": "The number of measurements that a given user had for this variable the last time a correlation calculation was performed. Generally correlation values are only updated once the current number of measurements for a variable is more than 10% greater than the rawMeasurementsAtLastAnalysis.  This avoids a computationally-demanding recalculation when there's not enough new data to make a significant difference in the correlation."
        },
        "numberOfRawMeasurements": {
          "type": "integer",
          "description": "Number of measurements"
        },
        "lastUnit": {
          "type": "string",
          "description": "Last unit"
        },
        "lastValue": {
          "type": "integer",
          "description": "Last value"
        },
        "mostCommonValue": {
          "type": "integer",
          "description": "Most common value"
        },
        "mostCommonUnit": {
          "type": "string",
          "description": "Most common unit"
        },
        "lastSource": {
          "type": "integer",
          "description": "Last source"
        },
        "imageUrl": {
          "type": "string",
          "description": ""
        },
        "ionIcon": {
          "type": "string",
          "description": ""
        },
        "createdAt": {
          "description": "Example: 2014-10-23 03:41:06",
          "type": "string",
          "format": "date-time"
        },
        "unitId": {
          "description": "Example: 34",
          "type": "integer"
        },
        "kurtosis": {
          "description": "Example: 10.764488721491",
          "type": "number",
          "format": "double"
        },
        "mean": {
          "description": "Example: 2202.3886251393",
          "type": "number",
          "format": "double"
        },
        "median": {
          "description": "Example: 2255.9284755781",
          "type": "number",
          "format": "double"
        },
        "mostCommonConnectorId": {
          "description": "Example: 7",
          "type": "integer"
        },
        "mostCommonOriginalUnitId": {
          "description": "Example: 2",
          "type": "integer"
        },
        "numberOfAggregateCorrelationsAsCause": {
          "description": "Example: 386",
          "type": "integer"
        },
        "numberOfAggregateCorrelationsAsEffect": {
          "description": "Example: 2074",
          "type": "integer"
        },
        "numberOfTrackingReminders": {
          "description": "Example: 6",
          "type": "integer"
        },
        "numberOfUniqueValues": {
          "description": "Example: 74",
          "type": "integer"
        },
        "numberOfUserVariables": {
          "description": "Example: 307",
          "type": "integer"
        },
        "secondMostCommonValue": {
          "description": "Example: 8",
          "type": "number",
          "format": "double"
        },
        "skewness": {
          "description": "Example: 0.2461351905455",
          "type": "number",
          "format": "double"
        },
        "standardDeviation": {
          "description": "Example: 1840.535129803",
          "type": "number",
          "format": "double"
        },
        "thirdMostCommonValue": {
          "description": "Example: 7",
          "type": "number",
          "format": "double"
        },
        "updatedAt": {
          "description": "Example: 2017-07-31 03:57:06",
          "type": "string",
          "format": "date-time"
        },
        "variableCategoryId": {
          "description": "Example: 6",
          "type": "integer"
        },
        "variance": {
          "description": "Example: 115947037.40816",
          "type": "number",
          "format": "double"
        },
        "public": {
          "description": "Example: 1",
          "type": "boolean"
        },
        "userVariableVariableCategoryId": {
          "description": "Example: 6",
          "type": "integer"
        },
        "svgUrl": {
          "description": "Example: https://app.quantimo.do/ionic/Modo/www/img/variable_categories/sleep.svg",
          "type": "string"
        },
        "pngUrl": {
          "description": "Example: https://app.quantimo.do/ionic/Modo/www/img/variable_categories/sleep.png",
          "type": "string"
        },
        "pngPath": {
          "description": "Example: img/variable_categories/sleep.png",
          "type": "string"
        },
        "variableCategoryImageUrl": {
          "description": "Example: https://maxcdn.icons8.com/Color/PNG/96/Household/sleeping_in_bed-96.png",
          "type": "string"
        },
        "manualTracking": {
          "description": "Example: 1",
          "type": "boolean"
        },
        "userVariableVariableCategoryName": {
          "description": "Example: Sleep",
          "type": "string"
        },
        "category": {
          "description": "Example: Sleep",
          "type": "string"
        },
        "durationOfActionInHours": {
          "description": "Example: 168",
          "type": "integer"
        },
        "variableName": {
          "description": "Example: Sleep Duration",
          "type": "string"
        },
        "numberOfMeasurements": {
          "description": "Example: 308554",
          "type": "integer"
        },
        "unitName": {
          "description": "Example: Hours",
          "type": "string"
        },
        "unitAbbreviatedName": {
          "description": "Example: h",
          "type": "string"
        },
        "unitCategoryId": {
          "description": "Example: 1",
          "type": "integer"
        },
        "unitCategoryName": {
          "description": "Example: Duration",
          "type": "string"
        },
        "defaultUnitName": {
          "description": "Example: Hours",
          "type": "string"
        },
        "defaultUnitCategoryId": {
          "description": "Example: 1",
          "type": "integer"
        },
        "defaultUnitCategoryName": {
          "description": "Example: Duration",
          "type": "string"
        },
        "userVariableDefaultUnitId": {
          "description": "Example: 34",
          "type": "integer"
        },
        "userVariableDefaultUnitName": {
          "description": "Example: Hours",
          "type": "string"
        },
        "userVariableDefaultUnitAbbreviatedName": {
          "description": "Example: h",
          "type": "string"
        },
        "userVariableDefaultUnitCategoryId": {
          "description": "Example: 1",
          "type": "integer"
        },
        "userVariableDefaultUnitCategoryName": {
          "description": "Example: Duration",
          "type": "string"
        },
        "inputType": {
          "description": "Example: slider",
          "type": "string"
        },
        "commonAlias": {
          "description": "Example: Mood_(psychology)",
          "type": "string"
        },
        "description": {
          "description": "Example: positive",
          "type": "string"
        },
        "valence": {
          "description": "Example: positive",
          "type": "string"
        },
        "onsetDelayInHours": {
          "description": "Example: 0",
          "type": "integer"
        },
        "availableDefaultUnits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Unit"
          }
        },
        "alias": {
          "description": "Example: ",
          "type": "string"
        },
        "clientId": {
          "description": "Example: local",
          "type": "string"
        },
        "earliestFillingTime": {
          "description": "Example: 1362099600",
          "type": "integer"
        },
        "earliestSourceTime": {
          "description": "Example: 1334473200",
          "type": "integer"
        },
        "experimentEndTime": {
          "description": "Example: ",
          "type": "string",
          "format": "date-time"
        },
        "experimentStartTime": {
          "description": "Example: ",
          "type": "string",
          "format": "date-time"
        },
        "fillingType": {
          "description": "Example: ",
          "type": "string"
        },
        "userVariableFillingValue": {
          "description": "Example: -1",
          "type": "number",
          "format": "double"
        },
        "lastOriginalUnitId": {
          "description": "Example: 47",
          "type": "integer"
        },
        "lastOriginalValue": {
          "description": "Example: 100900",
          "type": "number",
          "format": "double"
        },
        "lastProcessedDailyValue": {
          "description": "Example: 100900",
          "type": "number",
          "format": "double"
        },
        "lastSuccessfulUpdateTime": {
          "description": "Example: 2017-02-08 17:43:01",
          "type": "string",
          "format": "date-time"
        },
        "lastUnitId": {
          "description": "Example: 47",
          "type": "integer"
        },
        "latestFillingTime": {
          "description": "Example: 1501722000",
          "type": "integer"
        },
        "latestUserMeasurementTime": {
          "description": "Example: 1501722000",
          "type": "integer"
        },
        "latestSourceTime": {
          "description": "Example: 1501722000",
          "type": "integer"
        },
        "maximumRecordedValue": {
          "description": "Example: 104700",
          "type": "number",
          "format": "double"
        },
        "measurementsAtLastAnalysis": {
          "description": "Example: 9795",
          "type": "integer"
        },
        "minimumRecordedValue": {
          "description": "Example: 1008.74",
          "type": "number",
          "format": "double"
        },
        "userVariableMostCommonConnectorId": {
          "description": "Example: 13",
          "type": "integer"
        },
        "numberOfChanges": {
          "description": "Example: 1317",
          "type": "integer"
        },
        "numberOfProcessedDailyMeasurements": {
          "description": "Example: 1364",
          "type": "integer"
        },
        "numberOfUniqueDailyValues": {
          "description": "Example: 283",
          "type": "integer"
        },
        "numberOfUserCorrelationsAsCause": {
          "description": "Example: 155",
          "type": "integer"
        },
        "numberOfUserCorrelationsAsEffect": {
          "description": "Example: 0",
          "type": "integer"
        },
        "outcomeOfInterest": {
          "description": "Example: 0",
          "type": "integer"
        },
        "parentId": {
          "description": "Example: ",
          "type": "string"
        },
        "predictorOfInterest": {
          "description": "Example: 0",
          "type": "integer"
        },
        "secondToLastValue": {
          "description": "Example: 101800",
          "type": "number",
          "format": "double"
        },
        "shareUserMeasurements": {
          "description": "Example: false",
          "type": "boolean"
        },
        "status": {
          "description": "Example: UPDATED",
          "type": "string"
        },
        "thirdToLastValue": {
          "description": "Example: 102000",
          "type": "number",
          "format": "double"
        },
        "userId": {
          "description": "Example: 230",
          "type": "integer"
        },
        "userVariableValence": {
          "description": "Example: ",
          "type": "string"
        },
        "variableId": {
          "description": "Example: 96380",
          "type": "integer"
        },
        "userVariableWikipediaTitle": {
          "description": "Example: ",
          "type": "string"
        },
        "variableFillingValue": {
          "description": "Example: -1",
          "type": "number",
          "format": "double"
        },
        "informationalUrl": {
          "description": "Example: ",
          "type": "string"
        },
        "commonVariableMostCommonConnectorId": {
          "description": "Example: 13",
          "type": "integer"
        },
        "price": {
          "description": "Example: ",
          "type": "string"
        },
        "productUrl": {
          "description": "Example: ",
          "type": "string"
        },
        "wikipediaTitle": {
          "description": "Example: ",
          "type": "string"
        },
        "commonVariableUpdatedAt": {
          "description": "Example: 2017-07-30 20:47:38",
          "type": "string",
          "format": "date-time"
        },
        "userVariableUpdatedAt": {
          "description": "Example: 2017-08-04 11:19:31",
          "type": "string",
          "format": "date-time"
        },
        "experimentStartTimeString": {
          "description": "Example: ",
          "type": "string",
          "format": "date-time"
        },
        "experimentStartTimeSeconds": {
          "description": "Example: ",
          "type": "string",
          "format": "date-time"
        },
        "experimentEndTimeString": {
          "description": "Example: ",
          "type": "string",
          "format": "date-time"
        },
        "experimentEndTimeSeconds": {
          "description": "Example: ",
          "type": "string",
          "format": "date-time"
        },
        "meanInUserVariableDefaultUnit": {
          "description": "Example: 101260",
          "type": "number",
          "format": "double"
        },
        "lastValueInUserVariableDefaultUnit": {
          "description": "Example: 101600",
          "type": "number",
          "format": "double"
        },
        "secondToLastValueInUserVariableDefaultUnit": {
          "description": "Example: 101800",
          "type": "number",
          "format": "double"
        },
        "thirdToLastValueInUserVariableDefaultUnit": {
          "description": "Example: 102000",
          "type": "number",
          "format": "double"
        },
        "mostCommonValueInUserVariableDefaultUnit": {
          "description": "Example: 101700",
          "type": "number",
          "format": "double"
        },
        "secondMostCommonValueInUserVariableDefaultUnit": {
          "description": "Example: 101500",
          "type": "number",
          "format": "double"
        },
        "thirdMostCommonValueInUserVariableDefaultUnit": {
          "description": "Example: 101700",
          "type": "number",
          "format": "double"
        },
        "chartsLinkStatic": {
          "description": "Example: https://local.quantimo.do/api/v2/charts?variableName=Barometric%20Pressure&userId=230&pngUrl=https%3A%2F%2Fapp.quantimo.do%2Fionic%2FModo%2Fwww%2Fimg%2Fvariable_categories%2Fenvironment.png",
          "type": "string"
        },
        "chartsLinkDynamic": {
          "description": "Example: https://local.quantimo.do/ionic/Modo/www/#/app/charts/Barometric%20Pressure?variableName=Barometric%20Pressure&userId=230&pngUrl=https%3A%2F%2Fapp.quantimo.do%2Fionic%2FModo%2Fwww%2Fimg%2Fvariable_categories%2Fenvironment.png",
          "type": "string"
        },
        "chartsLinkFacebook": {
          "description": "Example: https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fcharts%3FvariableName%3DBarometric%2520Pressure%26userId%3D230%26pngUrl%3Dhttps%253A%252F%252Fapp.quantimo.do%252Fionic%252FModo%252Fwww%252Fimg%252Fvariable_categories%252Fenvironment.png",
          "type": "string"
        },
        "chartsLinkGoogle": {
          "description": "Example: https://plus.google.com/share?url=https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fcharts%3FvariableName%3DBarometric%2520Pressure%26userId%3D230%26pngUrl%3Dhttps%253A%252F%252Fapp.quantimo.do%252Fionic%252FModo%252Fwww%252Fimg%252Fvariable_categories%252Fenvironment.png",
          "type": "string"
        },
        "chartsLinkTwitter": {
          "description": "Example: https://twitter.com/home?status=Check%20out%20my%20Barometric%20Pressure%20data%21%20https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fcharts%3FvariableName%3DBarometric%2520Pressure%26userId%3D230%26pngUrl%3Dhttps%253A%252F%252Fapp.quantimo.do%252Fionic%252FModo%252Fwww%252Fimg%252Fvariable_categories%252Fenvironment.png%20%40quantimodo",
          "type": "string"
        },
        "chartsLinkEmail": {
          "description": "Example: mailto:?subject=Check%20out%20my%20Barometric%20Pressure%20data%21&body=See%20my%20Barometric%20Pressure%20history%20at%20https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fcharts%3FvariableName%3DBarometric%2520Pressure%26userId%3D230%26pngUrl%3Dhttps%253A%252F%252Fapp.quantimo.do%252Fionic%252FModo%252Fwww%252Fimg%252Fvariable_categories%252Fenvironment.png%0A%0AHave%20a%20great%20day!",
          "type": "string"
        },
        "userTagVariables": {
          "$ref": "#/definitions/UserVariableArray"
        },
        "userTaggedVariables": {
          "$ref": "#/definitions/UserVariableArray"
        },
        "joinedUserTagVariables": {
          "$ref": "#/definitions/UserVariableArray"
        },
        "ingredientUserTagVariables": {
          "$ref": "#/definitions/UserVariableArray"
        },
        "ingredientOfUserTagVariables": {
          "$ref": "#/definitions/UserVariableArray"
        },
        "childUserTagVariables": {
          "$ref": "#/definitions/UserVariableArray"
        },
        "parentUserTagVariables": {
          "$ref": "#/definitions/UserVariableArray"
        },
        "commonTagVariables": {
          "$ref": "#/definitions/CommonVariableArray"
        },
        "commonTaggedVariables": {
          "$ref": "#/definitions/CommonVariableArray"
        },
        "dataSource": {
          "$ref": "#/definitions/DataSource"
        }
      }
    },
    "VariableCategory": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Category name"
        },
        "id": {
          "description": "Example: 1",
          "type": "integer"
        },
        "appType": {
          "description": "Example: mood",
          "type": "string"
        },
        "fillingValue": {
          "description": "Example: -1",
          "type": "integer"
        },
        "maximumAllowedValue": {
          "description": "Example: ",
          "type": "string"
        },
        "minimumAllowedValue": {
          "description": "Example: ",
          "type": "string"
        },
        "durationOfAction": {
          "description": "Example: 86400",
          "type": "integer"
        },
        "onsetDelay": {
          "description": "Example: 0",
          "type": "integer"
        },
        "combinationOperation": {
          "description": "Example: MEAN",
          "type": "string"
        },
        "causeOnly": {
          "description": "Example: false",
          "type": "boolean"
        },
        "public": {
          "description": "Example: true",
          "type": "boolean"
        },
        "outcome": {
          "description": "Example: true",
          "type": "boolean"
        },
        "updated": {
          "description": "Example: 1",
          "type": "integer"
        },
        "createdTime": {
          "description": "Example: ",
          "type": "string",
          "format": "date-time"
        },
        "updatedTime": {
          "description": "Example: ",
          "type": "string",
          "format": "date-time"
        },
        "imageUrl": {
          "description": "Example: https://maxcdn.icons8.com/Color/PNG/96/Cinema/theatre_mask-96.png",
          "type": "string"
        },
        "ionIcon": {
          "description": "Example: ion-happy-outline",
          "type": "string"
        },
        "manualTracking": {
          "description": "Example: true",
          "type": "boolean"
        },
        "svgUrl": {
          "description": "Example: https://app.quantimo.do/ionic/Modo/www/img/variable_categories/emotions.svg",
          "type": "string"
        },
        "pngUrl": {
          "description": "Example: https://app.quantimo.do/ionic/Modo/www/img/variable_categories/emotions.png",
          "type": "string"
        },
        "pngPath": {
          "description": "Example: img/variable_categories/emotions.png",
          "type": "string"
        },
        "svgPath": {
          "description": "Example: img/variable_categories/emotions.svg",
          "type": "string"
        },
        "defaultUnitAbbreviatedName": {
          "description": "Example: /5",
          "type": "string"
        },
        "helpText": {
          "description": "Example: What emotion do you want to rate?",
          "type": "string"
        },
        "variableCategoryName": {
          "description": "Example: Emotions",
          "type": "string"
        },
        "variableCategoryNameSingular": {
          "description": "Example: Emotion",
          "type": "string"
        },
        "measurementSynonymSingularLowercase": {
          "description": "Example: rating",
          "type": "string"
        },
        "moreInfo": {
          "description": "Example: Do you have any emotions that fluctuate regularly?  If so, add them so I can try to determine which factors are influencing them.",
          "type": "string"
        },
        "defaultUnitId": {
          "description": "Example: 10",
          "type": "integer"
        }
      }
    },
    "VoteDelete": {
      "required": [
        "cause",
        "effect"
      ],
      "properties": {
        "cause": {
          "type": "string",
          "description": "Cause variable name for the correlation to which the vote pertains"
        },
        "effect": {
          "type": "string",
          "description": "Effect variable name for the correlation to which the vote pertains"
        }
      }
    },
    "Vote": {
      "required": [
        "clientId",
        "userId",
        "causeVariableId",
        "effectVariableId",
        "value"
      ],
      "properties": {
        "id": {
          "description": "id",
          "type": "integer",
          "format": "int32"
        },
        "clientId": {
          "description": "clientId",
          "type": "string"
        },
        "userId": {
          "description": "ID of User",
          "type": "integer",
          "format": "int32"
        },
        "causeVariableId": {
          "type": "integer",
          "description": "Cause variable id"
        },
        "effectVariableId": {
          "type": "integer",
          "description": "Effect variable id"
        },
        "value": {
          "type": "boolean",
          "description": "Vote: 0 (for implausible) or 1 (for plausible)"
        },
        "createdAt": {
          "description": "When the record was first created. Use UTC ISO 8601 `YYYY-MM-DDThh:mm:ss`  datetime format",
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "description": "When the record in the database was last updated. Use UTC ISO 8601 `YYYY-MM-DDThh:mm:ss`  datetime format",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Study": {
      "required": [
        "causeVariable",
        "effectVariable",
        "causeProcessedDailyMeasurements",
        "charts",
        "effectProcessedDailyMeasurements",
        "pairs",
        "statistics",
        "text",
        "user"
      ],
      "properties": {
        "userId": {
          "description": "Example: 230",
          "type": "integer"
        },
        "causeProcessedDailyMeasurements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessedDailyMeasurement"
          }
        },
        "causeVariable": {
          "$ref": "#/definitions/UserVariable"
        },
        "effectVariable": {
          "$ref": "#/definitions/UserVariable"
        },
        "charts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Highchart"
          }
        },
        "effectProcessedDailyMeasurements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessedDailyMeasurement"
          }
        },
        "pairs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pair"
          }
        },
        "statistics": {
          "$ref": "#/definitions/Statistic"
        },
        "text": {
          "description": "Example: ",
          "type": "string"
        },
        "user": {
          "description": "Example: ",
          "type": "string"
        },
        "highchartArray": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HighchartArray"
          }
        }
      }
    },
    "Correlation": {
      "required": [
        "causeVariableName",
        "effectVariableName",
        "averageDailyHighCause",
        "averageDailyLowCause",
        "averageEffect",
        "averageEffectFollowingHighCause",
        "averageEffectFollowingLowCause",
        "averageForwardPearsonCorrelationOverOnsetDelays",
        "averageReversePearsonCorrelationOverOnsetDelays",
        "causeChanges",
        "causeVariableId",
        "confidenceInterval",
        "createdAt",
        "criticalTValue",
        "durationOfAction",
        "effectChanges",
        "effectVariableId",
        "experimentEndTime",
        "experimentStartTime",
        "correlationCoefficient",
        "forwardSpearmanCorrelationCoefficient",
        "numberOfPairs",
        "onsetDelayWithStrongestPearsonCorrelation",
        "optimalPearsonProduct",
        "pearsonCorrelationWithNoOnsetDelay",
        "predictivePearsonCorrelation",
        "predictsHighEffectChange",
        "predictsLowEffectChange",
        "qmScore",
        "statisticalSignificance",
        "strongestPearsonCorrelationCoefficient",
        "tValue",
        "updatedAt",
        "userId",
        "valuePredictingHighOutcome",
        "valuePredictingLowOutcome",
        "causeVariableCombinationOperation",
        "causeVariableDefaultUnitId",
        "causeVariableImageUrl",
        "causeVariableIonIcon",
        "causeVariableMostCommonConnectorId",
        "causeVariableCategoryId",
        "effectVariableCombinationOperation",
        "effectVariableCommonAlias",
        "effectVariableDefaultUnitId",
        "effectVariableImageUrl",
        "effectVariableIonIcon",
        "effectVariableMostCommonConnectorId",
        "effectVariableCategoryId",
        "timestamp",
        "userVote",
        "causeUserVariableShareUserMeasurements",
        "effectUserVariableShareUserMeasurements",
        "predictorFillingValue",
        "outcomeFillingValue",
        "averageVote",
        "durationOfActionInHours",
        "onsetDelayWithStrongestPearsonCorrelationInHours",
        "effectVariableCategoryName",
        "causeVariableCategoryName",
        "direction",
        "causeVariableDefaultUnitAbbreviatedName",
        "effectVariableDefaultUnitAbbreviatedName",
        "causeVariableDefaultUnitName",
        "effectVariableDefaultUnitName",
        "shareUserMeasurements",
        "effectUnit",
        "significanceExplanation",
        "significantDifference",
        "effectSize",
        "predictsHighEffectChangeSentenceFragment",
        "predictsLowEffectChangeSentenceFragment",
        "valuePredictingHighOutcomeExplanation",
        "averageEffectFollowingHighCauseExplanation",
        "averageEffectFollowingLowCauseExplanation",
        "valuePredictingLowOutcomeExplanation",
        "strengthLevel",
        "confidenceLevel",
        "predictivePearsonCorrelationCoefficient",
        "predictorExplanation",
        "studyTitle",
        "studyAbstract",
        "studyLinkStatic",
        "studyLinkDynamic",
        "studyLinkFacebook",
        "studyLinkGoogle",
        "studyLinkTwitter",
        "studyLinkEmail",
        "gaugeImage",
        "gaugeImageSquare",
        "imageUrl",
        "studyDesign",
        "studyObjective",
        "dataSources",
        "dataSourcesParagraphForCause",
        "instructionsForCause",
        "dataSourcesParagraphForEffect",
        "instructionsForEffect",
        "dataAnalysis",
        "studyResults",
        "studyLimitations",
        "onsetDelay",
        "onsetDelayInHours",
        "predictorMinimumAllowedValue",
        "predictorMaximumAllowedValue",
        "reversePearsonCorrelationCoefficient",
        "predictorDataSources"
      ],
      "properties": {
        "causeVariableName": {
          "description": "Example: Sleep Quality",
          "type": "string"
        },
        "effectVariableName": {
          "description": "Example: Overall Mood",
          "type": "string"
        },
        "averageDailyHighCause": {
          "description": "Example: 4.19",
          "type": "number",
          "format": "double"
        },
        "averageDailyLowCause": {
          "description": "Example: 1.97",
          "type": "number",
          "format": "double"
        },
        "averageEffect": {
          "description": "Example: 3.0791054117396",
          "type": "number",
          "format": "double"
        },
        "averageEffectFollowingHighCause": {
          "description": "Example: 3.55",
          "type": "number",
          "format": "double"
        },
        "averageEffectFollowingLowCause": {
          "description": "Example: 2.65",
          "type": "number",
          "format": "double"
        },
        "averageForwardPearsonCorrelationOverOnsetDelays": {
          "description": "Example: 0.396",
          "type": "number",
          "format": "double"
        },
        "averageReversePearsonCorrelationOverOnsetDelays": {
          "description": "Example: 0.453667",
          "type": "number",
          "format": "double"
        },
        "causeChanges": {
          "description": "Example: 164",
          "type": "integer"
        },
        "causeVariableId": {
          "description": "Example: 1448",
          "type": "integer"
        },
        "confidenceInterval": {
          "description": "Example: 0.14344467795996",
          "type": "number",
          "format": "double"
        },
        "createdAt": {
          "description": "Example: 2016-12-28 20:47:30",
          "type": "string",
          "format": "date-time"
        },
        "criticalTValue": {
          "description": "Example: 1.646",
          "type": "number",
          "format": "double"
        },
        "durationOfAction": {
          "description": "Example: 604800",
          "type": "integer"
        },
        "effectChanges": {
          "description": "Example: 193",
          "type": "integer"
        },
        "effectVariableId": {
          "description": "Example: 1398",
          "type": "integer"
        },
        "experimentEndTime": {
          "description": "Example: 2014-07-30 12:50:00",
          "type": "string",
          "format": "date-time"
        },
        "experimentStartTime": {
          "description": "Example: 2012-05-06 21:15:00",
          "type": "string",
          "format": "date-time"
        },
        "correlationCoefficient": {
          "description": "Example: 0.538",
          "type": "number",
          "format": "double"
        },
        "forwardSpearmanCorrelationCoefficient": {
          "description": "Example: 0.528359",
          "type": "number",
          "format": "double"
        },
        "numberOfPairs": {
          "description": "Example: 298",
          "type": "integer"
        },
        "onsetDelayWithStrongestPearsonCorrelation": {
          "description": "Example: -86400",
          "type": "integer"
        },
        "optimalPearsonProduct": {
          "description": "Example: 0.68582816186982",
          "type": "number",
          "format": "double"
        },
        "pearsonCorrelationWithNoOnsetDelay": {
          "description": "Example: 0.477",
          "type": "number",
          "format": "double"
        },
        "predictivePearsonCorrelation": {
          "description": "Example: 0.538",
          "type": "number",
          "format": "double"
        },
        "predictsHighEffectChange": {
          "description": "Example: 17",
          "type": "integer"
        },
        "predictsLowEffectChange": {
          "description": "Example: -11",
          "type": "integer"
        },
        "qmScore": {
          "description": "Example: 0.528",
          "type": "number",
          "format": "double"
        },
        "statisticalSignificance": {
          "description": "Example: 0.9813",
          "type": "number",
          "format": "double"
        },
        "strongestPearsonCorrelationCoefficient": {
          "description": "Example: 0.613",
          "type": "number",
          "format": "double"
        },
        "tValue": {
          "description": "Example: 9.6986079652717",
          "type": "number",
          "format": "double"
        },
        "updatedAt": {
          "description": "Example: 2017-05-06 15:40:38",
          "type": "string",
          "format": "date-time"
        },
        "userId": {
          "description": "Example: 230",
          "type": "integer"
        },
        "valuePredictingHighOutcome": {
          "description": "Example: 4.14",
          "type": "number",
          "format": "double"
        },
        "valuePredictingLowOutcome": {
          "description": "Example: 3.03",
          "type": "number",
          "format": "double"
        },
        "causeVariableCombinationOperation": {
          "description": "Example: MEAN",
          "type": "string"
        },
        "causeVariableDefaultUnitId": {
          "description": "Example: 10",
          "type": "integer"
        },
        "causeVariableImageUrl": {
          "description": "Example: https://maxcdn.icons8.com/Color/PNG/96/Household/sleeping_in_bed-96.png",
          "type": "string"
        },
        "causeVariableIonIcon": {
          "description": "Example: ion-ios-cloudy-night-outline",
          "type": "string"
        },
        "causeVariableMostCommonConnectorId": {
          "description": "Example: 6",
          "type": "integer"
        },
        "causeVariableCategoryId": {
          "description": "Example: 6",
          "type": "integer"
        },
        "effectVariableCombinationOperation": {
          "description": "Example: MEAN",
          "type": "string"
        },
        "effectVariableCommonAlias": {
          "description": "Example: Mood_(psychology)",
          "type": "string"
        },
        "effectVariableDefaultUnitId": {
          "description": "Example: 10",
          "type": "integer"
        },
        "effectVariableImageUrl": {
          "description": "Example: https://maxcdn.icons8.com/Color/PNG/96/Cinema/theatre_mask-96.png",
          "type": "string"
        },
        "effectVariableIonIcon": {
          "description": "Example: ion-happy-outline",
          "type": "string"
        },
        "effectVariableMostCommonConnectorId": {
          "description": "Example: 10",
          "type": "integer"
        },
        "effectVariableCategoryId": {
          "description": "Example: 1",
          "type": "integer"
        },
        "timestamp": {
          "description": "Example: 1494085127",
          "type": "integer"
        },
        "userVote": {
          "description": "Example: 1",
          "type": "integer"
        },
        "causeUserVariableShareUserMeasurements": {
          "description": "Example: 1",
          "type": "integer"
        },
        "effectUserVariableShareUserMeasurements": {
          "description": "Example: 1",
          "type": "integer"
        },
        "predictorFillingValue": {
          "description": "Example: -1",
          "type": "integer"
        },
        "outcomeFillingValue": {
          "description": "Example: -1",
          "type": "integer"
        },
        "averageVote": {
          "description": "Example: 0.9855",
          "type": "string"
        },
        "durationOfActionInHours": {
          "description": "Example: 168",
          "type": "integer"
        },
        "onsetDelayWithStrongestPearsonCorrelationInHours": {
          "description": "Example: -24",
          "type": "integer"
        },
        "effectVariableCategoryName": {
          "description": "Example: Emotions",
          "type": "string"
        },
        "causeVariableCategoryName": {
          "description": "Example: Sleep",
          "type": "string"
        },
        "direction": {
          "description": "Example: higher",
          "type": "string"
        },
        "causeVariableDefaultUnitAbbreviatedName": {
          "description": "Example: /5",
          "type": "string"
        },
        "effectVariableDefaultUnitAbbreviatedName": {
          "description": "Example: /5",
          "type": "string"
        },
        "causeVariableDefaultUnitName": {
          "description": "Example: 1 to 5 Rating",
          "type": "string"
        },
        "effectVariableDefaultUnitName": {
          "description": "Example: 1 to 5 Rating",
          "type": "string"
        },
        "shareUserMeasurements": {
          "description": "Example: 1",
          "type": "boolean"
        },
        "effectUnit": {
          "description": "Example: /5",
          "type": "string"
        },
        "significanceExplanation": {
          "description": "Example: Using a two-tailed t-test with alpha = 0.05, it was determined that the change in Overall Mood is statistically significant at 95% confidence interval. ",
          "type": "string"
        },
        "significantDifference": {
          "description": "Example: 1",
          "type": "boolean"
        },
        "effectSize": {
          "description": "Example: moderately positive",
          "type": "string"
        },
        "predictsHighEffectChangeSentenceFragment": {
          "description": "Example: , on average, 17% ",
          "type": "string"
        },
        "predictsLowEffectChangeSentenceFragment": {
          "description": "Example: , on average, 11% ",
          "type": "string"
        },
        "valuePredictingHighOutcomeExplanation": {
          "description": "Example: Overall Mood, on average, 17% higher after around 4.14/5 Sleep Quality ",
          "type": "string"
        },
        "averageEffectFollowingHighCauseExplanation": {
          "description": "Example: Overall Mood is 3.55/5 (15% higher) on average after days with around 4.19/5 Sleep Quality",
          "type": "string"
        },
        "averageEffectFollowingLowCauseExplanation": {
          "description": "Example: Overall Mood is 2.65/5 (14% lower) on average after days with around 1.97/5 Sleep Quality",
          "type": "string"
        },
        "valuePredictingLowOutcomeExplanation": {
          "description": "Example: Overall Mood, on average, 11% lower after around 3.03/5 Sleep Quality ",
          "type": "string"
        },
        "strengthLevel": {
          "description": "Example: moderate",
          "type": "string"
        },
        "confidenceLevel": {
          "description": "Example: high",
          "type": "string"
        },
        "predictivePearsonCorrelationCoefficient": {
          "description": "Example: 0.538",
          "type": "number",
          "format": "double"
        },
        "predictorExplanation": {
          "description": "Example: Sleep Quality Predicts Higher Overall Mood",
          "type": "string"
        },
        "studyTitle": {
          "description": "Example: N1 Study: Sleep Quality Predicts Higher Overall Mood",
          "type": "string"
        },
        "studyAbstract": {
          "description": "Example: Your data suggests with a high degree of confidence (p=0) that Sleep Quality (Sleep) has a moderately positive predictive relationship (R=0.538) with Overall Mood  (Emotions).  The highest quartile of Overall Mood  measurements were observed following an average 4.14/5 Sleep Quality.  The lowest quartile of Overall Mood  measurements were observed following an average 3.03/5 Sleep Quality.",
          "type": "string"
        },
        "studyLinkStatic": {
          "description": "Example: https://local.quantimo.do/api/v2/study?causeVariableName=Sleep%20Quality&effectVariableName=Overall%20Mood&userId=230",
          "type": "string"
        },
        "studyLinkDynamic": {
          "description": "Example: https://local.quantimo.do/ionic/Modo/www/index.html#/app/study?causeVariableName=Sleep%20Quality&effectVariableName=Overall%20Mood&userId=230",
          "type": "string"
        },
        "studyLinkFacebook": {
          "description": "Example: https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DSleep%2520Quality%26effectVariableName%3DOverall%2520Mood%26userId%3D230",
          "type": "string"
        },
        "studyLinkGoogle": {
          "description": "Example: https://plus.google.com/share?url=https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DSleep%2520Quality%26effectVariableName%3DOverall%2520Mood%26userId%3D230",
          "type": "string"
        },
        "studyLinkTwitter": {
          "description": "Example: https://twitter.com/home?status=Sleep%20Quality%20Predicts%20Higher%20Overall%20Mood%20https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DSleep%2520Quality%26effectVariableName%3DOverall%2520Mood%26userId%3D230%20%40quantimodo",
          "type": "string"
        },
        "studyLinkEmail": {
          "description": "Example: mailto:?subject=N1%20Study%3A%20Sleep%20Quality%20Predicts%20Higher%20Overall%20Mood&body=Check%20out%20my%20study%20at%20https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DSleep%2520Quality%26effectVariableName%3DOverall%2520Mood%26userId%3D230%0A%0AHave%20a%20great%20day!",
          "type": "string"
        },
        "gaugeImage": {
          "description": "Example: https://s3.amazonaws.com/quantimodo-docs/images/gauge-moderately-positive-relationship.png",
          "type": "string"
        },
        "gaugeImageSquare": {
          "description": "Example: https://s3.amazonaws.com/quantimodo-docs/images/gauge-moderately-positive-relationship-200-200.png",
          "type": "string"
        },
        "imageUrl": {
          "description": "Example: https://s3-us-west-1.amazonaws.com/qmimages/variable_categories_gauges_logo_background/gauge-moderately-positive-relationship_sleep_emotions_logo_background.png",
          "type": "string"
        },
        "studyDesign": {
          "description": "Example: This study is based on data donated by one QuantiModo user. Thus, the study design is consistent with an n=1 observational natural experiment. ",
          "type": "string"
        },
        "studyObjective": {
          "description": "Example: The objective of this study is to determine the nature of the relationship (if any) between the Sleep Quality and the Overall Mood. Additionally, we attempt to determine the Sleep Quality values most likely to produce optimal Overall Mood values. ",
          "type": "string"
        },
        "dataSources": {
          "description": "Example: Sleep Quality data was primarily collected using <a href=\"http://www.amazon.com/gp/product/B00A17IAO0/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=B00A17IAO0&linkCode=as2&tag=quant08-20\">Up by Jawbone</a>.  UP by Jawbone is a wristband and app that tracks how you sleep, move and eat and then helps you use that information to feel your best.<br>Overall Mood data was primarily collected using <a href=\"https://quantimo.do\">QuantiModo</a>.  <a href=\"https://quantimo.do\">QuantiModo</a> is a Chrome extension, Android app, iOS app, and web app that allows you to easily track mood, symptoms, or any outcome you want to optimize in a fraction of a second.  You can also import your data from over 30 other apps and devices like Fitbit, Rescuetime, Jawbone Up, Withings, Facebook, Github, Google Calendar, Runkeeper, MoodPanda, Slice, Google Fit, and more.  <a href=\"https://quantimo.do\">QuantiModo</a> then analyzes your data to identify which hidden factors are most likely to be influencing your mood or symptoms and their optimal daily values.",
          "type": "string"
        },
        "dataSourcesParagraphForCause": {
          "description": "Example: Sleep Quality data was primarily collected using <a href=\"http://www.amazon.com/gp/product/B00A17IAO0/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=B00A17IAO0&linkCode=as2&tag=quant08-20\">Up by Jawbone</a>.  UP by Jawbone is a wristband and app that tracks how you sleep, move and eat and then helps you use that information to feel your best.",
          "type": "string"
        },
        "instructionsForCause": {
          "description": "Example: <a href=\"http://www.amazon.com/gp/product/B00A17IAO0/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=B00A17IAO0&linkCode=as2&tag=quant08-20\">Obtain Up by Jawbone</a> and use it to record your Sleep Quality. Once you have a <a href=\"http://www.amazon.com/gp/product/B00A17IAO0/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=B00A17IAO0&linkCode=as2&tag=quant08-20\">Up by Jawbone</a> account, <a href=\"https://app.quantimo.do/ionic/Modo/www/#/app/import\">connect your  Up by Jawbone account at QuantiModo</a> to automatically import and analyze your data.",
          "type": "string"
        },
        "dataSourcesParagraphForEffect": {
          "description": "Example: Overall Mood data was primarily collected using <a href=\"https://quantimo.do\">QuantiModo</a>.  <a href=\"https://quantimo.do\">QuantiModo</a> is a Chrome extension, Android app, iOS app, and web app that allows you to easily track mood, symptoms, or any outcome you want to optimize in a fraction of a second.  You can also import your data from over 30 other apps and devices like Fitbit, Rescuetime, Jawbone Up, Withings, Facebook, Github, Google Calendar, Runkeeper, MoodPanda, Slice, Google Fit, and more.  <a href=\"https://quantimo.do\">QuantiModo</a> then analyzes your data to identify which hidden factors are most likely to be influencing your mood or symptoms and their optimal daily values.",
          "type": "string"
        },
        "instructionsForEffect": {
          "description": "Example: <a href=\"https://quantimo.do\">Obtain QuantiModo</a> and use it to record your Overall Mood. Once you have a <a href=\"https://quantimo.do\">QuantiModo</a> account, <a href=\"https://app.quantimo.do/ionic/Modo/www/#/app/import\">connect your  QuantiModo account at QuantiModo</a> to automatically import and analyze your data.",
          "type": "string"
        },
        "dataAnalysis": {
          "description": "Example: It was assumed that 0 hours would pass before a change in Sleep Quality would produce an observable change in Overall Mood.  It was assumed that Sleep Quality could produce an observable change in Overall Mood for as much as 7 days after the stimulus event.  ",
          "type": "string"
        },
        "studyResults": {
          "description": "Example: This analysis suggests that higher Sleep Quality (Sleep) generally predicts higher Overall Mood (p = 0).  Overall Mood is, on average, 17%  higher after around 4.14 Sleep Quality.  After an onset delay of 168 hours, Overall Mood is, on average, 11%  lower than its average over the 168 hours following around 3.03 Sleep Quality.  298 data points were used in this analysis.  The value for Sleep Quality changed 164 times, effectively running 82 separate natural experiments.  The top quartile outcome values are preceded by an average 4.14 /5 of Sleep Quality.  The bottom quartile outcome values are preceded by an average 3.03 /5 of Sleep Quality.  Forward Pearson Correlation Coefficient was 0.538 (p=0, 95% CI 0.395 to 0.681 onset delay = 0 hours, duration of action = 168 hours) .  The Reverse Pearson Correlation Coefficient was 0 (P=0, 95% CI -0.143 to 0.143, onset delay = -0 hours, duration of action = -168 hours). When the Sleep Quality value is closer to 4.14 /5 than 3.03 /5, the Overall Mood value which follows is, on average, 17%  percent higher than its typical value.  When the Sleep Quality value is closer to 3.03 /5 than 4.14 /5, the Overall Mood value which follows is 0% lower than its typical value.  Overall Mood is 3.55/5 (15% higher) on average after days with around 4.19/5 Sleep Quality  Overall Mood is 2.65/5 (14% lower) on average after days with around 1.97/5 Sleep Quality",
          "type": "string"
        },
        "studyLimitations": {
          "description": "Example: As with any human experiment, it was impossible to control for all potentially confounding variables. \n            \n            Correlation does not necessarily imply correlation.  We can never know for sure if one factor is definitely the cause of an outcome.  \n            However, lack of correlation definitely implies the lack of a causal relationship.  Hence, we can with great \n            confidence rule out non-existent relationships. For instance, if we discover no relationship between mood\n            and an antidepressant this information is just as or even more valuable than the discovery that there is a relationship. \n            <br>\n            <br>\n           \n            We can also take advantage of several characteristics of time series data from many subjects  to infer the likelihood of a causal relationship if we do find a correlational relationship. \n            The criteria for causation are a group of minimal conditions necessary to provide adequate evidence of a causal relationship between an incidence and a possible consequence.\n            The list of the criteria is as follows:\n            <br>\n            1. Strength (effect size): A small association does not mean that there is not a causal effect, though the larger the association, the more likely that it is causal.\n            <br>\n            2. Consistency (reproducibility): Consistent findings observed by different persons in different places with different samples strengthens the likelihood of an effect.\n            <br>\n            3. Specificity: Causation is likely if a very specific population at a specific site and disease with no other likely explanation. The more specific an association between a factor and an effect is, the bigger the probability of a causal relationship.\n            <br>\n            4. Temporality: The effect has to occur after the cause (and if there is an expected delay between the cause and expected effect, then the effect must occur after that delay).\n            <br>\n            5. Biological gradient: Greater exposure should generally lead to greater incidence of the effect. However, in some cases, the mere presence of the factor can trigger the effect. In other cases, an inverse proportion is observed: greater exposure leads to lower incidence.\n            <br>\n            6. Plausibility: A plausible mechanism between cause and effect is helpful.\n            <br>\n            7. Coherence: Coherence between epidemiological and laboratory findings increases the likelihood of an effect.\n            <br>\n            8. Experiment: \"Occasionally it is possible to appeal to experimental evidence\".\n            <br>\n            9. Analogy: The effect of similar factors may be considered.\n            <br>\n            <br>\n             \n             The confidence in a causal relationship is bolstered by the fact that time-precedence was taken into account in all calculations. Furthermore, in accordance with the law of large numbers (LLN), the predictive power and accuracy of these results will continually grow over time.  298 paired data points were used in this analysis.   Assuming that the relationship is merely coincidental, as the participant independently modifies their Sleep Quality values, the observed strength of the relationship will decline until it is below the threshold of significance.  To it another way, in the case that we do find a spurious correlation, suggesting that banana intake improves mood for instance,\n            one will likely increase their banana intake.  Due to the fact that this correlation is spurious, it is unlikely\n            that you will see a continued and persistent corresponding increase in mood.  So over time, the spurious correlation will\n            naturally dissipate.Furthermore, it will be very enlightening to aggregate this data with the data from other participants  with similar genetic, diseasomic, environmentomic, and demographic profiles.",
          "type": "string"
        },
        "onsetDelay": {
          "description": "Example: 0",
          "type": "integer"
        },
        "onsetDelayInHours": {
          "description": "Example: 0",
          "type": "integer"
        },
        "predictorMinimumAllowedValue": {
          "description": "Example: 30",
          "type": "number",
          "format": "double"
        },
        "predictorMaximumAllowedValue": {
          "description": "Example: 200",
          "type": "number",
          "format": "double"
        },
        "reversePearsonCorrelationCoefficient": {
          "description": "Example: 0.01377184270977",
          "type": "number",
          "format": "double"
        },
        "predictorDataSources": {
          "description": "Example: RescueTime",
          "type": "string"
        },
        "outcomeMinimumAllowedValue": {
          "description": "Example: 0.1",
          "type": "number",
          "format": "double"
        },
        "outcomeMaximumAllowedValue": {
          "description": "Example: 23",
          "type": "number",
          "format": "double"
        },
        "causeDataSource": {
          "$ref": "#/definitions/DataSource"
        },
        "effectDataSource": {
          "$ref": "#/definitions/DataSource"
        },
        "correlationIsContradictoryToOptimalValues": {
          "description": "Example: false",
          "type": "boolean"
        }
      }
    },
    "Explanation": {
      "required": [
        "ionIcon",
        "description",
        "title",
        "image",
        "startTracking"
      ],
      "properties": {
        "ionIcon": {
          "description": "Example: ion-ios-person",
          "type": "string"
        },
        "description": {
          "description": "Example: These factors are most predictive of Overall Mood based on your own data.",
          "type": "string"
        },
        "title": {
          "description": "Example: Top Predictors of Overall Mood",
          "type": "string"
        },
        "image": {
          "$ref": "#/definitions/Image"
        },
        "startTracking": {
          "$ref": "#/definitions/ExplanationStartTracking"
        }
      }
    },
    "GetCorrelationsResponse": {
      "required": [
        "status",
        "success"
      ],
      "properties": {
        "status": {
          "type": "integer",
          "description": "Status code"
        },
        "message": {
          "type": "string",
          "description": "Message"
        },
        "success": {
          "type": "boolean"
        },
        "data": {
          "$ref": "#/definitions/GetCorrelationsDataResponse"
        }
      }
    },
    "Image": {
      "required": [
        "imageUrl",
        "height",
        "width"
      ],
      "properties": {
        "imageUrl": {
          "description": "Example: https://www.filepicker.io/api/file/TjmeNWS5Q2SFmtJlUGLf",
          "type": "string"
        },
        "height": {
          "description": "Example: 240",
          "type": "string"
        },
        "width": {
          "description": "Example: 224",
          "type": "string"
        }
      }
    },
    "Button": {
      "required": [
        "text",
        "link"
      ],
      "properties": {
        "text": {
          "description": "Example: Start Tracking",
          "type": "string"
        },
        "link": {
          "description": "Example: https://local.quantimo.do",
          "type": "string"
        }
      }
    },
    "ExplanationStartTracking": {
      "required": [
        "title",
        "description",
        "button"
      ],
      "properties": {
        "title": {
          "description": "Example: Improve Accuracy",
          "type": "string"
        },
        "description": {
          "description": "Example: The more data I have the more accurate your results will be so track regularly!",
          "type": "string"
        },
        "button": {
          "$ref": "#/definitions/Button"
        }
      }
    },
    "GetCorrelationsDataResponse": {
      "required": [
        "correlations",
        "explanation"
      ],
      "properties": {
        "correlations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Correlation"
          }
        },
        "explanation": {
          "$ref": "#/definitions/Explanation"
        }
      }
    },
    "TrackingReminderNotificationActionArray": {
      "required": [
        "title",
        "callback",
        "modifiedValue",
        "action"
      ],
      "properties": {
        "title": {
          "description": "Example: Rate 3/5",
          "type": "string"
        },
        "callback": {
          "description": "Example: trackThreeRatingAction",
          "type": "string"
        },
        "modifiedValue": {
          "description": "Example: 3",
          "type": "integer"
        },
        "action": {
          "description": "Example: track",
          "type": "string"
        }
      }
    },
    "TrackingReminderNotificationTrackAllAction": {
      "required": [
        "title",
        "callback",
        "modifiedValue",
        "action"
      ],
      "properties": {
        "title": {
          "description": "Example: Rate 3/5 for all",
          "type": "string"
        },
        "callback": {
          "description": "Example: trackThreeRatingAction",
          "type": "string"
        },
        "modifiedValue": {
          "description": "Example: 3",
          "type": "integer"
        },
        "action": {
          "description": "Example: trackAll",
          "type": "string"
        }
      }
    },
    "ProcessedDailyMeasurement": {
      "required": [
        "startTimeEpoch",
        "unitId",
        "variableId",
        "variableName",
        "variableCategoryId",
        "value",
        "startDate",
        "note",
        "originalValue",
        "originalUnitId",
        "id",
        "duration",
        "startTimeString"
      ],
      "properties": {
        "startTimeEpoch": {
          "description": "Example: 1464937200",
          "type": "integer"
        },
        "unitId": {
          "description": "Example: 47",
          "type": "integer"
        },
        "variableId": {
          "description": "Example: 96380",
          "type": "integer"
        },
        "variableName": {
          "description": "Example: Barometric Pressure",
          "type": "string"
        },
        "variableCategoryId": {
          "description": "Example: 17",
          "type": "integer"
        },
        "value": {
          "description": "Example: 101341.66666667",
          "type": "number",
          "format": "double"
        },
        "startDate": {
          "description": "Example: 2016-06-03",
          "type": "string"
        },
        "note": {
          "description": "Example: ",
          "type": "string"
        },
        "originalValue": {
          "description": "Example: 101800, 101800, 101700, 101600, 101600, 101600",
          "type": "string"
        },
        "originalUnitId": {
          "description": "Example: 47, 47, 47, 47, 47, 47",
          "type": "string"
        },
        "id": {
          "description": "Example: ",
          "type": "string"
        },
        "duration": {
          "description": "Example: 0",
          "type": "integer"
        },
        "startTimeString": {
          "description": "Example: 2016-06-03 07:00:00",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "DataSource": {
      "required": [
        "id",
        "name",
        "displayName",
        "image",
        "getItUrl",
        "shortDescription",
        "longDescription",
        "enabled",
        "affiliate",
        "defaultVariableCategoryName",
        "imageHtml",
        "linkedDisplayNameHtml",
        "connectorClientId"
      ],
      "properties": {
        "id": {
          "description": "Example: 72",
          "type": "integer"
        },
        "name": {
          "description": "Example: quantimodo",
          "type": "string"
        },
        "displayName": {
          "description": "Example: QuantiModo",
          "type": "string"
        },
        "image": {
          "description": "Example: https://app.quantimo.do/ionic/Modo/www/img/logos/quantimodo-logo-qm-rainbow-200-200.png",
          "type": "string"
        },
        "getItUrl": {
          "description": "Example: https://quantimo.do",
          "type": "string"
        },
        "shortDescription": {
          "description": "Example: Tracks anything",
          "type": "string"
        },
        "longDescription": {
          "description": "Example: QuantiModo is a Chrome extension, Android app, iOS app, and web app that allows you to easily track mood, symptoms, or any outcome you want to optimize in a fraction of a second.  You can also import your data from over 30 other apps and devices like Fitbit, Rescuetime, Jawbone Up, Withings, Facebook, Github, Google Calendar, Runkeeper, MoodPanda, Slice, Google Fit, and more.  QuantiModo then analyzes your data to identify which hidden factors are most likely to be influencing your mood or symptoms and their optimal daily values.",
          "type": "string"
        },
        "enabled": {
          "description": "Example: 0",
          "type": "integer"
        },
        "affiliate": {
          "description": "Example: true",
          "type": "boolean"
        },
        "defaultVariableCategoryName": {
          "description": "Example: Foods",
          "type": "string"
        },
        "imageHtml": {
          "description": "Example: <a href=\"https://quantimo.do\"><img id=\"quantimodo_image\" title=\"QuantiModo\" src=\"https://app.quantimo.do/ionic/Modo/www/img/logos/quantimodo-logo-qm-rainbow-200-200.png\" alt=\"QuantiModo\"></a>",
          "type": "string"
        },
        "linkedDisplayNameHtml": {
          "description": "Example: <a href=\"https://quantimo.do\">QuantiModo</a>",
          "type": "string"
        },
        "connectorClientId": {
          "description": "Example: ba7d0c12432650e23b3ce924ae2d21e2ff59e7e4e28650759633700af7ed0a30",
          "type": "string"
        }
      }
    },
    "Chart": {
      "required": [
        "type",
        "zoomType",
        "chartConfig",
        "chartTitle",
        "chartId",
        "explanation",
        "height",
        "renderTo",
        "animation"
      ],
      "properties": {
        "type": {
          "description": "Example: scatter",
          "type": "string"
        },
        "zoomType": {
          "description": "Example: xy",
          "type": "string"
        },
        "chartConfig": {
          "$ref": "#/definitions/ChartConfig"
        },
        "chartTitle": {
          "description": "Example: Reference And Learning Hours following Barometric Pressure (R = 0.147)",
          "type": "string"
        },
        "chartId": {
          "description": "Example: correlationScatterPlot",
          "type": "string"
        },
        "explanation": {
          "description": "Example: The chart above indicates that an increase in Barometric Pressure is usually followed by an increase in Reference And Learning Hours.",
          "type": "string"
        },
        "height": {
          "description": "Example: 300",
          "type": "integer"
        },
        "renderTo": {
          "description": "Example: BarContainer",
          "type": "string"
        },
        "animation": {
          "$ref": "#/definitions/Animation"
        }
      }
    },
    "Hover": {
      "required": [
        "enabled",
        "lineColor",
        "marker"
      ],
      "properties": {
        "enabled": {
          "description": "Example: true",
          "type": "boolean"
        },
        "lineColor": {
          "description": "Example: rgb(100,100,100)",
          "type": "string"
        },
        "marker": {
          "$ref": "#/definitions/Marker"
        }
      }
    },
    "State": {
      "required": [
        "hover"
      ],
      "properties": {
        "hover": {
          "$ref": "#/definitions/Hover"
        }
      }
    },
    "Marker": {
      "required": [
        "radius",
        "states",
        "enabled"
      ],
      "properties": {
        "radius": {
          "description": "Example: 5",
          "type": "integer"
        },
        "states": {
          "$ref": "#/definitions/State"
        },
        "enabled": {
          "description": "Example: false",
          "type": "boolean"
        }
      }
    },
    "Tooltip": {
      "required": [
        "pointFormat",
        "valueSuffix"
      ],
      "properties": {
        "pointFormat": {
          "description": "Example: {point.x}Pa, {point.y}h",
          "type": "string"
        },
        "valueSuffix": {
          "description": "Example: Pa",
          "type": "string"
        }
      }
    },
    "Scatter": {
      "required": [
        "marker",
        "states",
        "tooltip"
      ],
      "properties": {
        "marker": {
          "$ref": "#/definitions/Marker"
        },
        "states": {
          "$ref": "#/definitions/State"
        },
        "tooltip": {
          "$ref": "#/definitions/Tooltip"
        }
      }
    },
    "PlotOption": {
      "required": [
        "scatter",
        "column"
      ],
      "properties": {
        "scatter": {
          "$ref": "#/definitions/Scatter"
        },
        "column": {
          "$ref": "#/definitions/Column"
        }
      }
    },
    "Credit": {
      "required": [
        "enabled"
      ],
      "properties": {
        "enabled": {
          "description": "Example: false",
          "type": "boolean"
        }
      }
    },
    "Option": {
      "required": [
        "chart",
        "plotOptions",
        "credits",
        "yAxis",
        "title",
        "xAxis",
        "lang",
        "loading",
        "legend",
        "colors"
      ],
      "properties": {
        "chart": {
          "$ref": "#/definitions/Chart"
        },
        "plotOptions": {
          "$ref": "#/definitions/PlotOption"
        },
        "credits": {
          "$ref": "#/definitions/Credit"
        },
        "yAxis": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/YAxi"
          }
        },
        "title": {
          "$ref": "#/definitions/Title"
        },
        "xAxis": {
          "$ref": "#/definitions/XAxi"
        },
        "lang": {
          "$ref": "#/definitions/Lang"
        },
        "loading": {
          "$ref": "#/definitions/Loading"
        },
        "legend": {
          "$ref": "#/definitions/Legend"
        },
        "colors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Color"
          }
        }
      }
    },
    "Title": {
      "required": [
        "enabled",
        "text"
      ],
      "properties": {
        "enabled": {
          "description": "Example: true",
          "type": "boolean"
        },
        "text": {
          "description": "Example: Barometric Pressure (Pa)",
          "type": "string"
        }
      }
    },
    "XAxi": {
      "required": [
        "title",
        "startOnTick",
        "endOnTick",
        "showLastLabel",
        "text",
        "categories"
      ],
      "properties": {
        "title": {
          "$ref": "#/definitions/Title"
        },
        "startOnTick": {
          "description": "Example: true",
          "type": "boolean"
        },
        "endOnTick": {
          "description": "Example: true",
          "type": "boolean"
        },
        "showLastLabel": {
          "description": "Example: true",
          "type": "boolean"
        },
        "text": {
          "description": "Example: Date",
          "type": "string"
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Category"
          }
        }
      }
    },
    "YAxi": {
      "required": [
        "title",
        "lineWidth",
        "opposite",
        "min",
        "max"
      ],
      "properties": {
        "title": {
          "$ref": "#/definitions/Title"
        },
        "lineWidth": {
          "description": "Example: 1",
          "type": "integer"
        },
        "opposite": {
          "description": "Example: true",
          "type": "boolean"
        },
        "min": {
          "description": "Example: -2.68",
          "type": "number",
          "format": "double"
        },
        "max": {
          "description": "Example: 372.68",
          "type": "number",
          "format": "double"
        }
      }
    },
    "Series": {
      "required": [
        "name",
        "color",
        "data",
        "type",
        "tooltip",
        "yAxis"
      ],
      "properties": {
        "name": {
          "description": "Example: Reference And Learning Hours by Barometric Pressure",
          "type": "string"
        },
        "color": {
          "description": "Example: rgba(223, 83, 83, .5)",
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Series"
          }
        },
        "type": {
          "description": "Example: spline",
          "type": "string"
        },
        "tooltip": {
          "$ref": "#/definitions/Tooltip"
        },
        "yAxis": {
          "description": "Example: 1",
          "type": "integer"
        }
      }
    },
    "Subtitle": {
      "required": [
        "text"
      ],
      "properties": {
        "text": {
          "description": "Example: ",
          "type": "string"
        }
      }
    },
    "ChartConfig": {
      "required": [
        "options",
        "xAxis",
        "yAxis",
        "series",
        "title",
        "subtitle",
        "loading"
      ],
      "properties": {
        "options": {
          "$ref": "#/definitions/Option"
        },
        "xAxis": {
          "$ref": "#/definitions/XAxi"
        },
        "yAxis": {
          "$ref": "#/definitions/YAxi"
        },
        "series": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Series"
          }
        },
        "title": {
          "$ref": "#/definitions/Title"
        },
        "subtitle": {
          "$ref": "#/definitions/Subtitle"
        },
        "loading": {
          "description": "Example: false",
          "type": "boolean"
        }
      }
    },
    "Category": {
      "properties": {},
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "Animation": {
      "required": [
        "duration"
      ],
      "properties": {
        "duration": {
          "description": "Example: 0",
          "type": "integer"
        }
      }
    },
    "Lang": {
      "required": [
        "loading"
      ],
      "properties": {
        "loading": {
          "description": "Example: ",
          "type": "string"
        }
      }
    },
    "ChartStyle": {
      "required": [
        "background"
      ],
      "properties": {
        "background": {
          "description": "Example: url(/res/loading3.gif) no-repeat center",
          "type": "string"
        }
      }
    },
    "Loading": {
      "required": [
        "style",
        "hideDuration",
        "showDuration"
      ],
      "properties": {
        "style": {
          "$ref": "#/definitions/ChartStyle"
        },
        "hideDuration": {
          "description": "Example: 10",
          "type": "integer"
        },
        "showDuration": {
          "description": "Example: 10",
          "type": "integer"
        }
      }
    },
    "Legend": {
      "required": [
        "enabled"
      ],
      "properties": {
        "enabled": {
          "description": "Example: false",
          "type": "boolean"
        }
      }
    },
    "Column": {
      "required": [
        "pointPadding",
        "borderWidth",
        "pointWidth",
        "enableMouseTracking",
        "colorByPoint"
      ],
      "properties": {
        "pointPadding": {
          "description": "Example: 0.2",
          "type": "number",
          "format": "double"
        },
        "borderWidth": {
          "description": "Example: 0",
          "type": "integer"
        },
        "pointWidth": {
          "description": "Example: 33.333333333333",
          "type": "number",
          "format": "double"
        },
        "enableMouseTracking": {
          "description": "Example: true",
          "type": "boolean"
        },
        "colorByPoint": {
          "description": "Example: true",
          "type": "boolean"
        }
      }
    },
    "Color": {
      "properties": {},
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "Pair": {
      "required": [
        "causeMeasurement",
        "effectMeasurement",
        "timestamp",
        "startTimeSting",
        "causeMeasurementValue",
        "effectMeasurementValue",
        "causeVariableDefaultUnitAbbreviatedName",
        "effectVariableDefaultUnitAbbreviatedName"
      ],
      "properties": {
        "causeMeasurement": {
          "description": "Example: 101341.66666667",
          "type": "number",
          "format": "double"
        },
        "effectMeasurement": {
          "description": "Example: 7.98",
          "type": "number",
          "format": "double"
        },
        "timestamp": {
          "description": "Example: 1464937200",
          "type": "integer"
        },
        "startTimeSting": {
          "description": "Example: 2016-06-03 07:00:00",
          "type": "string",
          "format": "date-time"
        },
        "causeMeasurementValue": {
          "description": "Example: 101341.66666667",
          "type": "number",
          "format": "double"
        },
        "effectMeasurementValue": {
          "description": "Example: 7.98",
          "type": "number",
          "format": "double"
        },
        "causeVariableDefaultUnitAbbreviatedName": {
          "description": "Example: ",
          "type": "string"
        },
        "effectVariableDefaultUnitAbbreviatedName": {
          "description": "Example: ",
          "type": "string"
        },
        "eventAtUnixTime": {
          "description": "Example: 1438876142",
          "type": "integer"
        },
        "eventAt": {
          "description": "Example: 2015-08-06 15:49:02",
          "type": "string",
          "format": "date-time"
        },
        "startTimeString": {
          "description": "Example: 2015-08-06 15:49:02",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Statistic": {
      "required": [
        "correlationCoefficient",
        "onsetDelay",
        "durationOfAction",
        "numberOfPairs",
        "effectSize",
        "statisticalSignificance",
        "timestamp",
        "reversePearsonCorrelationCoefficient",
        "predictivePearsonCorrelationCoefficient",
        "causalityFactor",
        "causeVariableCategoryName",
        "effectVariableCategoryName",
        "valuePredictingHighOutcome",
        "valuePredictingLowOutcome",
        "optimalPearsonProduct",
        "userVote",
        "averageVote",
        "causeVariableDefaultUnitId",
        "createdAt",
        "updatedAt",
        "causeChanges",
        "effectChanges",
        "qmScore",
        "error",
        "predictsHighEffectChange",
        "predictsLowEffectChange",
        "pValue",
        "tValue",
        "criticalTValue",
        "confidenceInterval",
        "experimentStartTime",
        "experimentEndTime",
        "userId",
        "studyResults",
        "dataAnalysis",
        "outcomeMaximumAllowedValue",
        "predictorMaximumAllowedValue",
        "studyLimitations",
        "significantDifference",
        "significanceExplanation",
        "strengthLevel",
        "confidenceLevel",
        "studyObjective",
        "studyTitle",
        "dataSources",
        "studyAbstract",
        "direction",
        "predictivePearsonCorrelation",
        "predictorExplanation",
        "studyBackground",
        "studyDesign",
        "dataPoints",
        "numberOfDays",
        "reversePairsCount",
        "causeChangesStatisticalSignificance",
        "causeVariableCategoryId",
        "effectVariableCategoryId",
        "predictorFillingValue",
        "outcomeFillingValue",
        "causeNumberOfRawMeasurements",
        "effectNumberOfRawMeasurements",
        "causeNumberOfProcessedDailyMeasurements",
        "effectNumberOfProcessedDailyMeasurements",
        "causeVariableMostCommonConnectorId",
        "effectVariableMostCommonConnectorId",
        "studyLinkFacebook",
        "studyLinkTwitter",
        "studyLinkGoogle",
        "causeVariableName",
        "effectVariableName",
        "averageEffect",
        "numberOfLowEffectPairs",
        "numberOfHighEffectPairs",
        "degreesOfFreedom",
        "numberOfUniqueCauseValuesForOptimalValues",
        "numberOfUniqueEffectValuesForOptimalValues",
        "numberOfCauseChangesForOptimalValues",
        "medianOfUpperHalfOfEffectMeasurements",
        "medianOfLowerHalfOfEffectMeasurements",
        "numberOfEffectChangesForOptimalValues",
        "minimumEffectValue",
        "maximumEffectValue",
        "effectValueSpread",
        "minimumCauseValue",
        "maximumCauseValue",
        "causeValueSpread",
        "averageEffectFollowingHighCause",
        "averageEffectFollowingLowCause",
        "averageDailyLowCause",
        "averageDailyHighCause",
        "principalInvestigator",
        "causeVariableCombinationOperation",
        "valuePredictingHighOutcomeExplanation",
        "averageEffectFollowingHighCauseExplanation",
        "averageEffectFollowingLowCauseExplanation",
        "valuePredictingLowOutcomeExplanation",
        "numberOfUsers",
        "outcomeDataSources",
        "correlationIsContradictoryToOptimalValues",
        "forwardSpearmanCorrelationCoefficient",
        "minimumProbability",
        "strongestPearsonCorrelationCoefficient",
        "pairsOverTimeChartConfig",
        "correlationsOverOnsetDelaysChartConfig",
        "correlationsOverDurationsOfActionChartConfig",
        "onsetDelayWithStrongestPearsonCorrelation",
        "averageForwardPearsonCorrelationOverOnsetDelays",
        "averageReversePearsonCorrelationOverOnsetDelays",
        "pearsonCorrelationWithNoOnsetDelay",
        "voteStatisticalSignificance",
        "calculationStartTime",
        "shareUserMeasurements",
        "causeUserVariableShareUserMeasurements",
        "effectUserVariableShareUserMeasurements",
        "averagePearsonCorrelationCoefficientOverOnsetDelays",
        "onsetDelayWithStrongestPearsonCorrelationInHours",
        "causeVariableId",
        "effectVariableId",
        "studyLinkStatic",
        "studyLinkDynamic",
        "gaugeImage",
        "imageUrl",
        "gaugeImageSquare",
        "onsetDelayInHours",
        "durationOfActionInHours",
        "effectVariableDefaultUnitId",
        "causeVariableDefaultUnitName",
        "causeVariableDefaultUnitAbbreviatedName",
        "effectVariableDefaultUnitName",
        "effectVariableDefaultUnitAbbreviatedName",
        "rawCauseMeasurementSignificance",
        "allPairsSignificance",
        "numberOfDaysSignificance",
        "rawEffectMeasurementSignificance",
        "optimalChangeSpread",
        "optimalChangeSpreadSignificance",
        "correlationsOverDurationsOfAction",
        "dataSourcesParagraphForEffect",
        "dataSourcesParagraphForCause",
        "instructionsForEffect",
        "instructionsForCause",
        "perDaySentenceFragment",
        "predictsLowEffectChangeSentenceFragment",
        "predictsHighEffectChangeSentenceFragment",
        "studyLinkEmail",
        "distanceFromMiddleToBeHightLowEffect",
        "numberOfSamples",
        "effectUnit",
        "causeVariableImageUrl",
        "causeVariableIonIcon",
        "effectVariableImageUrl",
        "effectVariableIonIcon"
      ],
      "properties": {
        "correlationCoefficient": {
          "description": "Example: 0.147",
          "type": "number",
          "format": "double"
        },
        "onsetDelay": {
          "description": "Example: 0",
          "type": "integer"
        },
        "durationOfAction": {
          "description": "Example: 604800",
          "type": "integer"
        },
        "numberOfPairs": {
          "description": "Example: 297",
          "type": "integer"
        },
        "effectSize": {
          "description": "Example: weakly positive",
          "type": "string"
        },
        "statisticalSignificance": {
          "description": "Example: 0.99987910063243",
          "type": "number",
          "format": "double"
        },
        "timestamp": {
          "description": "Example: 1502080560",
          "type": "integer"
        },
        "reversePearsonCorrelationCoefficient": {
          "description": "Example: ",
          "type": "string"
        },
        "predictivePearsonCorrelationCoefficient": {
          "description": "Example: 0.147",
          "type": "number",
          "format": "double"
        },
        "causalityFactor": {
          "description": "Example: 0.147",
          "type": "number",
          "format": "double"
        },
        "causeVariableCategoryName": {
          "description": "Example: Environment",
          "type": "string"
        },
        "effectVariableCategoryName": {
          "description": "Example: Activity",
          "type": "string"
        },
        "valuePredictingHighOutcome": {
          "description": "Example: 101187.2",
          "type": "number",
          "format": "double"
        },
        "valuePredictingLowOutcome": {
          "description": "Example: 97597.75",
          "type": "number",
          "format": "double"
        },
        "optimalPearsonProduct": {
          "description": "Example: 0.063550992332336",
          "type": "number",
          "format": "double"
        },
        "userVote": {
          "description": "Example: ",
          "type": "string"
        },
        "averageVote": {
          "description": "Example: ",
          "type": "string"
        },
        "causeVariableDefaultUnitId": {
          "description": "Example: 47",
          "type": "integer"
        },
        "createdAt": {
          "description": "Example: ",
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "description": "Example: ",
          "type": "string",
          "format": "date-time"
        },
        "causeChanges": {
          "description": "Example: 287",
          "type": "integer"
        },
        "effectChanges": {
          "description": "Example: 295",
          "type": "integer"
        },
        "qmScore": {
          "description": "Example: ",
          "type": "string"
        },
        "error": {
          "description": "Example: optimalPearsonProduct is not defined",
          "type": "string"
        },
        "predictsHighEffectChange": {
          "description": "Example: 0.84",
          "type": "number",
          "format": "double"
        },
        "predictsLowEffectChange": {
          "description": "Example: -82.6",
          "type": "number",
          "format": "double"
        },
        "pValue": {
          "description": "Example: 0",
          "type": "number",
          "format": "double"
        },
        "tValue": {
          "description": "Example: 8.1106621038493",
          "type": "number",
          "format": "double"
        },
        "criticalTValue": {
          "description": "Example: 1.646",
          "type": "number",
          "format": "double"
        },
        "confidenceInterval": {
          "description": "Example: 1.4269359716898",
          "type": "number",
          "format": "double"
        },
        "experimentStartTime": {
          "description": "Example: 1464937200",
          "type": "integer"
        },
        "experimentEndTime": {
          "description": "Example: 1501722000",
          "type": "integer"
        },
        "userId": {
          "description": "Example: 230",
          "type": "integer"
        },
        "studyResults": {
          "description": "Example: This analysis suggests that higher Barometric Pressure (Environment) generally predicts higher Reference And Learning Hours (p = 0).  Reference And Learning Hours is, on average, 0.84%  higher after around 101187.2 Barometric Pressure.  After an onset delay of 168 hours, Reference And Learning Hours is, on average, 82.6%  lower than its average over the 168 hours following around 97597.75 Barometric Pressure.  297 data points were used in this analysis.  The value for Barometric Pressure changed 287 times, effectively running 144 separate natural experiments.  The top quartile outcome values are preceded by an average 101187.2 Pa of Barometric Pressure.  The bottom quartile outcome values are preceded by an average 97597.75 Pa of Barometric Pressure.  Forward Pearson Correlation Coefficient was 0.147 (p=0, 95% CI -1.28 to 1.574 onset delay = 0 hours, duration of action = 168 hours) .  The Reverse Pearson Correlation Coefficient was 0 (P=0, 95% CI -1.427 to 1.427, onset delay = -0 hours, duration of action = -168 hours). When the Barometric Pressure value is closer to 101187.2 Pa than 97597.75 Pa, the Reference And Learning Hours value which follows is, on average, 0.84%  percent higher than its typical value.  When the Barometric Pressure value is closer to 97597.75 Pa than 101187.2 Pa, the Reference And Learning Hours value which follows is 0% lower than its typical value.  Reference And Learning Hours is 8.5h (1% higher) on average after days with around 101627.85 Pa Barometric Pressure  Reference And Learning Hours is 1.47h (83% lower) on average after days with around 21023.36 Pa Barometric Pressure",
          "type": "string"
        },
        "dataAnalysis": {
          "description": "Example: It was assumed that 0 hours would pass before a change in Barometric Pressure would produce an observable change in Reference And Learning Hours.  It was assumed that Barometric Pressure could produce an observable change in Reference And Learning Hours for as much as 7 days after the stimulus event.  ",
          "type": "string"
        },
        "outcomeMaximumAllowedValue": {
          "description": "Example: ",
          "type": "string"
        },
        "predictorMaximumAllowedValue": {
          "description": "Example: ",
          "type": "string"
        },
        "studyLimitations": {
          "description": "Example: As with any human experiment, it was impossible to control for all potentially confounding variables. \n            \n            Correlation does not necessarily imply correlation.  We can never know for sure if one factor is definitely the cause of an outcome.  \n            However, lack of correlation definitely implies the lack of a causal relationship.  Hence, we can with great \n            confidence rule out non-existent relationships. For instance, if we discover no relationship between mood\n            and an antidepressant this information is just as or even more valuable than the discovery that there is a relationship. \n            <br>\n            <br>\n           \n            We can also take advantage of several characteristics of time series data from many subjects  to infer the likelihood of a causal relationship if we do find a correlational relationship. \n            The criteria for causation are a group of minimal conditions necessary to provide adequate evidence of a causal relationship between an incidence and a possible consequence.\n            The list of the criteria is as follows:\n            <br>\n            1. Strength (effect size): A small association does not mean that there is not a causal effect, though the larger the association, the more likely that it is causal.\n            <br>\n            2. Consistency (reproducibility): Consistent findings observed by different persons in different places with different samples strengthens the likelihood of an effect.\n            <br>\n            3. Specificity: Causation is likely if a very specific population at a specific site and disease with no other likely explanation. The more specific an association between a factor and an effect is, the bigger the probability of a causal relationship.\n            <br>\n            4. Temporality: The effect has to occur after the cause (and if there is an expected delay between the cause and expected effect, then the effect must occur after that delay).\n            <br>\n            5. Biological gradient: Greater exposure should generally lead to greater incidence of the effect. However, in some cases, the mere presence of the factor can trigger the effect. In other cases, an inverse proportion is observed: greater exposure leads to lower incidence.\n            <br>\n            6. Plausibility: A plausible mechanism between cause and effect is helpful.\n            <br>\n            7. Coherence: Coherence between epidemiological and laboratory findings increases the likelihood of an effect.\n            <br>\n            8. Experiment: \"Occasionally it is possible to appeal to experimental evidence\".\n            <br>\n            9. Analogy: The effect of similar factors may be considered.\n            <br>\n            <br>\n             \n             The confidence in a causal relationship is bolstered by the fact that time-precedence was taken into account in all calculations. Furthermore, in accordance with the law of large numbers (LLN), the predictive power and accuracy of these results will continually grow over time.  297 paired data points were used in this analysis.   Assuming that the relationship is merely coincidental, as the participant independently modifies their Barometric Pressure values, the observed strength of the relationship will decline until it is below the threshold of significance.  To it another way, in the case that we do find a spurious correlation, suggesting that banana intake improves mood for instance,\n            one will likely increase their banana intake.  Due to the fact that this correlation is spurious, it is unlikely\n            that you will see a continued and persistent corresponding increase in mood.  So over time, the spurious correlation will\n            naturally dissipate.Furthermore, it will be very enlightening to aggregate this data with the data from other participants  with similar genetic, diseasomic, environmentomic, and demographic profiles.",
          "type": "string"
        },
        "significantDifference": {
          "description": "Example: true",
          "type": "boolean"
        },
        "significanceExplanation": {
          "description": "Example: Using a two-tailed t-test with alpha = 0.05, it was determined that the change in Reference And Learning Hours is statistically significant at 95% confidence interval. ",
          "type": "string"
        },
        "strengthLevel": {
          "description": "Example: very weak",
          "type": "string"
        },
        "confidenceLevel": {
          "description": "Example: high",
          "type": "string"
        },
        "studyObjective": {
          "description": "Example: The objective of this study is to determine the nature of the relationship (if any) between the Barometric Pressure and the Reference And Learning Hours. Additionally, we attempt to determine the Barometric Pressure values most likely to produce optimal Reference And Learning Hours values. ",
          "type": "string"
        },
        "studyTitle": {
          "description": "Example: N1 Study: Barometric Pressure Predicts Higher Reference And Learning Hours",
          "type": "string"
        },
        "dataSources": {
          "description": "Example: Barometric Pressure data was primarily collected using <a href=\"https://quantimo.do\">QuantiModo</a>.  <a href=\"https://quantimo.do\">QuantiModo</a> is a Chrome extension, Android app, iOS app, and web app that allows you to easily track mood, symptoms, or any outcome you want to optimize in a fraction of a second.  You can also import your data from over 30 other apps and devices like Fitbit, Rescuetime, Jawbone Up, Withings, Facebook, Github, Google Calendar, Runkeeper, MoodPanda, Slice, Google Fit, and more.  <a href=\"https://quantimo.do\">QuantiModo</a> then analyzes your data to identify which hidden factors are most likely to be influencing your mood or symptoms and their optimal daily values.<br>Reference And Learning Hours data was primarily collected using <a href=\"https://www.rescuetime.com/rp/quantimodo/plans\">RescueTime</a>.  Detailed reports show which applications and websites you spent time on. Activities are automatically grouped into pre-defined categories with built-in productivity scores covering thousands of websites and applications. You can customize categories and productivity scores to meet your needs.",
          "type": "string"
        },
        "studyAbstract": {
          "description": "Example: Your data suggests with a high degree of confidence (p=0) that Barometric Pressure (Environment) has a weakly positive predictive relationship (R=0.147) with Reference And Learning Hours  (Activity).  The highest quartile of Reference And Learning Hours  measurements were observed following an average 101187.2Pa Barometric Pressure.  The lowest quartile of Reference And Learning Hours  measurements were observed following an average 97597.75Pa Barometric Pressure.",
          "type": "string"
        },
        "direction": {
          "description": "Example: higher",
          "type": "string"
        },
        "predictivePearsonCorrelation": {
          "description": "Example: ",
          "type": "string"
        },
        "predictorExplanation": {
          "description": "Example: Barometric Pressure Predicts Higher Reference And Learning Hours",
          "type": "string"
        },
        "studyBackground": {
          "description": "Example: ",
          "type": "string"
        },
        "studyDesign": {
          "description": "Example: This study is based on data donated by one QuantiModo user. Thus, the study design is consistent with an n=1 observational natural experiment. ",
          "type": "string"
        },
        "dataPoints": {
          "description": "Example: ",
          "type": "string"
        },
        "numberOfDays": {
          "description": "Example: 425",
          "type": "integer"
        },
        "reversePairsCount": {
          "description": "Example: ",
          "type": "string"
        },
        "causeChangesStatisticalSignificance": {
          "description": "Example: 0.9999299755903",
          "type": "number",
          "format": "double"
        },
        "causeVariableCategoryId": {
          "description": "Example: 17",
          "type": "integer"
        },
        "effectVariableCategoryId": {
          "description": "Example: 14",
          "type": "integer"
        },
        "predictorFillingValue": {
          "description": "Example: ",
          "type": "string"
        },
        "outcomeFillingValue": {
          "description": "Example: ",
          "type": "string"
        },
        "causeNumberOfRawMeasurements": {
          "description": "Example: 14764",
          "type": "integer"
        },
        "effectNumberOfRawMeasurements": {
          "description": "Example: 4045",
          "type": "integer"
        },
        "causeNumberOfProcessedDailyMeasurements": {
          "description": "Example: 1364",
          "type": "integer"
        },
        "effectNumberOfProcessedDailyMeasurements": {
          "description": "Example: 145",
          "type": "integer"
        },
        "causeVariableMostCommonConnectorId": {
          "description": "Example: 13",
          "type": "integer"
        },
        "effectVariableMostCommonConnectorId": {
          "description": "Example: 11",
          "type": "integer"
        },
        "studyLinkFacebook": {
          "description": "Example: https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DBarometric%2520Pressure%26effectVariableName%3DReference%2520And%2520Learning%2520Hours%26userId%3D230",
          "type": "string"
        },
        "studyLinkTwitter": {
          "description": "Example: https://twitter.com/home?status=Barometric%20Pressure%20Predicts%20Higher%20Reference%20And%20Learning%20Hours%20https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DBarometric%2520Pressure%26effectVariableName%3DReference%2520And%2520Learning%2520Hours%26userId%3D230%20%40quantimodo",
          "type": "string"
        },
        "studyLinkGoogle": {
          "description": "Example: https://plus.google.com/share?url=https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DBarometric%2520Pressure%26effectVariableName%3DReference%2520And%2520Learning%2520Hours%26userId%3D230",
          "type": "string"
        },
        "causeVariableName": {
          "description": "Example: Barometric Pressure",
          "type": "string"
        },
        "effectVariableName": {
          "description": "Example: Reference And Learning Hours",
          "type": "string"
        },
        "averageEffect": {
          "description": "Example: 8.4268686868687",
          "type": "number",
          "format": "double"
        },
        "numberOfLowEffectPairs": {
          "description": "Example: 57",
          "type": "integer"
        },
        "numberOfHighEffectPairs": {
          "description": "Example: 27",
          "type": "integer"
        },
        "degreesOfFreedom": {
          "description": "Example: 200",
          "type": "integer"
        },
        "numberOfUniqueCauseValuesForOptimalValues": {
          "description": "Example: 201",
          "type": "integer"
        },
        "numberOfUniqueEffectValuesForOptimalValues": {
          "description": "Example: 264",
          "type": "integer"
        },
        "numberOfCauseChangesForOptimalValues": {
          "description": "Example: 287",
          "type": "integer"
        },
        "medianOfUpperHalfOfEffectMeasurements": {
          "description": "Example: ",
          "type": "string"
        },
        "medianOfLowerHalfOfEffectMeasurements": {
          "description": "Example: ",
          "type": "string"
        },
        "numberOfEffectChangesForOptimalValues": {
          "description": "Example: 295",
          "type": "integer"
        },
        "minimumEffectValue": {
          "description": "Example: 0.18",
          "type": "number",
          "format": "double"
        },
        "maximumEffectValue": {
          "description": "Example: 20.38",
          "type": "number",
          "format": "double"
        },
        "effectValueSpread": {
          "description": "Example: 20.2",
          "type": "number",
          "format": "double"
        },
        "minimumCauseValue": {
          "description": "Example: 5267.5521276596",
          "type": "number",
          "format": "double"
        },
        "maximumCauseValue": {
          "description": "Example: 104300",
          "type": "number",
          "format": "double"
        },
        "causeValueSpread": {
          "description": "Example: 99032.44787234",
          "type": "number",
          "format": "double"
        },
        "averageEffectFollowingHighCause": {
          "description": "Example: 8.5",
          "type": "number",
          "format": "double"
        },
        "averageEffectFollowingLowCause": {
          "description": "Example: 1.47",
          "type": "number",
          "format": "double"
        },
        "averageDailyLowCause": {
          "description": "Example: 21023.36",
          "type": "number",
          "format": "double"
        },
        "averageDailyHighCause": {
          "description": "Example: 101627.85",
          "type": "number",
          "format": "double"
        },
        "principalInvestigator": {
          "description": "Example: ",
          "type": "string"
        },
        "causeVariableCombinationOperation": {
          "description": "Example: ",
          "type": "string"
        },
        "valuePredictingHighOutcomeExplanation": {
          "description": "Example: Reference And Learning Hours, on average, 0.84% higher after around 101187.2 Pa Barometric Pressure ",
          "type": "string"
        },
        "averageEffectFollowingHighCauseExplanation": {
          "description": "Example: Reference And Learning Hours is 8.5h (1% higher) on average after days with around 101627.85 Pa Barometric Pressure",
          "type": "string"
        },
        "averageEffectFollowingLowCauseExplanation": {
          "description": "Example: Reference And Learning Hours is 1.47h (83% lower) on average after days with around 21023.36 Pa Barometric Pressure",
          "type": "string"
        },
        "valuePredictingLowOutcomeExplanation": {
          "description": "Example: Reference And Learning Hours, on average, 82.6% lower after around 97597.75 Pa Barometric Pressure ",
          "type": "string"
        },
        "numberOfUsers": {
          "description": "Example: ",
          "type": "string"
        },
        "outcomeDataSources": {
          "description": "Example: ",
          "type": "string"
        },
        "correlationIsContradictoryToOptimalValues": {
          "description": "Example: false",
          "type": "boolean"
        },
        "forwardSpearmanCorrelationCoefficient": {
          "description": "Example: -0.26193208156295",
          "type": "number",
          "format": "double"
        },
        "minimumProbability": {
          "description": "Example: 0.05",
          "type": "number",
          "format": "double"
        },
        "strongestPearsonCorrelationCoefficient": {
          "description": "Example: ",
          "type": "string"
        },
        "pairsOverTimeChartConfig": {
          "description": "Example: ",
          "type": "string",
          "format": "date-time"
        },
        "correlationsOverOnsetDelaysChartConfig": {
          "description": "Example: ",
          "type": "string"
        },
        "correlationsOverDurationsOfActionChartConfig": {
          "description": "Example: ",
          "type": "string"
        },
        "onsetDelayWithStrongestPearsonCorrelation": {
          "description": "Example: ",
          "type": "string"
        },
        "averageForwardPearsonCorrelationOverOnsetDelays": {
          "description": "Example: ",
          "type": "string"
        },
        "averageReversePearsonCorrelationOverOnsetDelays": {
          "description": "Example: ",
          "type": "string"
        },
        "pearsonCorrelationWithNoOnsetDelay": {
          "description": "Example: ",
          "type": "string"
        },
        "voteStatisticalSignificance": {
          "description": "Example: 1",
          "type": "integer"
        },
        "calculationStartTime": {
          "description": "Example: ",
          "type": "string",
          "format": "date-time"
        },
        "shareUserMeasurements": {
          "description": "Example: false",
          "type": "boolean"
        },
        "causeUserVariableShareUserMeasurements": {
          "description": "Example: ",
          "type": "string"
        },
        "effectUserVariableShareUserMeasurements": {
          "description": "Example: ",
          "type": "string"
        },
        "averagePearsonCorrelationCoefficientOverOnsetDelays": {
          "description": "Example: ",
          "type": "string"
        },
        "onsetDelayWithStrongestPearsonCorrelationInHours": {
          "description": "Example: ",
          "type": "string"
        },
        "causeVariableId": {
          "description": "Example: 96380",
          "type": "integer"
        },
        "effectVariableId": {
          "description": "Example: 111642",
          "type": "integer"
        },
        "studyLinkStatic": {
          "description": "Example: https://local.quantimo.do/api/v2/study?causeVariableName=Barometric%20Pressure&effectVariableName=Reference%20And%20Learning%20Hours&userId=230",
          "type": "string"
        },
        "studyLinkDynamic": {
          "description": "Example: https://local.quantimo.do/ionic/Modo/www/index.html#/app/study?causeVariableName=Barometric%20Pressure&effectVariableName=Reference%20And%20Learning%20Hours&userId=230",
          "type": "string"
        },
        "gaugeImage": {
          "description": "Example: https://s3.amazonaws.com/quantimodo-docs/images/gauge-weakly-positive-relationship.png",
          "type": "string"
        },
        "imageUrl": {
          "description": "Example: https://s3-us-west-1.amazonaws.com/qmimages/variable_categories_gauges_logo_background/gauge-weakly-positive-relationship_environment_activity_logo_background.png",
          "type": "string"
        },
        "gaugeImageSquare": {
          "description": "Example: https://s3.amazonaws.com/quantimodo-docs/images/gauge-weakly-positive-relationship-200-200.png",
          "type": "string"
        },
        "onsetDelayInHours": {
          "description": "Example: 0",
          "type": "integer"
        },
        "durationOfActionInHours": {
          "description": "Example: 0",
          "type": "integer"
        },
        "effectVariableDefaultUnitId": {
          "description": "Example: 34",
          "type": "integer"
        },
        "causeVariableDefaultUnitName": {
          "description": "Example: ",
          "type": "string"
        },
        "causeVariableDefaultUnitAbbreviatedName": {
          "description": "Example: Pa",
          "type": "string"
        },
        "effectVariableDefaultUnitName": {
          "description": "Example: ",
          "type": "string"
        },
        "effectVariableDefaultUnitAbbreviatedName": {
          "description": "Example: h",
          "type": "string"
        },
        "rawCauseMeasurementSignificance": {
          "description": "Example: 1",
          "type": "number",
          "format": "double"
        },
        "allPairsSignificance": {
          "description": "Example: 0.99994982531794",
          "type": "number",
          "format": "double"
        },
        "numberOfDaysSignificance": {
          "description": "Example: 0.99999929612614",
          "type": "number",
          "format": "double"
        },
        "rawEffectMeasurementSignificance": {
          "description": "Example: 1",
          "type": "number",
          "format": "double"
        },
        "optimalChangeSpread": {
          "description": "Example: 83.44",
          "type": "number",
          "format": "double"
        },
        "optimalChangeSpreadSignificance": {
          "description": "Example: 0.99999999999917",
          "type": "number",
          "format": "double"
        },
        "correlationsOverDurationsOfAction": {
          "description": "Example: ",
          "type": "string"
        },
        "dataSourcesParagraphForEffect": {
          "description": "Example: Reference And Learning Hours data was primarily collected using <a href=\"https://www.rescuetime.com/rp/quantimodo/plans\">RescueTime</a>.  Detailed reports show which applications and websites you spent time on. Activities are automatically grouped into pre-defined categories with built-in productivity scores covering thousands of websites and applications. You can customize categories and productivity scores to meet your needs.",
          "type": "string"
        },
        "dataSourcesParagraphForCause": {
          "description": "Example: Barometric Pressure data was primarily collected using <a href=\"https://quantimo.do\">QuantiModo</a>.  <a href=\"https://quantimo.do\">QuantiModo</a> is a Chrome extension, Android app, iOS app, and web app that allows you to easily track mood, symptoms, or any outcome you want to optimize in a fraction of a second.  You can also import your data from over 30 other apps and devices like Fitbit, Rescuetime, Jawbone Up, Withings, Facebook, Github, Google Calendar, Runkeeper, MoodPanda, Slice, Google Fit, and more.  <a href=\"https://quantimo.do\">QuantiModo</a> then analyzes your data to identify which hidden factors are most likely to be influencing your mood or symptoms and their optimal daily values.",
          "type": "string"
        },
        "instructionsForEffect": {
          "description": "Example: <a href=\"https://www.rescuetime.com/rp/quantimodo/plans\">Obtain RescueTime</a> and use it to record your Reference And Learning Hours. Once you have a <a href=\"https://www.rescuetime.com/rp/quantimodo/plans\">RescueTime</a> account, <a href=\"https://app.quantimo.do/ionic/Modo/www/#/app/import\">connect your  RescueTime account at QuantiModo</a> to automatically import and analyze your data.",
          "type": "string"
        },
        "instructionsForCause": {
          "description": "Example: <a href=\"https://quantimo.do\">Obtain QuantiModo</a> and use it to record your Barometric Pressure. Once you have a <a href=\"https://quantimo.do\">QuantiModo</a> account, <a href=\"https://app.quantimo.do/ionic/Modo/www/#/app/import\">connect your  QuantiModo account at QuantiModo</a> to automatically import and analyze your data.",
          "type": "string"
        },
        "perDaySentenceFragment": {
          "description": "Example: ",
          "type": "string"
        },
        "predictsLowEffectChangeSentenceFragment": {
          "description": "Example: , on average, 82.6% ",
          "type": "string"
        },
        "predictsHighEffectChangeSentenceFragment": {
          "description": "Example: , on average, 0.84% ",
          "type": "string"
        },
        "studyLinkEmail": {
          "description": "Example: mailto:?subject=N1%20Study%3A%20Barometric%20Pressure%20Predicts%20Higher%20Reference%20And%20Learning%20Hours&body=Check%20out%20my%20study%20at%20https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DBarometric%2520Pressure%26effectVariableName%3DReference%2520And%2520Learning%2520Hours%26userId%3D230%0A%0AHave%20a%20great%20day!",
          "type": "string"
        },
        "distanceFromMiddleToBeHightLowEffect": {
          "description": "Example: 25",
          "type": "integer"
        },
        "numberOfSamples": {
          "description": "Example: 297",
          "type": "integer"
        },
        "effectUnit": {
          "description": "Example: h",
          "type": "string"
        },
        "causeVariableImageUrl": {
          "description": "Example: https://maxcdn.icons8.com/Color/PNG/96/Weather/chance_of_storm-96.png",
          "type": "string"
        },
        "causeVariableIonIcon": {
          "description": "Example: ion-ios-partlysunny",
          "type": "string"
        },
        "effectVariableImageUrl": {
          "description": "Example: https://maxcdn.icons8.com/Color/PNG/96/Sports/football-96.png",
          "type": "string"
        },
        "effectVariableIonIcon": {
          "description": "Example: ion-ios-body-outline",
          "type": "string"
        }
      }
    },
    "GetStudyResponse": {
      "required": [
        "status",
        "success"
      ],
      "properties": {
        "status": {
          "type": "integer",
          "description": "Status code"
        },
        "message": {
          "type": "string",
          "description": "Message"
        },
        "success": {
          "type": "boolean"
        },
        "data": {
          "$ref": "#/definitions/GetStudyDataResponse"
        },
        "pairs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pair"
          }
        },
        "causeProcessedDailyMeasurements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessedDailyMeasurement"
          }
        },
        "effectProcessedDailyMeasurements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessedDailyMeasurement"
          }
        },
        "userStudy": {
          "$ref": "#/definitions/UserStudy"
        },
        "causeVariable": {
          "$ref": "#/definitions/UserVariable"
        },
        "charts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Chart"
          }
        },
        "effectVariable": {
          "$ref": "#/definitions/UserVariable"
        },
        "statistics": {
          "$ref": "#/definitions/Statistic"
        },
        "userId": {
          "description": "Example: 230",
          "type": "integer"
        },
        "highchartArray": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HighchartArray"
          }
        }
      }
    },
    "GetStudyDataResponse": {
      "required": [
        "causeProcessedDailyMeasurements",
        "causeVariable",
        "charts",
        "effectProcessedDailyMeasurements",
        "effectVariable",
        "pairs",
        "statistics",
        "text",
        "user",
        "userId"
      ],
      "properties": {
        "causeProcessedDailyMeasurements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessedDailyMeasurement"
          }
        },
        "causeVariable": {
          "$ref": "#/definitions/UserVariable"
        },
        "charts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Chart"
          }
        },
        "effectProcessedDailyMeasurements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessedDailyMeasurement"
          }
        },
        "effectVariable": {
          "$ref": "#/definitions/UserVariable"
        },
        "pairs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pair"
          }
        },
        "statistics": {
          "$ref": "#/definitions/Statistic"
        },
        "text": {
          "description": "Example: ",
          "type": "string"
        },
        "user": {
          "description": "Example: ",
          "type": "string"
        },
        "userId": {
          "description": "Example: 230",
          "type": "integer"
        }
      }
    },
    "GetTrackingReminderNotificationsResponse": {
      "required": [
        "status",
        "success"
      ],
      "properties": {
        "status": {
          "type": "integer",
          "description": "Status code"
        },
        "message": {
          "type": "string",
          "description": "Message"
        },
        "success": {
          "type": "boolean"
        },
        "data": {
          "$ref": "#/definitions/TrackingReminderNotificationsArray"
        }
      }
    },
    "TrackingReminderNotificationsArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TrackingReminderNotification"
      }
    },
    "UnitArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Unit"
      }
    },
    "VariableCategoryArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/VariableCategory"
      }
    },
    "UserVariableArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/UserVariable"
      }
    },
    "TrackingReminderNotificationArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TrackingReminderNotification"
      }
    },
    "CommonVariableArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CommonVariable"
      }
    },
    "PostTrackingRemindersResponse": {
      "required": [
        "status",
        "success"
      ],
      "properties": {
        "status": {
          "type": "integer",
          "description": "Status code"
        },
        "message": {
          "type": "string",
          "description": "Message"
        },
        "success": {
          "type": "boolean"
        },
        "data": {
          "$ref": "#/definitions/PostTrackingRemindersDataResponse"
        }
      }
    },
    "LocalDailyReminderNotificationTime": {
      "properties": {
        "LocalDailyReminderNotificationTime": {
          "description": "Example: 00:10:00",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "LocalDailyReminderNotificationTimeArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/LocalDailyReminderNotificationTime"
      }
    },
    "LocalDailyReminderNotificationTimesForAllReminder": {
      "properties": {
        "LocalDailyReminderNotificationTimesForAllReminder": {
          "description": "Example: 00:10:00",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "LocalDailyReminderNotificationTimesForAllReminderArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/LocalDailyReminderNotificationTimesForAllReminder"
      }
    },
    "TrackingReminderArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TrackingReminder"
      }
    },
    "PostTrackingRemindersDataResponse": {
      "properties": {
        "userVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserVariable"
          }
        },
        "trackingReminderNotifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingReminderNotification"
          }
        },
        "trackingReminders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingReminder"
          }
        }
      }
    },
    "GetTrackingRemindersResponse": {
      "required": [
        "status",
        "success"
      ],
      "properties": {
        "status": {
          "type": "integer",
          "description": "Status code"
        },
        "message": {
          "type": "string",
          "description": "Message"
        },
        "success": {
          "type": "boolean"
        },
        "data": {
          "$ref": "#/definitions/TrackingRemindersArray"
        },
        "id": {
          "description": "Example: 30376",
          "type": "integer"
        },
        "variableName": {
          "description": "Example: Acetyl L-Carnitine By MRM",
          "type": "string"
        },
        "reminderFrequency": {
          "description": "Example: 86400",
          "type": "integer"
        },
        "clientId": {
          "description": "Example: ionic",
          "type": "string"
        },
        "createdAt": {
          "description": "Example: 2016-12-25 10:28:42",
          "type": "string",
          "format": "date-time"
        },
        "defaultValue": {
          "description": "Example: 500",
          "type": "number",
          "format": "double"
        },
        "trackingReminderId": {
          "description": "Example: 30376",
          "type": "integer"
        },
        "trackingReminderImageUrl": {
          "description": "Example: https://rximage.nlm.nih.gov/image/images/gallery/original/55111-0129-60_RXNAVIMAGE10_B051D81E.jpg",
          "type": "string"
        },
        "reminderStartTime": {
          "description": "Example: 14:00:00",
          "type": "string",
          "format": "date-time"
        },
        "startTrackingDate": {
          "description": "Example: 2016-12-16",
          "type": "string"
        },
        "stopTrackingDate": {
          "description": "Example: 2017-02-02",
          "type": "string"
        },
        "updatedAt": {
          "description": "Example: 2017-08-09 19:38:05",
          "type": "string",
          "format": "date-time"
        },
        "userId": {
          "description": "Example: 230",
          "type": "integer"
        },
        "variableId": {
          "description": "Example: 5627291",
          "type": "integer"
        },
        "combinationOperation": {
          "description": "Example: MEAN",
          "type": "string"
        },
        "defaultUnitId": {
          "description": "Example: 7",
          "type": "integer"
        },
        "ionIcon": {
          "description": "Example: ion-ios-medkit-outline",
          "type": "string"
        },
        "variableCategoryId": {
          "description": "Example: 13",
          "type": "integer"
        },
        "lastValue": {
          "description": "Example: 500",
          "type": "number",
          "format": "double"
        },
        "secondToLastValue": {
          "description": "Example: 250",
          "type": "number",
          "format": "double"
        },
        "thirdToLastValue": {
          "description": "Example: 250",
          "type": "number",
          "format": "double"
        },
        "userVariableDefaultUnitId": {
          "description": "Example: 7",
          "type": "integer"
        },
        "userVariableVariableCategoryId": {
          "description": "Example: 13",
          "type": "integer"
        },
        "numberOfRawMeasurements": {
          "description": "Example: 791",
          "type": "integer"
        },
        "variableCategoryName": {
          "description": "Example: Treatments",
          "type": "string"
        },
        "svgUrl": {
          "description": "Example: https://app.quantimo.do/ionic/Modo/www/img/variable_categories/treatments.svg",
          "type": "string"
        },
        "pngUrl": {
          "description": "Example: https://app.quantimo.do/ionic/Modo/www/img/variable_categories/treatments.png",
          "type": "string"
        },
        "pngPath": {
          "description": "Example: img/variable_categories/treatments.png",
          "type": "string"
        },
        "variableCategoryImageUrl": {
          "description": "Example: https://maxcdn.icons8.com/Color/PNG/96/Healthcare/pill-96.png",
          "type": "string"
        },
        "fillingValue": {
          "description": "Example: 0",
          "type": "integer"
        },
        "manualTracking": {
          "description": "Example: true",
          "type": "boolean"
        },
        "userVariableVariableCategoryName": {
          "description": "Example: Treatments",
          "type": "string"
        },
        "imageUrl": {
          "description": "Example: https://rximage.nlm.nih.gov/image/images/gallery/original/55111-0129-60_RXNAVIMAGE10_B051D81E.jpg",
          "type": "string"
        },
        "reminderStartTimeLocal": {
          "description": "Example: 09:00:00",
          "type": "string",
          "format": "date-time"
        },
        "reminderStartTimeLocalHumanFormatted": {
          "description": "Example: 09:00 AM",
          "type": "string",
          "format": "date-time"
        },
        "lastValueInUserVariableDefaultUnit": {
          "description": "Example: 500",
          "type": "number",
          "format": "double"
        },
        "secondToLastValueInUserVariableDefaultUnit": {
          "description": "Example: 250",
          "type": "number",
          "format": "double"
        },
        "thirdToLastValueInUserVariableDefaultUnit": {
          "description": "Example: 250",
          "type": "number",
          "format": "double"
        },
        "unitId": {
          "description": "Example: 7",
          "type": "integer"
        },
        "unitName": {
          "description": "Example: Milligrams",
          "type": "string"
        },
        "unitAbbreviatedName": {
          "description": "Example: mg",
          "type": "string"
        },
        "unitCategoryId": {
          "description": "Example: 3",
          "type": "integer"
        },
        "unitCategoryName": {
          "description": "Example: Weight",
          "type": "string"
        },
        "defaultUnitName": {
          "description": "Example: Milligrams",
          "type": "string"
        },
        "defaultUnitAbbreviatedName": {
          "description": "Example: mg",
          "type": "string"
        },
        "defaultUnitCategoryId": {
          "description": "Example: 3",
          "type": "integer"
        },
        "defaultUnitCategoryName": {
          "description": "Example: Weight",
          "type": "string"
        },
        "availableDefaultUnits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Unit"
          }
        },
        "userVariableDefaultUnitName": {
          "description": "Example: Milligrams",
          "type": "string"
        },
        "userVariableDefaultUnitAbbreviatedName": {
          "description": "Example: mg",
          "type": "string"
        },
        "userVariableDefaultUnitCategoryId": {
          "description": "Example: 3",
          "type": "integer"
        },
        "userVariableDefaultUnitCategoryName": {
          "description": "Example: Weight",
          "type": "string"
        },
        "minimumAllowedValue": {
          "description": "Example: 0",
          "type": "integer"
        },
        "inputType": {
          "description": "Example: value",
          "type": "string"
        },
        "localDailyReminderNotificationTimes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "localDailyReminderNotificationTimesForAllReminders": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reminderStartEpochSeconds": {
          "description": "Example: 1481896800",
          "type": "integer"
        },
        "nextReminderTimeEpochSeconds": {
          "description": "Example: 1502373600",
          "type": "integer"
        },
        "firstDailyReminderTime": {
          "description": "Example: 12:00:00",
          "type": "string",
          "format": "date-time"
        },
        "secondDailyReminderTime": {
          "description": "Example: 14:00:00",
          "type": "string",
          "format": "date-time"
        },
        "frequencyTextDescription": {
          "description": "Example: Daily (ended 2017-02-02)",
          "type": "string"
        },
        "frequencyTextDescriptionWithTime": {
          "description": "Example: Daily at 09:00 AM (ended 2017-02-02)",
          "type": "string",
          "format": "date-time"
        },
        "valueAndFrequencyTextDescription": {
          "description": "Example: 500 mg daily (ended 2017-02-02)",
          "type": "string"
        },
        "valueAndFrequencyTextDescriptionWithTime": {
          "description": "Example: 500 mg daily at 09:00 AM (ended 2017-02-02)",
          "type": "string",
          "format": "date-time"
        },
        "repeating": {
          "description": "Example: true",
          "type": "boolean"
        }
      }
    },
    "GetConnectorsResponse": {
      "required": [
        "status",
        "success"
      ],
      "properties": {
        "status": {
          "type": "integer",
          "description": "Status code"
        },
        "message": {
          "type": "string",
          "description": "Message"
        },
        "success": {
          "type": "boolean"
        },
        "connectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Connector"
          }
        }
      }
    },
    "TrackingRemindersArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TrackingReminder"
      }
    },
    "PostUserSettingsResponse": {
      "type": "object",
      "required": [
        "status",
        "success"
      ],
      "properties": {
        "status": {
          "type": "integer",
          "description": "Status code"
        },
        "message": {
          "type": "string",
          "description": "Message"
        },
        "success": {
          "type": "boolean"
        },
        "data": {
          "$ref": "#/definitions/PostUserSettingsDataResponse"
        }
      }
    },
    "PostUserSettingsDataResponse": {
      "properties": {
        "purchaseId": {
          "description": "Example: 1",
          "type": "integer"
        }
      }
    },
    "PostMeasurementsResponse": {
      "required": [
        "status",
        "success"
      ],
      "properties": {
        "status": {
          "type": "integer",
          "description": "Status code"
        },
        "message": {
          "type": "string",
          "description": "Message"
        },
        "success": {
          "type": "boolean"
        },
        "data": {
          "$ref": "#/definitions/PostMeasurementsDataResponse"
        }
      }
    },
    "PostMeasurementsDataResponse": {
      "properties": {
        "userVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserVariable"
          }
        }
      }
    },
    "MeasurementArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Measurement"
      }
    },
    "CorrelationArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Correlation"
      }
    },
    "UserStudy": {
      "properties": {
        "correlationCoefficient": {
          "description": "Example: -0.173",
          "type": "number",
          "format": "double"
        },
        "onsetDelay": {
          "description": "Example: 0",
          "type": "integer"
        },
        "durationOfAction": {
          "description": "Example: 604800",
          "type": "integer"
        },
        "numberOfPairs": {
          "description": "Example: 1011",
          "type": "integer"
        },
        "effectSize": {
          "description": "Example: weakly negative",
          "type": "string"
        },
        "statisticalSignificance": {
          "description": "Example: 0.83333333333333",
          "type": "number",
          "format": "double"
        },
        "timestamp": {
          "description": "Example: 1502255174",
          "type": "integer"
        },
        "predictivePearsonCorrelationCoefficient": {
          "description": "Example: -0.173",
          "type": "number",
          "format": "double"
        },
        "causalityFactor": {
          "description": "Example: -0.173",
          "type": "number",
          "format": "double"
        },
        "causeVariableCategoryName": {
          "description": "Example: Sleep",
          "type": "string"
        },
        "effectVariableCategoryName": {
          "description": "Example: Emotions",
          "type": "string"
        },
        "valuePredictingHighOutcome": {
          "description": "Example: 6.79",
          "type": "number",
          "format": "double"
        },
        "valuePredictingLowOutcome": {
          "description": "Example: 7.54",
          "type": "number",
          "format": "double"
        },
        "optimalPearsonProduct": {
          "description": "Example: 0.074088026546601",
          "type": "number",
          "format": "double"
        },
        "causeVariableDefaultUnitId": {
          "description": "Example: 34",
          "type": "integer"
        },
        "causeChanges": {
          "description": "Example: 1010",
          "type": "integer"
        },
        "effectChanges": {
          "description": "Example: 521",
          "type": "integer"
        },
        "error": {
          "description": "Example: optimalPearsonProduct is not defined",
          "type": "string"
        },
        "predictsHighEffectChange": {
          "description": "Example: 3.54",
          "type": "number",
          "format": "double"
        },
        "predictsLowEffectChange": {
          "description": "Example: -3.25",
          "type": "number",
          "format": "double"
        },
        "tValue": {
          "description": "Example: 5.525102310162",
          "type": "number",
          "format": "double"
        },
        "criticalTValue": {
          "description": "Example: 1.646",
          "type": "number",
          "format": "double"
        },
        "confidenceInterval": {
          "description": "Example: 0.055165978848875",
          "type": "number",
          "format": "double"
        },
        "experimentStartTime": {
          "description": "Example: 1336267020",
          "type": "integer"
        },
        "experimentEndTime": {
          "description": "Example: 1491024591",
          "type": "integer"
        },
        "userId": {
          "description": "Example: 230",
          "type": "integer"
        },
        "studyResults": {
          "description": "Example: This analysis suggests that higher Sleep Duration (Sleep) generally predicts lower Overall Mood (p = 0).  Overall Mood is, on average, 3.54%  higher after around 6.79 Sleep Duration.  After an onset delay of 168 hours, Overall Mood is, on average, 3.25%  lower than its average over the 168 hours following around 7.54 Sleep Duration.  1011 data points were used in this analysis.  The value for Sleep Duration changed 1010 times, effectively running 505 separate natural experiments.  The top quartile outcome values are preceded by an average 6.79 h of Sleep Duration.  The bottom quartile outcome values are preceded by an average 7.54 h of Sleep Duration.  Forward Pearson Correlation Coefficient was -0.173 (p=0, 95% CI -0.228 to -0.118 onset delay = 0 hours, duration of action = 168 hours) .  The Reverse Pearson Correlation Coefficient was 0 (P=0, 95% CI -0.055 to 0.055, onset delay = -0 hours, duration of action = -168 hours). When the Sleep Duration value is closer to 6.79 h than 7.54 h, the Overall Mood value which follows is, on average, 3.54%  percent higher than its typical value.  When the Sleep Duration value is closer to 7.54 h than 6.79 h, the Overall Mood value which follows is 0% lower than its typical value.  Overall Mood is 2.62/5 (4% lower) on average after days with around 8.8 h Sleep Duration  Overall Mood is 2.82/5 (3% higher) on average after days with around 5.93 h Sleep Duration",
          "type": "string"
        },
        "dataAnalysis": {
          "description": "Example: It was assumed that 0 hours would pass before a change in Sleep Duration would produce an observable change in Overall Mood.  It was assumed that Sleep Duration could produce an observable change in Overall Mood for as much as 7 days after the stimulus event.  ",
          "type": "string"
        },
        "studyLimitations": {
          "description": "Example: As with any human experiment, it was impossible to control for all potentially confounding variables. \n            \n            Correlation does not necessarily imply correlation.  We can never know for sure if one factor is definitely the cause of an outcome.  \n            However, lack of correlation definitely implies the lack of a causal relationship.  Hence, we can with great \n            confidence rule out non-existent relationships. For instance, if we discover no relationship between mood\n            and an antidepressant this information is just as or even more valuable than the discovery that there is a relationship. \n            <br>\n            <br>\n           \n            We can also take advantage of several characteristics of time series data from many subjects  to infer the likelihood of a causal relationship if we do find a correlational relationship. \n            The criteria for causation are a group of minimal conditions necessary to provide adequate evidence of a causal relationship between an incidence and a possible consequence.\n            The list of the criteria is as follows:\n            <br>\n            1. Strength (effect size): A small association does not mean that there is not a causal effect, though the larger the association, the more likely that it is causal.\n            <br>\n            2. Consistency (reproducibility): Consistent findings observed by different persons in different places with different samples strengthens the likelihood of an effect.\n            <br>\n            3. Specificity: Causation is likely if a very specific population at a specific site and disease with no other likely explanation. The more specific an association between a factor and an effect is, the bigger the probability of a causal relationship.\n            <br>\n            4. Temporality: The effect has to occur after the cause (and if there is an expected delay between the cause and expected effect, then the effect must occur after that delay).\n            <br>\n            5. Biological gradient: Greater exposure should generally lead to greater incidence of the effect. However, in some cases, the mere presence of the factor can trigger the effect. In other cases, an inverse proportion is observed: greater exposure leads to lower incidence.\n            <br>\n            6. Plausibility: A plausible mechanism between cause and effect is helpful.\n            <br>\n            7. Coherence: Coherence between epidemiological and laboratory findings increases the likelihood of an effect.\n            <br>\n            8. Experiment: \"Occasionally it is possible to appeal to experimental evidence\".\n            <br>\n            9. Analogy: The effect of similar factors may be considered.\n            <br>\n            <br>\n             \n             The confidence in a causal relationship is bolstered by the fact that time-precedence was taken into account in all calculations. Furthermore, in accordance with the law of large numbers (LLN), the predictive power and accuracy of these results will continually grow over time.  1011 paired data points were used in this analysis.   Assuming that the relationship is merely coincidental, as the participant independently modifies their Sleep Duration values, the observed strength of the relationship will decline until it is below the threshold of significance.  To it another way, in the case that we do find a spurious correlation, suggesting that banana intake improves mood for instance,\n            one will likely increase their banana intake.  Due to the fact that this correlation is spurious, it is unlikely\n            that you will see a continued and persistent corresponding increase in mood.  So over time, the spurious correlation will\n            naturally dissipate.Furthermore, it will be very enlightening to aggregate this data with the data from other participants  with similar genetic, diseasomic, environmentomic, and demographic profiles.",
          "type": "string"
        },
        "significantDifference": {
          "description": "Example: true",
          "type": "boolean"
        },
        "significanceExplanation": {
          "description": "Example: Using a two-tailed t-test with alpha = 0.05, it was determined that the change in Overall Mood is statistically significant at 95% confidence interval. ",
          "type": "string"
        },
        "strengthLevel": {
          "description": "Example: very weak",
          "type": "string"
        },
        "confidenceLevel": {
          "description": "Example: high",
          "type": "string"
        },
        "studyObjective": {
          "description": "Example: The objective of this study is to determine the nature of the relationship (if any) between the Sleep Duration and the Overall Mood. Additionally, we attempt to determine the Sleep Duration values most likely to produce optimal Overall Mood values. ",
          "type": "string"
        },
        "studyTitle": {
          "description": "Example: N1 Study: Sleep Duration Predicts Lower Overall Mood",
          "type": "string"
        },
        "dataSources": {
          "description": "Example: Sleep Duration data was primarily collected using <a href=\"https://www.amazon.com/Fitbit-Charge-Heart-Fitness-Wristband/dp/B01K9S260E/ref=as_li_ss_tl?ie=UTF8&qid=1493518902&sr=8-3&keywords=fitbit&th=1&linkCode=ll1&tag=quant08-20&linkId=b357b0833de73b0c4e935fd7c13a079e\">Fitbit</a>.  <a href=\"https://www.amazon.com/Fitbit-Charge-Heart-Fitness-Wristband/dp/B01K9S260E/ref=as_li_ss_tl?ie=UTF8&qid=1493518902&sr=8-3&keywords=fitbit&th=1&linkCode=ll1&tag=quant08-20&linkId=b357b0833de73b0c4e935fd7c13a079e\">Fitbit</a> makes activity tracking easy and automatic.<br>Overall Mood data was primarily collected using <a href=\"https://quantimo.do\">QuantiModo</a>.  <a href=\"https://quantimo.do\">QuantiModo</a> is a Chrome extension, Android app, iOS app, and web app that allows you to easily track mood, symptoms, or any outcome you want to optimize in a fraction of a second.  You can also import your data from over 30 other apps and devices like Fitbit, Rescuetime, Jawbone Up, Withings, Facebook, Github, Google Calendar, Runkeeper, MoodPanda, Slice, Google Fit, and more.  <a href=\"https://quantimo.do\">QuantiModo</a> then analyzes your data to identify which hidden factors are most likely to be influencing your mood or symptoms and their optimal daily values.",
          "type": "string"
        },
        "studyAbstract": {
          "description": "Example: Your data suggests with a high degree of confidence (p=0) that Sleep Duration (Sleep) has a weakly negative predictive relationship (R=-0.173) with Overall Mood  (Emotions).  The highest quartile of Overall Mood  measurements were observed following an average 6.79h Sleep Duration.  The lowest quartile of Overall Mood  measurements were observed following an average 7.54h Sleep Duration.",
          "type": "string"
        },
        "direction": {
          "description": "Example: lower",
          "type": "string"
        },
        "predictorExplanation": {
          "description": "Example: Sleep Duration Predicts Lower Overall Mood",
          "type": "string"
        },
        "studyDesign": {
          "description": "Example: This study is based on data donated by one QuantiModo user. Thus, the study design is consistent with an n=1 observational natural experiment. ",
          "type": "string"
        },
        "numberOfDays": {
          "description": "Example: 1791",
          "type": "integer"
        },
        "causeChangesStatisticalSignificance": {
          "description": "Example: 1",
          "type": "number",
          "format": "double"
        },
        "causeVariableCategoryId": {
          "description": "Example: 6",
          "type": "integer"
        },
        "effectVariableCategoryId": {
          "description": "Example: 1",
          "type": "integer"
        },
        "causeNumberOfRawMeasurements": {
          "description": "Example: 1942",
          "type": "integer"
        },
        "effectNumberOfRawMeasurements": {
          "description": "Example: 11866",
          "type": "integer"
        },
        "causeNumberOfProcessedDailyMeasurements": {
          "description": "Example: 1113",
          "type": "integer"
        },
        "effectNumberOfProcessedDailyMeasurements": {
          "description": "Example: 1492",
          "type": "integer"
        },
        "causeVariableMostCommonConnectorId": {
          "description": "Example: 7",
          "type": "integer"
        },
        "effectVariableMostCommonConnectorId": {
          "description": "Example: 5",
          "type": "integer"
        },
        "studyLinkFacebook": {
          "description": "Example: https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DSleep%2520Duration%26effectVariableName%3DOverall%2520Mood%26userId%3D230",
          "type": "string"
        },
        "studyLinkTwitter": {
          "description": "Example: https://twitter.com/home?status=Sleep%20Duration%20Predicts%20Lower%20Overall%20Mood%20https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DSleep%2520Duration%26effectVariableName%3DOverall%2520Mood%26userId%3D230%20%40quantimodo",
          "type": "string"
        },
        "studyLinkGoogle": {
          "description": "Example: https://plus.google.com/share?url=https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DSleep%2520Duration%26effectVariableName%3DOverall%2520Mood%26userId%3D230",
          "type": "string"
        },
        "causeVariableName": {
          "description": "Example: Sleep Duration",
          "type": "string"
        },
        "effectVariableName": {
          "description": "Example: Overall Mood",
          "type": "string"
        },
        "averageEffect": {
          "description": "Example: 2.7265782739077",
          "type": "number",
          "format": "double"
        },
        "numberOfLowEffectPairs": {
          "description": "Example: 275",
          "type": "integer"
        },
        "numberOfHighEffectPairs": {
          "description": "Example: 28",
          "type": "integer"
        },
        "degreesOfFreedom": {
          "description": "Example: 200",
          "type": "integer"
        },
        "numberOfUniqueCauseValuesForOptimalValues": {
          "description": "Example: 671",
          "type": "integer"
        },
        "numberOfUniqueEffectValuesForOptimalValues": {
          "description": "Example: 112",
          "type": "integer"
        },
        "numberOfCauseChangesForOptimalValues": {
          "description": "Example: 1010",
          "type": "integer"
        },
        "numberOfEffectChangesForOptimalValues": {
          "description": "Example: 521",
          "type": "integer"
        },
        "minimumEffectValue": {
          "description": "Example: 1.5",
          "type": "number",
          "format": "double"
        },
        "maximumEffectValue": {
          "description": "Example: 5",
          "type": "number",
          "format": "double"
        },
        "effectValueSpread": {
          "description": "Example: 3.5",
          "type": "number",
          "format": "double"
        },
        "minimumCauseValue": {
          "description": "Example: 1.3",
          "type": "number",
          "format": "double"
        },
        "maximumCauseValue": {
          "description": "Example: 13.75",
          "type": "number",
          "format": "double"
        },
        "causeValueSpread": {
          "description": "Example: 12.45",
          "type": "number",
          "format": "double"
        },
        "averageEffectFollowingHighCause": {
          "description": "Example: 2.62",
          "type": "number",
          "format": "double"
        },
        "averageEffectFollowingLowCause": {
          "description": "Example: 2.82",
          "type": "number",
          "format": "double"
        },
        "averageDailyLowCause": {
          "description": "Example: 5.93",
          "type": "number",
          "format": "double"
        },
        "averageDailyHighCause": {
          "description": "Example: 8.8",
          "type": "number",
          "format": "double"
        },
        "valuePredictingHighOutcomeExplanation": {
          "description": "Example: Overall Mood, on average, 3.54% higher after around 6.79 h Sleep Duration ",
          "type": "string"
        },
        "averageEffectFollowingHighCauseExplanation": {
          "description": "Example: Overall Mood is 2.62/5 (4% lower) on average after days with around 8.8 h Sleep Duration",
          "type": "string"
        },
        "averageEffectFollowingLowCauseExplanation": {
          "description": "Example: Overall Mood is 2.82/5 (3% higher) on average after days with around 5.93 h Sleep Duration",
          "type": "string"
        },
        "valuePredictingLowOutcomeExplanation": {
          "description": "Example: Overall Mood, on average, 3.25% lower after around 7.54 h Sleep Duration ",
          "type": "string"
        },
        "correlationIsContradictoryToOptimalValues": {
          "description": "Example: false",
          "type": "boolean"
        },
        "forwardSpearmanCorrelationCoefficient": {
          "description": "Example: -0.20037947834262",
          "type": "number",
          "format": "double"
        },
        "minimumProbability": {
          "description": "Example: 0.05",
          "type": "number",
          "format": "double"
        },
        "voteStatisticalSignificance": {
          "description": "Example: 0.83333333333333",
          "type": "number",
          "format": "double"
        },
        "shareUserMeasurements": {
          "description": "Example: false",
          "type": "boolean"
        },
        "causeVariable": {
          "$ref": "#/definitions/UserVariable"
        },
        "effectVariable": {
          "$ref": "#/definitions/UserVariable"
        },
        "causeVariableId": {
          "description": "Example: 1867",
          "type": "integer"
        },
        "effectVariableId": {
          "description": "Example: 1398",
          "type": "integer"
        },
        "studyLinkStatic": {
          "description": "Example: https://local.quantimo.do/api/v2/study?causeVariableName=Sleep%20Duration&effectVariableName=Overall%20Mood&userId=230",
          "type": "string"
        },
        "studyLinkDynamic": {
          "description": "Example: https://local.quantimo.do/ionic/Modo/www/index.html#/app/study?causeVariableName=Sleep%20Duration&effectVariableName=Overall%20Mood&userId=230",
          "type": "string"
        },
        "gaugeImage": {
          "description": "Example: https://s3.amazonaws.com/quantimodo-docs/images/gauge-weakly-negative-relationship.png",
          "type": "string"
        },
        "imageUrl": {
          "description": "Example: https://s3-us-west-1.amazonaws.com/qmimages/variable_categories_gauges_logo_background/gauge-weakly-negative-relationship_sleep_emotions_logo_background.png",
          "type": "string"
        },
        "gaugeImageSquare": {
          "description": "Example: https://s3.amazonaws.com/quantimodo-docs/images/gauge-weakly-negative-relationship-200-200.png",
          "type": "string"
        },
        "onsetDelayInHours": {
          "description": "Example: 0",
          "type": "integer"
        },
        "durationOfActionInHours": {
          "description": "Example: 0",
          "type": "integer"
        },
        "effectVariableDefaultUnitId": {
          "description": "Example: 10",
          "type": "integer"
        },
        "causeVariableDefaultUnitAbbreviatedName": {
          "description": "Example: h",
          "type": "string"
        },
        "effectVariableDefaultUnitAbbreviatedName": {
          "description": "Example: /5",
          "type": "string"
        },
        "rawCauseMeasurementSignificance": {
          "description": "Example: 1",
          "type": "number",
          "format": "double"
        },
        "allPairsSignificance": {
          "description": "Example: 1",
          "type": "number",
          "format": "double"
        },
        "numberOfDaysSignificance": {
          "description": "Example: 1",
          "type": "number",
          "format": "double"
        },
        "rawEffectMeasurementSignificance": {
          "description": "Example: 1",
          "type": "number",
          "format": "double"
        },
        "optimalChangeSpread": {
          "description": "Example: 6.79",
          "type": "number",
          "format": "double"
        },
        "optimalChangeSpreadSignificance": {
          "description": "Example: 0.8959967711131",
          "type": "number",
          "format": "double"
        },
        "dataSourcesParagraphForEffect": {
          "description": "Example: Overall Mood data was primarily collected using <a href=\"https://quantimo.do\">QuantiModo</a>.  <a href=\"https://quantimo.do\">QuantiModo</a> is a Chrome extension, Android app, iOS app, and web app that allows you to easily track mood, symptoms, or any outcome you want to optimize in a fraction of a second.  You can also import your data from over 30 other apps and devices like Fitbit, Rescuetime, Jawbone Up, Withings, Facebook, Github, Google Calendar, Runkeeper, MoodPanda, Slice, Google Fit, and more.  <a href=\"https://quantimo.do\">QuantiModo</a> then analyzes your data to identify which hidden factors are most likely to be influencing your mood or symptoms and their optimal daily values.",
          "type": "string"
        },
        "dataSourcesParagraphForCause": {
          "description": "Example: Sleep Duration data was primarily collected using <a href=\"https://www.amazon.com/Fitbit-Charge-Heart-Fitness-Wristband/dp/B01K9S260E/ref=as_li_ss_tl?ie=UTF8&qid=1493518902&sr=8-3&keywords=fitbit&th=1&linkCode=ll1&tag=quant08-20&linkId=b357b0833de73b0c4e935fd7c13a079e\">Fitbit</a>.  <a href=\"https://www.amazon.com/Fitbit-Charge-Heart-Fitness-Wristband/dp/B01K9S260E/ref=as_li_ss_tl?ie=UTF8&qid=1493518902&sr=8-3&keywords=fitbit&th=1&linkCode=ll1&tag=quant08-20&linkId=b357b0833de73b0c4e935fd7c13a079e\">Fitbit</a> makes activity tracking easy and automatic.",
          "type": "string"
        },
        "instructionsForEffect": {
          "description": "Example: <a href=\"https://quantimo.do\">Obtain QuantiModo</a> and use it to record your Overall Mood. Once you have a <a href=\"https://quantimo.do\">QuantiModo</a> account, <a href=\"https://app.quantimo.do/ionic/Modo/www/#/app/import\">connect your  QuantiModo account at QuantiModo</a> to automatically import and analyze your data.",
          "type": "string"
        },
        "instructionsForCause": {
          "description": "Example: <a href=\"https://www.amazon.com/Fitbit-Charge-Heart-Fitness-Wristband/dp/B01K9S260E/ref=as_li_ss_tl?ie=UTF8&qid=1493518902&sr=8-3&keywords=fitbit&th=1&linkCode=ll1&tag=quant08-20&linkId=b357b0833de73b0c4e935fd7c13a079e\">Obtain Fitbit</a> and use it to record your Sleep Duration. Once you have a <a href=\"https://www.amazon.com/Fitbit-Charge-Heart-Fitness-Wristband/dp/B01K9S260E/ref=as_li_ss_tl?ie=UTF8&qid=1493518902&sr=8-3&keywords=fitbit&th=1&linkCode=ll1&tag=quant08-20&linkId=b357b0833de73b0c4e935fd7c13a079e\">Fitbit</a> account, <a href=\"https://app.quantimo.do/ionic/Modo/www/#/app/import\">connect your  Fitbit account at QuantiModo</a> to automatically import and analyze your data.",
          "type": "string"
        },
        "predictsLowEffectChangeSentenceFragment": {
          "description": "Example: , on average, 3.25% ",
          "type": "string"
        },
        "predictsHighEffectChangeSentenceFragment": {
          "description": "Example: , on average, 3.54% ",
          "type": "string"
        },
        "effectDataSource": {
          "$ref": "#/definitions/DataSource"
        },
        "causeDataSource": {
          "$ref": "#/definitions/DataSource"
        },
        "studyLinkEmail": {
          "description": "Example: mailto:?subject=N1%20Study%3A%20Sleep%20Duration%20Predicts%20Lower%20Overall%20Mood&body=Check%20out%20my%20study%20at%20https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DSleep%2520Duration%26effectVariableName%3DOverall%2520Mood%26userId%3D230%0A%0AHave%20a%20great%20day!",
          "type": "string"
        },
        "distanceFromMiddleToBeHightLowEffect": {
          "description": "Example: 25",
          "type": "integer"
        },
        "numberOfSamples": {
          "description": "Example: 1011",
          "type": "integer"
        },
        "charts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Chart"
          }
        },
        "effectUnit": {
          "description": "Example: /5",
          "type": "string"
        },
        "causeVariableImageUrl": {
          "description": "Example: https://maxcdn.icons8.com/Color/PNG/96/Household/sleeping_in_bed-96.png",
          "type": "string"
        },
        "causeVariableIonIcon": {
          "description": "Example: ion-ios-cloudy-night-outline",
          "type": "string"
        },
        "effectVariableImageUrl": {
          "description": "Example: https://maxcdn.icons8.com/Color/PNG/96/Cinema/theatre_mask-96.png",
          "type": "string"
        },
        "effectVariableIonIcon": {
          "description": "Example: ion-happy-outline",
          "type": "string"
        }
      }
    },
    "AggregatedCorrelationArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AggregatedCorrelation"
      }
    },
    "Scope": {
      "properties": {
        "scalar": {
          "description": "Example: user_likes",
          "type": "string"
        }
      }
    },
    "ScopeArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Scope"
      }
    },
    "ConnectorArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Connector"
      }
    },
    "Highchart": {
      "properties": {
        "chartConfig": {
          "$ref": "#/definitions/ChartConfig"
        },
        "chartTitle": {
          "description": "Example: Overall Mood following Sleep Duration (R = -0.173)",
          "type": "string"
        },
        "chartId": {
          "description": "Example: correlationScatterPlot",
          "type": "string"
        },
        "explanation": {
          "description": "Example: The chart above indicates that an increase in Sleep Duration is usually followed by an decrease in Overall Mood.",
          "type": "string"
        }
      }
    },
    "HighchartArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Highchart"
      }
    },
    "GetAggregatedCorrelationsResponse": {
      "properties": {
        "causeVariableName": {
          "description": "Example: Very Distracting Time",
          "type": "string"
        },
        "effectVariableName": {
          "description": "Example: Video Activities",
          "type": "string"
        },
        "aggregateQMScore": {
          "description": "Example: 0.26756148446253",
          "type": "number",
          "format": "double"
        },
        "durationOfAction": {
          "description": "Example: 604800",
          "type": "integer"
        },
        "correlationCoefficient": {
          "description": "Example: 0.3538",
          "type": "number",
          "format": "double"
        },
        "numberOfCorrelations": {
          "description": "Example: 21",
          "type": "integer"
        },
        "numberOfPairs": {
          "description": "Example: 146",
          "type": "integer"
        },
        "numberOfUsers": {
          "description": "Example: 21",
          "type": "integer"
        },
        "onsetDelay": {
          "description": "Example: 0",
          "type": "integer"
        },
        "optimalPearsonProduct": {
          "description": "Example: 0.20105795420291",
          "type": "number",
          "format": "double"
        },
        "statisticalSignificance": {
          "description": "Example: 0.6614",
          "type": "number",
          "format": "double"
        },
        "valuePredictingHighOutcome": {
          "description": "Example: 2.03",
          "type": "number",
          "format": "double"
        },
        "valuePredictingLowOutcome": {
          "description": "Example: 1.04",
          "type": "number",
          "format": "double"
        },
        "causeVariableDefaultUnitId": {
          "description": "Example: 34",
          "type": "integer"
        },
        "averageDailyHighCause": {
          "description": "Example: 5",
          "type": "number",
          "format": "double"
        },
        "averageDailyLowCause": {
          "description": "Example: 1",
          "type": "number",
          "format": "double"
        },
        "averageEffect": {
          "description": "Example: 3",
          "type": "number",
          "format": "double"
        },
        "averageEffectFollowingHighCause": {
          "description": "Example: 5",
          "type": "number",
          "format": "double"
        },
        "averageEffectFollowingLowCause": {
          "description": "Example: 3",
          "type": "number",
          "format": "double"
        },
        "causeChanges": {
          "description": "Example: 2984",
          "type": "integer"
        },
        "causeVariableId": {
          "description": "Example: 5956878",
          "type": "integer"
        },
        "confidenceInterval": {
          "description": "Example: 0.79069937144827",
          "type": "number",
          "format": "double"
        },
        "createdAt": {
          "description": "Example: 2017-08-01 21:49:11",
          "type": "string",
          "format": "date-time"
        },
        "criticalTValue": {
          "description": "Example: 1.6604761904762",
          "type": "number",
          "format": "double"
        },
        "effectChanges": {
          "description": "Example: 2708",
          "type": "integer"
        },
        "effectVariableId": {
          "description": "Example: 5956912",
          "type": "integer"
        },
        "pValue": {
          "description": "Example: 0.09747619047619",
          "type": "number",
          "format": "double"
        },
        "predictsHighEffectChange": {
          "description": "Example: 36",
          "type": "integer"
        },
        "predictsLowEffectChange": {
          "description": "Example: -16",
          "type": "integer"
        },
        "tValue": {
          "description": "Example: 3.1761820531649",
          "type": "number",
          "format": "double"
        },
        "updatedAt": {
          "description": "Example: 2017-08-01 21:50:36",
          "type": "string",
          "format": "date-time"
        },
        "causeVariableCombinationOperation": {
          "description": "Example: SUM",
          "type": "string"
        },
        "causeVariableImageUrl": {
          "description": "Example: https://maxcdn.icons8.com/Color/PNG/96/Business/work-96.png",
          "type": "string"
        },
        "causeVariableIonIcon": {
          "description": "Example: ion-laptop",
          "type": "string"
        },
        "causeVariableMostCommonConnectorId": {
          "description": "Example: 11",
          "type": "integer"
        },
        "causeVariableCategoryId": {
          "description": "Example: 12",
          "type": "integer"
        },
        "effectVariableCombinationOperation": {
          "description": "Example: SUM",
          "type": "string"
        },
        "effectVariableDefaultUnitId": {
          "description": "Example: 34",
          "type": "integer"
        },
        "effectVariableImageUrl": {
          "description": "Example: https://maxcdn.icons8.com/Color/PNG/96/Sports/football-96.png",
          "type": "string"
        },
        "effectVariableIonIcon": {
          "description": "Example: ion-ios-body-outline",
          "type": "string"
        },
        "effectVariableMostCommonConnectorId": {
          "description": "Example: 11",
          "type": "integer"
        },
        "effectVariableCategoryId": {
          "description": "Example: 14",
          "type": "integer"
        },
        "reversePearsonCorrelationCoefficient": {
          "description": "Example: 0.2077898127704",
          "type": "number",
          "format": "double"
        },
        "predictivePearsonCorrelationCoefficient": {
          "description": "Example: 0.14597624010255",
          "type": "number",
          "format": "double"
        },
        "durationOfActionInHours": {
          "description": "Example: 168",
          "type": "integer"
        },
        "onsetDelayInHours": {
          "description": "Example: 0",
          "type": "integer"
        },
        "qmScore": {
          "description": "Example: 0.26756148446253",
          "type": "number",
          "format": "double"
        },
        "forwardPearsonCorrelationCoefficient": {
          "description": "Example: 0.3538",
          "type": "number",
          "format": "double"
        },
        "causeVariableCategoryName": {
          "description": "Example: Work",
          "type": "string"
        },
        "effectVariableCategoryName": {
          "description": "Example: Activity",
          "type": "string"
        },
        "causeVariableDefaultUnitAbbreviatedName": {
          "description": "Example: h",
          "type": "string"
        },
        "effectVariableDefaultUnitAbbreviatedName": {
          "description": "Example: h",
          "type": "string"
        },
        "causeVariableDefaultUnitName": {
          "description": "Example: Hours",
          "type": "string"
        },
        "effectVariableDefaultUnitName": {
          "description": "Example: Hours",
          "type": "string"
        },
        "effectUnit": {
          "description": "Example: h",
          "type": "string"
        },
        "significanceExplanation": {
          "description": "Example: Using a two-tailed t-test with alpha = 0.05, it was determined that the change in Video Activities is statistically significant at 95% confidence interval. ",
          "type": "string"
        },
        "significantDifference": {
          "description": "Example: true",
          "type": "boolean"
        },
        "direction": {
          "description": "Example: higher",
          "type": "string"
        },
        "effectSize": {
          "description": "Example: moderately positive",
          "type": "string"
        },
        "predictsHighEffectChangeSentenceFragment": {
          "description": "Example: , on average, 36% ",
          "type": "string"
        },
        "predictsLowEffectChangeSentenceFragment": {
          "description": "Example: , on average, 16% ",
          "type": "string"
        },
        "valuePredictingHighOutcomeExplanation": {
          "description": "Example: Video Activities, on average, 36% higher after around 2.03 h Very Distracting Time ",
          "type": "string"
        },
        "averageEffectFollowingHighCauseExplanation": {
          "description": "Example: Video Activities is 5h (67% higher) on average after days with around 5 h Very Distracting Time",
          "type": "string"
        },
        "valuePredictingLowOutcomeExplanation": {
          "description": "Example: Video Activities, on average, 16% lower after around 1.04 h Very Distracting Time ",
          "type": "string"
        },
        "strengthLevel": {
          "description": "Example: weak",
          "type": "string"
        },
        "confidenceLevel": {
          "description": "Example: low",
          "type": "string"
        },
        "predictorExplanation": {
          "description": "Example: Very Distracting Time Predicts Higher Video Activities",
          "type": "string"
        },
        "studyTitle": {
          "description": "Example: N1 Study: Very Distracting Time Predicts Higher Video Activities",
          "type": "string"
        },
        "studyAbstract": {
          "description": "Example: Aggregated data from 21 suggests with a low degree of confidence (p=0.097) that Very Distracting Time (Work) has a moderately positive predictive relationship (R=0.354) with Video Activities  (Activity).  The highest quartile of Video Activities  measurements were observed following an average 2.03h Very Distracting Time.  The lowest quartile of Video Activities  measurements were observed following an average 1.04h Very Distracting Time.",
          "type": "string"
        },
        "studyLinkStatic": {
          "description": "Example: https://local.quantimo.do/api/v2/study?causeVariableName=Very%20Distracting%20Time&effectVariableName=Video%20Activities",
          "type": "string"
        },
        "studyLinkDynamic": {
          "description": "Example: https://local.quantimo.do/ionic/Modo/www/index.html#/app/study?causeVariableName=Very%20Distracting%20Time&effectVariableName=Video%20Activities",
          "type": "string"
        },
        "studyLinkFacebook": {
          "description": "Example: https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DVery%2520Distracting%2520Time%26effectVariableName%3DVideo%2520Activities",
          "type": "string"
        },
        "studyLinkGoogle": {
          "description": "Example: https://plus.google.com/share?url=https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DVery%2520Distracting%2520Time%26effectVariableName%3DVideo%2520Activities",
          "type": "string"
        },
        "studyLinkTwitter": {
          "description": "Example: https://twitter.com/home?status=Very%20Distracting%20Time%20Predicts%20Higher%20Video%20Activities%20https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DVery%2520Distracting%2520Time%26effectVariableName%3DVideo%2520Activities%20%40quantimodo",
          "type": "string"
        },
        "studyLinkEmail": {
          "description": "Example: mailto:?subject=N1%20Study%3A%20Very%20Distracting%20Time%20Predicts%20Higher%20Video%20Activities&body=Check%20out%20my%20study%20at%20https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DVery%2520Distracting%2520Time%26effectVariableName%3DVideo%2520Activities%0A%0AHave%20a%20great%20day!",
          "type": "string"
        },
        "gaugeImage": {
          "description": "Example: https://s3.amazonaws.com/quantimodo-docs/images/gauge-moderately-positive-relationship.png",
          "type": "string"
        },
        "gaugeImageSquare": {
          "description": "Example: https://s3.amazonaws.com/quantimodo-docs/images/gauge-moderately-positive-relationship-200-200.png",
          "type": "string"
        },
        "imageUrl": {
          "description": "Example: https://s3-us-west-1.amazonaws.com/qmimages/variable_categories_gauges_logo_background/gauge-moderately-positive-relationship_work_activity_logo_background.png",
          "type": "string"
        },
        "averageVote": {
          "description": "Example: ",
          "type": "string"
        },
        "causeVariableCommonAlias": {
          "description": "Example: ",
          "type": "string"
        },
        "causeVariableInformationalUrl": {
          "description": "Example: ",
          "type": "string"
        },
        "causeVariableProductUrl": {
          "description": "Example: ",
          "type": "string"
        },
        "effectVariableCommonAlias": {
          "description": "Example: ",
          "type": "string"
        },
        "effectVariableInformationalUrl": {
          "description": "Example: ",
          "type": "string"
        },
        "effectVariableProductUrl": {
          "description": "Example: ",
          "type": "string"
        },
        "userVote": {
          "description": "Example: ",
          "type": "string"
        },
        "vote": {
          "description": "Example: ",
          "type": "string"
        },
        "perDaySentenceFragment": {
          "description": "Example: ",
          "type": "string"
        },
        "averageEffectFollowingLowCauseExplanation": {
          "description": "Example: ",
          "type": "string"
        }
      }
    },
    "GetAggregatedCorrelationsResponseArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/GetAggregatedCorrelationsResponse"
      }
    },
    "GetMeasurementsResponse": {
      "properties": {
        "startTimeEpoch": {
          "description": "Example: 1502306315",
          "type": "integer"
        },
        "unitId": {
          "description": "Example: 10",
          "type": "integer"
        },
        "variableId": {
          "description": "Example: 5970988",
          "type": "integer"
        },
        "variableName": {
          "description": "Example: Unique Test Variable 1502306315",
          "type": "string"
        },
        "variableCategoryId": {
          "description": "Example: 1",
          "type": "integer"
        },
        "value": {
          "description": "Example: 1",
          "type": "number",
          "format": "double"
        },
        "id": {
          "description": "Example: 1060761015",
          "type": "integer"
        },
        "originalValue": {
          "description": "Example: 1",
          "type": "number",
          "format": "double"
        },
        "originalUnitId": {
          "description": "Example: 10",
          "type": "integer"
        },
        "clientId": {
          "description": "Example: pImUNsI6T5Ysd81k",
          "type": "string"
        },
        "sourceName": {
          "description": "Example: pImUNsI6T5Ysd81k",
          "type": "string"
        },
        "createdAt": {
          "description": "Example: 2017-08-09 19:19:05",
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "description": "Example: 2017-08-09 19:19:05",
          "type": "string",
          "format": "date-time"
        },
        "variableCategoryName": {
          "description": "Example: Emotions",
          "type": "string"
        },
        "userVariableVariableCategoryId": {
          "description": "Example: 1",
          "type": "integer"
        },
        "ionIcon": {
          "description": "Example: ion-happy-outline",
          "type": "string"
        },
        "svgUrl": {
          "description": "Example: https://app.quantimo.do/ionic/Modo/www/img/variable_categories/emotions.svg",
          "type": "string"
        },
        "pngUrl": {
          "description": "Example: https://app.quantimo.do/ionic/Modo/www/img/variable_categories/emotions.png",
          "type": "string"
        },
        "pngPath": {
          "description": "Example: img/rating/100/numeric_rating_button_100_1.png",
          "type": "string"
        },
        "variableCategoryImageUrl": {
          "description": "Example: https://maxcdn.icons8.com/Color/PNG/96/Cinema/theatre_mask-96.png",
          "type": "string"
        },
        "manualTracking": {
          "description": "Example: true",
          "type": "boolean"
        },
        "userVariableVariableCategoryName": {
          "description": "Example: Emotions",
          "type": "string"
        },
        "startTimeString": {
          "description": "Example: 2017-08-09T19:18:35+00:00",
          "type": "string",
          "format": "date-time"
        },
        "unitName": {
          "description": "Example: 1 to 5 Rating",
          "type": "string"
        },
        "unitAbbreviatedName": {
          "description": "Example: /5",
          "type": "string"
        },
        "unitCategoryId": {
          "description": "Example: 5",
          "type": "integer"
        },
        "unitCategoryName": {
          "description": "Example: Rating",
          "type": "string"
        },
        "originalUnitName": {
          "description": "Example: 1 to 5 Rating",
          "type": "string"
        },
        "originalUnitAbbreviatedName": {
          "description": "Example: /5",
          "type": "string"
        },
        "originalUnitCategoryId": {
          "description": "Example: 5",
          "type": "integer"
        },
        "originalUnitCategoryName": {
          "description": "Example: Rating",
          "type": "string"
        },
        "minimumAllowedValue": {
          "description": "Example: 1",
          "type": "integer"
        },
        "maximumAllowedValue": {
          "description": "Example: 5",
          "type": "integer"
        },
        "inputType": {
          "description": "Example: oneToFiveNumbers",
          "type": "string"
        }
      }
    },
    "GetMeasurementsResponseArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/GetMeasurementsResponse"
      }
    },
    "PairArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Pair"
      }
    },
    "GetPairsResponse": {
      "properties": {
        "causeMeasurementValue": {
          "description": "Example: 2.0166666666667",
          "type": "number",
          "format": "double"
        },
        "effectMeasurementValue": {
          "description": "Example: 4",
          "type": "number",
          "format": "double"
        },
        "timestamp": {
          "description": "Example: 1438876142",
          "type": "integer"
        },
        "startTimeString": {
          "description": "Example: 2015-08-06 15:49:02",
          "type": "string",
          "format": "date-time"
        },
        "causeMeasurement": {
          "description": "Example: 2.0166666666667",
          "type": "number",
          "format": "double"
        },
        "effectMeasurement": {
          "description": "Example: 4",
          "type": "number",
          "format": "double"
        }
      }
    },
    "GetPairsResponseArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/GetPairsResponse"
      }
    },
    "GetPublicVariablesResponse": {
      "properties": {
        "id": {
          "description": "Example: 1398",
          "type": "integer"
        },
        "name": {
          "description": "Example: Overall Mood",
          "type": "string"
        },
        "causeOnly": {
          "description": "Example: false",
          "type": "boolean"
        },
        "combinationOperation": {
          "description": "Example: MEAN",
          "type": "string"
        },
        "commonAlias": {
          "description": "Example: Mood_(psychology)",
          "type": "string"
        },
        "createdAt": {
          "description": "Example: 2015-03-05 05:01:48",
          "type": "string",
          "format": "date-time"
        },
        "defaultUnitId": {
          "description": "Example: 10",
          "type": "integer"
        },
        "unitId": {
          "description": "Example: 10",
          "type": "integer"
        },
        "description": {
          "description": "Example: positive",
          "type": "string"
        },
        "ionIcon": {
          "description": "Example: ion-happy-outline",
          "type": "string"
        },
        "kurtosis": {
          "description": "Example: 4.3527259032083",
          "type": "number",
          "format": "double"
        },
        "mean": {
          "description": "Example: 3.1359987410015",
          "type": "number",
          "format": "double"
        },
        "median": {
          "description": "Example: 3.1295731659047",
          "type": "number",
          "format": "double"
        },
        "mostCommonConnectorId": {
          "description": "Example: 10",
          "type": "integer"
        },
        "mostCommonOriginalUnitId": {
          "description": "Example: 10",
          "type": "integer"
        },
        "mostCommonValue": {
          "description": "Example: 3",
          "type": "number",
          "format": "double"
        },
        "numberOfAggregateCorrelationsAsCause": {
          "description": "Example: 329",
          "type": "integer"
        },
        "numberOfAggregateCorrelationsAsEffect": {
          "description": "Example: 890",
          "type": "integer"
        },
        "numberOfRawMeasurements": {
          "description": "Example: 544298",
          "type": "integer"
        },
        "numberOfTrackingReminders": {
          "description": "Example: 102",
          "type": "integer"
        },
        "numberOfUniqueValues": {
          "description": "Example: 7",
          "type": "integer"
        },
        "numberOfUserVariables": {
          "description": "Example: 4003",
          "type": "integer"
        },
        "secondMostCommonValue": {
          "description": "Example: 4",
          "type": "number",
          "format": "double"
        },
        "skewness": {
          "description": "Example: -0.23360852317166",
          "type": "number",
          "format": "double"
        },
        "standardDeviation": {
          "description": "Example: 0.7214901744899",
          "type": "number",
          "format": "double"
        },
        "thirdMostCommonValue": {
          "description": "Example: 2",
          "type": "number",
          "format": "double"
        },
        "updatedAt": {
          "description": "Example: 2017-07-31 19:55:38",
          "type": "string",
          "format": "date-time"
        },
        "valence": {
          "description": "Example: positive",
          "type": "string"
        },
        "variableCategoryId": {
          "description": "Example: 1",
          "type": "integer"
        },
        "variance": {
          "description": "Example: 22.541085893948",
          "type": "number",
          "format": "double"
        },
        "outcome": {
          "description": "Example: true",
          "type": "boolean"
        },
        "public": {
          "description": "Example: true",
          "type": "boolean"
        },
        "minimumAllowedValue": {
          "description": "Example: 1",
          "type": "integer"
        },
        "maximumAllowedValue": {
          "description": "Example: 5",
          "type": "integer"
        },
        "onsetDelay": {
          "description": "Example: 0",
          "type": "integer"
        },
        "durationOfAction": {
          "description": "Example: 86400",
          "type": "integer"
        },
        "variableCategoryName": {
          "description": "Example: Emotions",
          "type": "string"
        },
        "userVariableVariableCategoryId": {
          "description": "Example: 1",
          "type": "integer"
        },
        "svgUrl": {
          "description": "Example: https://app.quantimo.do/ionic/Modo/www/img/variable_categories/emotions.svg",
          "type": "string"
        },
        "pngUrl": {
          "description": "Example: https://app.quantimo.do/ionic/Modo/www/img/variable_categories/emotions.png",
          "type": "string"
        },
        "pngPath": {
          "description": "Example: img/variable_categories/emotions.png",
          "type": "string"
        },
        "variableCategoryImageUrl": {
          "description": "Example: https://maxcdn.icons8.com/Color/PNG/96/Cinema/theatre_mask-96.png",
          "type": "string"
        },
        "manualTracking": {
          "description": "Example: true",
          "type": "boolean"
        },
        "userVariableVariableCategoryName": {
          "description": "Example: Emotions",
          "type": "string"
        },
        "category": {
          "description": "Example: Emotions",
          "type": "string"
        },
        "durationOfActionInHours": {
          "description": "Example: 24",
          "type": "integer"
        },
        "onsetDelayInHours": {
          "description": "Example: 0",
          "type": "integer"
        },
        "variableName": {
          "description": "Example: Overall Mood",
          "type": "string"
        },
        "numberOfMeasurements": {
          "description": "Example: 544298",
          "type": "integer"
        },
        "unitName": {
          "description": "Example: 1 to 5 Rating",
          "type": "string"
        },
        "unitAbbreviatedName": {
          "description": "Example: /5",
          "type": "string"
        },
        "unitCategoryId": {
          "description": "Example: 5",
          "type": "integer"
        },
        "unitCategoryName": {
          "description": "Example: Rating",
          "type": "string"
        },
        "defaultUnitName": {
          "description": "Example: 1 to 5 Rating",
          "type": "string"
        },
        "defaultUnitAbbreviatedName": {
          "description": "Example: /5",
          "type": "string"
        },
        "defaultUnitCategoryId": {
          "description": "Example: 5",
          "type": "integer"
        },
        "defaultUnitCategoryName": {
          "description": "Example: Rating",
          "type": "string"
        },
        "availableDefaultUnits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Unit"
          }
        },
        "userVariableDefaultUnitId": {
          "description": "Example: 10",
          "type": "integer"
        },
        "userVariableDefaultUnitName": {
          "description": "Example: 1 to 5 Rating",
          "type": "string"
        },
        "userVariableDefaultUnitAbbreviatedName": {
          "description": "Example: /5",
          "type": "string"
        },
        "userVariableDefaultUnitCategoryId": {
          "description": "Example: 5",
          "type": "integer"
        },
        "userVariableDefaultUnitCategoryName": {
          "description": "Example: Rating",
          "type": "string"
        },
        "inputType": {
          "description": "Example: happiestFaceIsFive",
          "type": "string"
        }
      }
    },
    "GetPublicVariablesResponseArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/GetPublicVariablesResponse"
      }
    },
    "GetTrackingRemindersResponseArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/GetTrackingRemindersResponse"
      }
    }
  },
  "securityDefinitions": {
    "quantimodo_oauth2": {
      "type": "oauth2",
      "authorizationUrl": "https://app.quantimo.do/api/v2/oauth/authorize",
      "tokenUrl": "https://app.quantimo.do/api/v2/oauth/token",
      "flow": "accessCode",
      "scopes": {
        "basic": "Allows you to read user info (display name, email, etc).",
        "readmeasurements": "Allows one to read a user's data",
        "writemeasurements": "Allows you to write user data"
      }
    },
    "access_token": {
      "type": "apiKey",
      "name": "access_token",
      "in": "query"
    },
    "client_id": {
      "type": "apiKey",
      "name": "clientId",
      "in": "query"
    }
  }
}